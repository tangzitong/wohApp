// Returns true if the uploaded file is an image and its size is below the given number of MB.
function isImageBelowMaxSize(maxSizeMB) {
  return request.resource.size < maxSizeMB * 1024 * 1024
      && request.resource.contentType.matches('image/.*');
}

service firebase.storage {
  match /b/{bucket}/o {
    match /{userId}/{messageId}/{fileName} {
      allow write: if request.auth != null && request.auth.uid == userId && isImageBelowMaxSize(5);
      allow read;
    }
    match /users/{uid} {
      allow read, write: if uid == request.auth.uid && isImageBelowMaxSize(1);
    }
    match /jobs/{uid}/{fileName} {
      allow read, write: if uid == request.auth.uid && isImageBelowMaxSize(1);
    }
    match /companys/{uid}/{fileName} {
      allow read, write: if uid == request.auth.uid && isImageBelowMaxSize(1);
    }
    match /projects/{uid}/{fileName} {
      allow read, write: if uid == request.auth.uid && isImageBelowMaxSize(1);
    }
    match /talents/{uid}/{fileName} {
      allow read, write: if uid == request.auth.uid && isImageBelowMaxSize(1);
    }
    match /consultants/{uid}/{fileName} {
      allow read, write: if uid == request.auth.uid && isImageBelowMaxSize(1);
    }
    match /dispatchers/{uid}/{fileName} {
      allow read, write: if uid == request.auth.uid && isImageBelowMaxSize(1);
    }
    match /knowledges/{uid}/{fileName} {
      allow read, write: if uid == request.auth.uid && isImageBelowMaxSize(1);
    }
    match /tools/{uid}/{fileName} {
      allow read, write: if uid == request.auth.uid && isImageBelowMaxSize(1);
    }
    match /events/{uid}/{fileName} {
      allow read, write: if uid == request.auth.uid && isImageBelowMaxSize(1);
    }
  }
}

