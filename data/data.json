{
  "comments" : {
    "data" : {
      "0" : {
        "avatar" : "1",
        "name" : "Cory Bergman",
        "postid" : "11",
        "text" : "wow that's some serious chat action",
        "time" : "1404705240"
      },
      "1" : {
        "avatar" : "2",
        "name" : "Rhonda Irvine",
        "postid" : "12",
        "text" : "what country is covered by your food app?",
        "time" : "1404705260"
      },
      "2" : {
        "avatar" : "3",
        "name" : "Nathan Lawson",
        "postid" : "13",
        "text" : "much  more interesting than a stupid grumpy cat",
        "time" : "1404705300"
      },
      "3" : {
        "avatar" : "4",
        "name" : "Vaughn",
        "postid" : "14",
        "text" : "Signed the petition. Hope it's not too late.",
        "time" : "1404705400"
      },
      "-LbRHgPyDAMcmJnsf_nF" : {
        "-LcRMrWF6UJfJ3gH8-I-" : {
          "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "id" : "-LcRMrWF6UJfJ3gH8-I-",
          "name" : "test1",
          "postid" : "-LbRHgPyDAMcmJnsf_nF",
          "text" : "sss",
          "time" : 1555254181076
        },
        "-LcRN4UeAaJJZuoRZyEP" : {
          "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "id" : "-LcRN4UeAaJJZuoRZyEP",
          "name" : "test1",
          "postid" : "-LbRHgPyDAMcmJnsf_nF",
          "text" : "xxx",
          "time" : 1555254238316
        },
        "-LcRNklevQTeQlpBWx0U" : {
          "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "id" : "-LcRNklevQTeQlpBWx0U",
          "name" : "test1",
          "postid" : "-LbRHgPyDAMcmJnsf_nF",
          "text" : "sss",
          "time" : 1555254414666
        },
        "-LcRPW2iMEZ6GsX-wg5u" : {
          "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "id" : "-LcRPW2iMEZ6GsX-wg5u",
          "name" : "test1",
          "postid" : "-LbRHgPyDAMcmJnsf_nF",
          "text" : "test comment",
          "time" : 1555254874587
        },
        "-LcRQ3lb9EYPAUMiuq26" : {
          "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "id" : "-LcRQ3lb9EYPAUMiuq26",
          "name" : "test1",
          "postid" : "-LbRHgPyDAMcmJnsf_nF",
          "text" : "sssxxxx",
          "time" : 1555255021307
        },
        "-LcRQvxtzTCO8pP38pV1" : {
          "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "id" : "-LcRQvxtzTCO8pP38pV1",
          "name" : "test1",
          "postid" : "-LbRHgPyDAMcmJnsf_nF",
          "text" : "test for the last time",
          "time" : 1555255247166
        }
      },
      "-LdLmvv2SvIuEAO7e-ch" : {
        "-LdRfOl7dPjSLNuhUrCL" : {
          "avatar" : "GQxxS27YoMV4aMVZ69C9uVimoG63",
          "id" : "-LdRfOl7dPjSLNuhUrCL",
          "name" : "test5",
          "postid" : "-LdLmvv2SvIuEAO7e-ch",
          "text" : "test",
          "time" : 1556333042903
        }
      }
    },
    "err_code" : 0,
    "err_msg" : "success"
  },
  "companys" : {
    "data" : {
      "-LbW068uZTzWv84W5fNq" : {
        "Fax" : "1",
        "HP" : "1",
        "Manager" : "1",
        "Tel" : "1",
        "address" : "11",
        "application_count" : 0,
        "area" : "1",
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "companytype" : "1",
        "created_at" : 1554258359052,
        "id" : "-LbW068uZTzWv84W5fNq",
        "industry" : "2",
        "like_count" : 0,
        "name" : "test company3",
        "nickname" : "test1",
        "photo" : "",
        "update_at" : 1554461027867
      },
      "-Lbfb0NmorPWFCnG4IA8" : {
        "Fax" : "",
        "HP" : "",
        "Manager" : "",
        "Tel" : "",
        "address" : "",
        "application_count" : 0,
        "avatar" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
        "companytype" : "1",
        "created_at" : 1554436069051,
        "id" : "-Lbfb0NmorPWFCnG4IA8",
        "like_count" : 0,
        "name" : "",
        "nickname" : "test1"
      },
      "-LbkD4fQjqDyGK1j_3dH" : {
        "Fax" : "sss",
        "HP" : "sss",
        "Manager" : "sss",
        "Tel" : "sss",
        "address" : "ssss",
        "application_count" : 0,
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "companytype" : "1",
        "created_at" : 1554513419106,
        "id" : "-LbkD4fQjqDyGK1j_3dH",
        "like_count" : 0,
        "name" : "ssss",
        "nickname" : "test1"
      },
      "-Lc-YqFE4hBsd-Wk1DP5" : {
        "Fax" : "",
        "HP" : "",
        "Manager" : "",
        "Tel" : "",
        "address" : "",
        "application_count" : 0,
        "area" : "1",
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "companytype" : "1",
        "created_at" : 1554787558607,
        "id" : "-Lc-YqFE4hBsd-Wk1DP5",
        "industry" : "2",
        "like_count" : 0,
        "name" : "",
        "nickname" : "test1"
      },
      "-Lc-ZGlYd_AoMNoW4ArZ" : {
        "Fax" : "vvvv",
        "HP" : "https://console.firebase.google.com/",
        "Manager" : "bbb",
        "Tel" : "hjhh",
        "address" : "ssss",
        "application_count" : 0,
        "area" : "1",
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "companytype" : "1",
        "created_at" : 1554787671328,
        "id" : "-Lc-ZGlYd_AoMNoW4ArZ",
        "industry" : "2",
        "like_count" : 0,
        "name" : "sss",
        "nickname" : "test1",
        "photo" : ""
      },
      "-Lc-aDeujDxx19uVyXZp" : {
        "Fax" : "ｓｓｓ",
        "HP" : "jp.highwayns.com",
        "Manager" : "ｓｓｓ",
        "Tel" : "sss",
        "address" : "sss",
        "application_count" : 0,
        "area" : "1",
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "companytype" : "1",
        "created_at" : 1554788183520,
        "id" : "-Lc-aDeujDxx19uVyXZp",
        "industry" : "2",
        "like_count" : 0,
        "name" : "海威",
        "nickname" : "test1"
      }
    },
    "err_code" : 0,
    "err_msg" : "success"
  },
  "consultants" : {
    "data" : {
      "-LbW06mrQIcnI-hUSrnL" : {
        "Fax" : "1",
        "HP" : "1",
        "Manager" : "1",
        "Tel" : "1",
        "address" : "11",
        "application_count" : 0,
        "area" : "1",
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "consultanttype" : "1",
        "created_at" : 1554258361670,
        "id" : "-LbW06mrQIcnI-hUSrnL",
        "industry" : "1",
        "like_count" : 0,
        "name" : "test consultant2",
        "nickname" : "test1",
        "photo" : "",
        "update_at" : 1554258362097
      },
      "-LbYYDCsAdRcUcrTtndD" : {
        "Fax" : "xxx",
        "HP" : "sss",
        "Manager" : "xxx",
        "Tel" : "xzxx",
        "address" : "xzxx",
        "application_count" : 0,
        "area" : "1",
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "consultanttype" : "2",
        "created_at" : 1554300856662,
        "id" : "-LbYYDCsAdRcUcrTtndD",
        "industry" : "2",
        "like_count" : 0,
        "name" : "xxx",
        "nickname" : "test1"
      }
    }
  },
  "contacts" : {
    "data" : [ {
      "avatar" : "1",
      "header" : "A",
      "location" : "London",
      "nickname" : "Alex Black"
    }, {
      "avatar" : "5",
      "header" : "A",
      "location" : "Moscow",
      "nickname" : "Alex Proti"
    }, {
      "avatar" : "3",
      "header" : "A",
      "location" : "Kiev",
      "nickname" : "Andrew Smith"
    }, {
      "avatar" : "7",
      "header" : "A",
      "location" : "Kiev",
      "nickname" : "Ann Ryder"
    }, {
      "avatar" : "8",
      "header" : "D",
      "location" : "Kiev",
      "nickname" : "Daniel Ricci"
    }, {
      "avatar" : "3",
      "header" : "I",
      "location" : "Kiev",
      "nickname" : "Ivan Ivanov"
    }, {
      "avatar" : "6",
      "header" : "K",
      "location" : "Odessa",
      "nickname" : "Kate Lebedeva"
    }, {
      "avatar" : "10",
      "header" : "K",
      "location" : "Kiev",
      "nickname" : "Kate Shy"
    }, {
      "avatar" : "1",
      "header" : "M",
      "location" : "Praha",
      "nickname" : "Michael Fold"
    }, {
      "avatar" : "2",
      "header" : "N",
      "location" : "Moscow",
      "nickname" : "Nadya Lovin"
    }, {
      "avatar" : "4",
      "header" : "O",
      "location" : "Odessa",
      "nickname" : "Oleg Price"
    }, {
      "avatar" : "5",
      "header" : "O",
      "location" : "Kiev",
      "nickname" : "Oleg Ryzhkov"
    }, {
      "avatar" : "9",
      "header" : "O",
      "location" : "Praha",
      "nickname" : "Olga Blare"
    }, {
      "avatar" : "10",
      "header" : "S",
      "location" : "Milan",
      "nickname" : "Svetlana Kot"
    } ],
    "err_code" : 0,
    "err_msg" : "success"
  },
  "datatype" : {
    "enUS" : {
      "area" : {
        "data" : [ {
          "id" : "1",
          "text" : "Tokyo"
        }, {
          "id" : "2",
          "text" : "Beijing"
        }, {
          "id" : "3",
          "text" : "Newyork"
        }, {
          "id" : "4",
          "text" : "Osaka"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "companytype" : {
        "data" : [ {
          "id" : "1",
          "name" : "Stock Corporation",
          "nickname" : "S"
        }, {
          "id" : "2",
          "name" : "Limited Corporation",
          "nickname" : "L"
        }, {
          "id" : "3",
          "name" : "Contact Corporation",
          "nickname" : "C"
        }, {
          "id" : "4",
          "name" : "International Corporation",
          "nickname" : "I"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "consultanttype" : {
        "data" : [ {
          "id" : "1",
          "name" : "Talent",
          "nickname" : "T"
        }, {
          "id" : "2",
          "name" : "Consultant",
          "nickname" : "C"
        }, {
          "id" : "3",
          "name" : "Dispatcher",
          "nickname" : "D"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "dispatchertype" : {
        "data" : [ {
          "id" : "1",
          "name" : "Talent",
          "nickname" : "T"
        }, {
          "id" : "2",
          "name" : "Consultant",
          "nickname" : "C"
        }, {
          "id" : "3",
          "name" : "Dispatcher",
          "nickname" : "D"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "eventtype" : {
        "data" : [ {
          "id" : "1",
          "name" : "AI Learning Event",
          "nickname" : "A"
        }, {
          "id" : "2",
          "name" : "Dispach Learning Event",
          "nickname" : "H"
        }, {
          "id" : "3",
          "name" : "System Development Event",
          "nickname" : "K"
        }, {
          "id" : "4",
          "name" : "Project Management Event",
          "nickname" : "P"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "industry" : {
        "data" : [ {
          "id" : "1",
          "text" : "System Development"
        }, {
          "id" : "2",
          "text" : "Software Development"
        }, {
          "id" : "3",
          "text" : "Mobile Development"
        }, {
          "id" : "4",
          "text" : "System Mantainence"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "jobtype" : {
        "data" : [ {
          "id" : "1",
          "name" : "Normal",
          "nickname" : "N"
        }, {
          "id" : "2",
          "name" : "Contact",
          "nickname" : "C"
        }, {
          "id" : "3",
          "name" : "Arbeit",
          "nickname" : "A"
        }, {
          "id" : "4",
          "name" : "Dispatch",
          "nickname" : "D"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "knowledgetype" : {
        "data" : [ {
          "id" : "1",
          "name" : "Program Language",
          "nickname" : "P"
        }, {
          "id" : "2",
          "name" : "Database Management",
          "nickname" : "D"
        }, {
          "id" : "3",
          "name" : "Mobile Development",
          "nickname" : "M"
        }, {
          "id" : "4",
          "name" : "Math",
          "nickname" : "M"
        }, {
          "id" : "5",
          "language" : "jaJP",
          "name" : "OS",
          "nickname" : "O"
        }, {
          "id" : "6",
          "name" : "Framework",
          "nickname" : "F"
        }, {
          "id" : "7",
          "name" : "Hardware",
          "nickname" : "H"
        }, {
          "id" : "8",
          "name" : "Cloud",
          "nickname" : "C"
        }, {
          "id" : "9",
          "name" : "Application",
          "nickname" : "A"
        }, {
          "id" : "10",
          "name" : "Project Management",
          "nickname" : "P"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "projecttype" : {
        "data" : [ {
          "id" : "1",
          "name" : "Max Price",
          "nickname" : "M"
        }, {
          "id" : "2",
          "name" : "Fix Price",
          "nickname" : "F"
        }, {
          "id" : "3",
          "name" : "Middle Price",
          "nickname" : "M"
        }, {
          "id" : "4",
          "name" : "Valuation",
          "nickname" : "V"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "talenttype" : {
        "data" : [ {
          "id" : "1",
          "name" : "Talent",
          "nickname" : "T"
        }, {
          "id" : "2",
          "name" : "Consultant",
          "nickname" : "C"
        }, {
          "id" : "3",
          "name" : "Dispatcher",
          "nickname" : "D"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "tooltype" : {
        "data" : [ {
          "id" : "1",
          "name" : "Voice Recognition",
          "nickname" : "V"
        }, {
          "id" : "2",
          "name" : "Image Recognition",
          "nickname" : "I"
        }, {
          "id" : "3",
          "name" : "Text Recognition",
          "nickname" : "T"
        }, {
          "id" : "4",
          "name" : "Other",
          "nickname" : "O"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      }
    },
    "err_code" : 0,
    "err_msg" : "success",
    "jaJP" : {
      "area" : {
        "data" : [ {
          "id" : "1",
          "text" : "东京"
        }, {
          "id" : "2",
          "text" : "北京"
        }, {
          "id" : "3",
          "text" : "ニューヨーク"
        }, {
          "id" : "4",
          "text" : "大阪"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "companytype" : {
        "data" : [ {
          "id" : "1",
          "name" : "株式会社",
          "nickname" : "株"
        }, {
          "id" : "2",
          "name" : "有限会社",
          "nickname" : "有"
        }, {
          "id" : "3",
          "name" : "合同会社",
          "nickname" : "合"
        }, {
          "id" : "4",
          "name" : "国際会社",
          "nickname" : "国"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "consultanttype" : {
        "data" : [ {
          "id" : "1",
          "name" : "タレント",
          "nickname" : "タ"
        }, {
          "id" : "2",
          "name" : "コンサルタント",
          "nickname" : "コ"
        }, {
          "id" : "3",
          "name" : "派遣者",
          "nickname" : "派"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "dispatchertype" : {
        "data" : [ {
          "id" : "1",
          "name" : "タレント",
          "nickname" : "タ"
        }, {
          "id" : "2",
          "name" : "コンサルタント",
          "nickname" : "コ"
        }, {
          "id" : "3",
          "name" : "派遣者",
          "nickname" : "派"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "eventtype" : {
        "data" : [ {
          "id" : "1",
          "name" : "AI勉強会",
          "nickname" : "A"
        }, {
          "id" : "2",
          "name" : "派遣営業会",
          "nickname" : "H"
        }, {
          "id" : "3",
          "name" : "開発勉強会",
          "nickname" : "K"
        }, {
          "id" : "4",
          "name" : "プロジェクト説明会",
          "nickname" : "P"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "industry" : {
        "data" : [ {
          "id" : "1",
          "text" : "システム開発"
        }, {
          "id" : "2",
          "text" : "ソフトウェア開発"
        }, {
          "id" : "3",
          "text" : "モビール開発"
        }, {
          "id" : "4",
          "text" : "システムメンテナンス"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "jobtype" : {
        "data" : [ {
          "id" : "1",
          "name" : "正社員",
          "nickname" : "正"
        }, {
          "id" : "2",
          "name" : "契約社員",
          "nickname" : "契"
        }, {
          "id" : "3",
          "name" : "アルバイト",
          "nickname" : "ア"
        }, {
          "id" : "4",
          "name" : "派遣社員",
          "nickname" : "派"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "knowledgetype" : {
        "data" : [ {
          "id" : "1",
          "name" : "プログラム",
          "nickname" : "プ"
        }, {
          "id" : "2",
          "name" : "データベース",
          "nickname" : "デ"
        }, {
          "id" : "3",
          "name" : "モベル開発",
          "nickname" : "モ"
        }, {
          "id" : "4",
          "name" : "数学",
          "nickname" : "す"
        }, {
          "id" : "5",
          "name" : "OS",
          "nickname" : "お"
        }, {
          "id" : "6",
          "name" : "フレームワーク",
          "nickname" : "フ"
        }, {
          "id" : "7",
          "name" : "ハードウェア",
          "nickname" : "ハ"
        }, {
          "id" : "8",
          "name" : "クラウド",
          "nickname" : "ク"
        }, {
          "id" : "9",
          "name" : "アプリケーション",
          "nickname" : "ア"
        }, {
          "id" : "10",
          "name" : "マネジメント",
          "nickname" : "マ"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "projecttype" : {
        "data" : [ {
          "id" : "1",
          "name" : "最低価格",
          "nickname" : "低"
        }, {
          "id" : "2",
          "name" : "指定価格",
          "nickname" : "定"
        }, {
          "id" : "3",
          "name" : "中間価格",
          "nickname" : "中"
        }, {
          "id" : "4",
          "name" : "評価",
          "nickname" : "評"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "talenttype" : {
        "data" : [ {
          "id" : "1",
          "name" : "タレント",
          "nickname" : "タ"
        }, {
          "id" : "2",
          "name" : "コンサルタント",
          "nickname" : "コ"
        }, {
          "id" : "3",
          "name" : "派遣者",
          "nickname" : "派"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "tooltype" : {
        "data" : [ {
          "id" : "1",
          "name" : "音声認識",
          "nickname" : "音"
        }, {
          "id" : "2",
          "name" : "画像認識",
          "nickname" : "画"
        }, {
          "id" : "3",
          "name" : "文字認識",
          "nickname" : "文"
        }, {
          "id" : "4",
          "name" : "その他",
          "nickname" : "他"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      }
    },
    "zhCN" : {
      "area" : {
        "data" : [ {
          "id" : "1",
          "text" : "东京"
        }, {
          "id" : "2",
          "text" : "北京"
        }, {
          "id" : "3",
          "text" : "纽约"
        }, {
          "id" : "4",
          "text" : "大阪"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "companytype" : {
        "data" : [ {
          "id" : "1",
          "name" : "有限责任公司",
          "nickname" : "有"
        }, {
          "id" : "2",
          "name" : "无限责任公司",
          "nickname" : "无"
        }, {
          "id" : "3",
          "name" : "合同公司",
          "nickname" : "合"
        }, {
          "id" : "4",
          "name" : "跨国公司",
          "nickname" : "国"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "consultanttype" : {
        "data" : [ {
          "id" : "1",
          "name" : "人才",
          "nickname" : "才"
        }, {
          "id" : "2",
          "name" : "咨询师",
          "nickname" : "咨"
        }, {
          "id" : "3",
          "name" : "派遣者",
          "nickname" : "派"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "dispatchertype" : {
        "data" : [ {
          "id" : "1",
          "name" : "人才",
          "nickname" : "才"
        }, {
          "id" : "2",
          "name" : "咨询师",
          "nickname" : "咨"
        }, {
          "id" : "3",
          "name" : "派遣者",
          "nickname" : "派"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "eventtype" : {
        "data" : [ {
          "id" : "1",
          "name" : "AI学习活动",
          "nickname" : "A"
        }, {
          "id" : "2",
          "name" : "派遣营业活动",
          "nickname" : "H"
        }, {
          "id" : "3",
          "name" : "开发学习活动",
          "nickname" : "K"
        }, {
          "id" : "4",
          "name" : "项目招标活动",
          "nickname" : "P"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "industry" : {
        "data" : [ {
          "id" : "1",
          "text" : "系统设计"
        }, {
          "id" : "2",
          "text" : "软件开发"
        }, {
          "id" : "3",
          "text" : "移动开发"
        }, {
          "id" : "4",
          "text" : "系统维护"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "jobtype" : {
        "data" : [ {
          "id" : "1",
          "name" : "正社员",
          "nickname" : "正"
        }, {
          "id" : "2",
          "name" : "契约社员",
          "nickname" : "契"
        }, {
          "id" : "3",
          "name" : "临时工",
          "nickname" : "临"
        }, {
          "id" : "4",
          "name" : "派遣社员",
          "nickname" : "派"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "knowledgetype" : {
        "data" : [ {
          "id" : "1",
          "name" : "程序设计",
          "nickname" : "程"
        }, {
          "id" : "2",
          "name" : "数据库",
          "nickname" : "数"
        }, {
          "id" : "3",
          "name" : "移动开发",
          "nickname" : "移"
        }, {
          "id" : "4",
          "name" : "数学",
          "nickname" : "数"
        }, {
          "id" : "5",
          "name" : "操作系统",
          "nickname" : "操"
        }, {
          "id" : "6",
          "name" : "系统架构",
          "nickname" : "系"
        }, {
          "id" : "7",
          "name" : "硬件",
          "nickname" : "硬"
        }, {
          "id" : "8",
          "name" : "云服务",
          "nickname" : "云"
        }, {
          "id" : "9",
          "name" : "应用开发",
          "nickname" : "应"
        }, {
          "id" : "10",
          "name" : "项目管理",
          "nickname" : "项"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "projecttype" : {
        "data" : [ {
          "id" : "1",
          "name" : "最低价格",
          "nickname" : "低"
        }, {
          "id" : "2",
          "name" : "指定价格",
          "nickname" : "指"
        }, {
          "id" : "3",
          "name" : "中间价格",
          "nickname" : "中"
        }, {
          "id" : "4",
          "name" : "评标",
          "nickname" : "评"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "talenttype" : {
        "data" : [ {
          "id" : "1",
          "name" : "人才",
          "nickname" : "才"
        }, {
          "id" : "2",
          "name" : "咨询师",
          "nickname" : "咨"
        }, {
          "id" : "3",
          "name" : "派遣者",
          "nickname" : "派"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      },
      "tooltype" : {
        "data" : [ {
          "id" : "1",
          "name" : "语音识别",
          "nickname" : "音"
        }, {
          "id" : "2",
          "name" : "图像识别",
          "nickname" : "图"
        }, {
          "id" : "3",
          "name" : "文字识别",
          "nickname" : "文"
        }, {
          "id" : "4",
          "name" : "其他",
          "nickname" : "他"
        } ],
        "err_code" : 0,
        "err_msg" : "success"
      }
    }
  },
  "dispatchers" : {
    "data" : {
      "-LbW07-Ak4hTKCxzuXdf" : {
        "Fax" : "1",
        "HP" : "1",
        "Manager" : "1",
        "Tel" : "1",
        "address" : "11",
        "application_count" : 0,
        "area" : "1",
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "created_at" : 1554258362520,
        "dispatchertype" : "1",
        "id" : "-LbW07-Ak4hTKCxzuXdf",
        "industry" : "1",
        "like_count" : 0,
        "name" : "test dispatcher2",
        "nickname" : "test1",
        "photo" : "",
        "update_at" : 1554258362971
      },
      "-LbYYS1-2FHP8nrlR4C_" : {
        "Fax" : "sss",
        "HP" : "sss",
        "Manager" : "sss",
        "Tel" : "sss",
        "address" : "xsss",
        "application_count" : 0,
        "area" : "1",
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "created_at" : 1554300917341,
        "dispatchertype" : "3",
        "id" : "-LbYYS1-2FHP8nrlR4C_",
        "industry" : "2",
        "like_count" : 0,
        "name" : "sss",
        "nickname" : "test1"
      }
    }
  },
  "events" : {
    "data" : {
      "-LbW07cKyWoNzVpJvAZ5" : {
        "Fax" : "1",
        "HP" : "1",
        "Manager" : "1",
        "Tel" : "1",
        "address" : "11",
        "application_count" : 0,
        "area" : "1",
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "created_at" : 1554258365093,
        "eventtype" : "1",
        "id" : "-LbW07cKyWoNzVpJvAZ5",
        "industry" : "1",
        "like_count" : 0,
        "name" : "test event2",
        "nickname" : "test1",
        "photo" : "",
        "update_at" : 1554258365514
      },
      "-LbYZw56kD55Q0BYxpAa" : {
        "Fax" : "sss",
        "HP" : "sss",
        "Manager" : "sss",
        "Tel" : "sss",
        "address" : "sss",
        "application_count" : 0,
        "area" : "1",
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "created_at" : 1554301306706,
        "eventtype" : "1",
        "id" : "-LbYZw56kD55Q0BYxpAa",
        "industry" : "2",
        "like_count" : 0,
        "name" : "sss",
        "nickname" : "test1"
      }
    },
    "err_code" : 0,
    "err_msg" : "success"
  },
  "feedback" : {
    "data" : {
      "-LcQhUJS38a_tNLZ68QO" : {
        "CreateDate" : "2019/04/14",
        "content" : "ssss",
        "userid" : "test1@gmail.com"
      },
      "-LcQhZg3xkG-JGlWsdqA" : {
        "CreateDate" : "2019/04/14",
        "content" : "you are welcome",
        "userid" : "test1@gmail.com"
      },
      "-LcQi6C6yENbBkd1K9YV" : {
        "CreateDate" : "2019/04/14",
        "content" : "Thank you very much",
        "userid" : "test1@gmail.com"
      },
      "-LcQjXB_dX6HNZoHaAm0" : {
        "CreateDate" : "2019/04/14",
        "content" : "You have a good job in AI Times",
        "userid" : "test1@gmail.com"
      },
      "-LcQk-r3oBWFdCE2kfwu" : {
        "CreateDate" : "2019/04/14",
        "content" : "お送りいたします。",
        "userid" : "test1@gmail.com"
      },
      "-LcQk3BnMUXb8HTlrUyC" : {
        "CreateDate" : "2019/04/14",
        "content" : "お送りいたします。",
        "userid" : "test1@gmail.com"
      },
      "-LcQk6z0zItVlzYQKV_M" : {
        "CreateDate" : "2019/04/14",
        "content" : "ありがとうございました。",
        "userid" : "test1@gmail.com"
      },
      "-LchbsZDi8P9QUkuyEcJ" : {
        "CreateDate" : "2019/04/18",
        "content" : "出自唐代王维的《送刘司直赴安西》\n\n绝域阳关道，胡沙与塞尘。\n三春时有雁，万里少行人。\n苜蓿随天马，葡萄逐汉臣。\n当令外国惧，不敢觅和亲。",
        "userid" : "test1@gmail.com"
      },
      "-LcsZ3wCrGpQk9Iymtey" : {
        "CreateDate" : "2019/04/20",
        "content" : "test",
        "userid" : "test1@gmail.com"
      },
      "-LdSF8KI53EpZ7Lzl_dO" : {
        "CreateDate" : "2019/04/27",
        "content" : "hhhhhh",
        "userid" : "test2@gmail.com"
      },
      "-LdSF9gF_exURV9E6Svg" : {
        "CreateDate" : "2019/04/27",
        "content" : "hhhhhh",
        "userid" : "test2@gmail.com"
      },
      "-LdSFCsuhS1y7-FKc6Wh" : {
        "CreateDate" : "2019/04/27",
        "content" : "zzzzzz",
        "userid" : "test2@gmail.com"
      },
      "-LdSGb7kqBZ7NS7JiXmw" : {
        "CreateDate" : "2019/04/27",
        "content" : "123123123",
        "userid" : "test1@gmail.com"
      },
      "-LdSTo_vkgPBlJBKIybX" : {
        "CreateDate" : "2019/04/27",
        "content" : "yyyyyy",
        "userid" : "test2@gmail.com"
      },
      "-LdSTs67uljXTvx1deSP" : {
        "CreateDate" : "2019/04/27",
        "content" : "uuuuuuu",
        "userid" : "test2@gmail.com"
      },
      "-LdSUfaxMysRy4EUYts8" : {
        "CreateDate" : "2019/04/27",
        "content" : "你好好节",
        "userid" : "test2@gmail.com"
      },
      "-LdSUgvqFhnvklKOm_1X" : {
        "CreateDate" : "2019/04/27",
        "content" : "你好好节",
        "userid" : "test2@gmail.com"
      },
      "-LdSWdDnxHnEN61HLd0r" : {
        "CreateDate" : "2019/04/27",
        "content" : "6666666666666",
        "userid" : "test2@gmail.com"
      },
      "-LdSWeiolQUvPA1hSiON" : {
        "CreateDate" : "2019/04/27",
        "content" : "6666666666666",
        "userid" : "test2@gmail.com"
      },
      "-LdSWjIm3eJH4cAadymP" : {
        "CreateDate" : "2019/04/27",
        "content" : "你OK",
        "userid" : "test2@gmail.com"
      }
    },
    "err_code" : 0,
    "err_msg" : "success"
  },
  "invoices" : {
    "data" : [ {
      "bankaccount" : "みずほ銀行○○支店12345678",
      "comment" : "特になし",
      "companyId" : "2",
      "content" : "システム開発",
      "detail" : [ {
        "Unit" : "円",
        "name" : "a",
        "price" : 550000,
        "worktime" : "1人月"
      }, {
        "Unit" : "円",
        "name" : "b",
        "price" : 450000,
        "worktime" : "1人月"
      } ],
      "endDate" : "2018/10/31",
      "invoiceId" : "201810",
      "location" : "品川",
      "startDate" : "2018/10/01",
      "tax" : 0.08,
      "totalAmount" : 1080000,
      "userid" : "1"
    }, {
      "bankaccount" : "みずほ銀行○○支店12345678",
      "comment" : "特になし",
      "companyId" : "3",
      "content" : "システム開発",
      "detail" : [ {
        "Unit" : "円",
        "name" : "a",
        "price" : 550000,
        "time" : "1人月"
      }, {
        "Unit" : "円",
        "name" : "b",
        "price" : 450000,
        "time" : "1人月"
      } ],
      "endDate" : "2018/10/31",
      "invoiceId" : "201810",
      "location" : "品川",
      "startDate" : "2018/10/01",
      "tax" : 0.08,
      "totalAmount" : 1080000,
      "userid" : "1"
    } ],
    "err_code" : 0,
    "err_msg" : "success"
  },
  "jobs" : {
    "data" : {
      "-LbW05tjlGqALVI2K445" : {
        "Fax" : "1",
        "HP" : "1",
        "Manager" : "1",
        "Tel" : "1",
        "address" : "11",
        "application_count" : 0,
        "area" : "1",
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "created_at" : 1554258358025,
        "id" : "-LbW05tjlGqALVI2K445",
        "industry" : "2",
        "jobtype" : "1",
        "like_count" : 0,
        "name" : "test job3",
        "nickname" : "test1",
        "photo" : "",
        "update_at" : 1554464408234
      },
      "-LbYX4GNelvo-RDc_LOb" : {
        "Fax" : "ssss",
        "HP" : "ssss",
        "Manager" : "sss",
        "Tel" : "ssss",
        "address" : "sssss",
        "application_count" : 0,
        "area" : "1",
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "created_at" : 1554300557881,
        "id" : "-LbYX4GNelvo-RDc_LOb",
        "industry" : "2",
        "jobtype" : "3",
        "like_count" : 0,
        "name" : "ssss",
        "nickname" : "test1"
      }
    },
    "err_code" : 0,
    "err_msg" : "success"
  },
  "knowledgeapplications" : {
    "data" : {
      "-LbW07Cj8C37LDyZeKHF" : {
        "Vn8NjeM3yCh7vsK6mwhEdk9d1h73" : {
          "approvalAvatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "approvalName" : "test1",
          "approvalStatus" : true,
          "approval_at" : 1557963773388,
          "avatar" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
          "id" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
          "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
          "name" : "test1",
          "text" : "よろしくお願がいします",
          "time" : 1557963596818
        },
        "iHmcxnnRDWPOJAE38On1nCdq0ir2" : {
          "approvalAvatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "approvalName" : "test1",
          "approvalStatus" : true,
          "approval_at" : 1556717302575,
          "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
          "id" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
          "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
          "name" : "tei952",
          "text" : "よろしくお願いいたします。",
          "time" : 1556717203100
        }
      },
      "-LbYZZXvYQxtpo2AWpzL" : {
        "Vn8NjeM3yCh7vsK6mwhEdk9d1h73" : {
          "approvalAvatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "approvalName" : "test1",
          "approvalStatus" : true,
          "approval_at" : 1557890334409,
          "avatar" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
          "id" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
          "knowledgeid" : "-LbYZZXvYQxtpo2AWpzL",
          "name" : "test2",
          "text" : "よろしくお願がいします",
          "time" : 1557890273854
        },
        "iHmcxnnRDWPOJAE38On1nCdq0ir2" : {
          "approvalAvatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "approvalName" : "test1",
          "approvalStatus" : true,
          "approval_at" : 1556744058368,
          "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
          "id" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
          "knowledgeid" : "-LbYZZXvYQxtpo2AWpzL",
          "name" : "tei952",
          "text" : "sss",
          "time" : 1556743958723
        }
      },
      "-Ld495mtWIyObJzEEK7s" : {
        "Vn8NjeM3yCh7vsK6mwhEdk9d1h73" : {
          "approvalAvatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "approvalName" : "test1",
          "approvalStatus" : true,
          "approval_at" : 1557963799311,
          "avatar" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
          "id" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
          "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
          "name" : "test1",
          "text" : "よろしくお願がいします",
          "time" : 1557963616907
        }
      },
      "-LdLtODpcc-J83q1aU5f" : {
        "CIxg5db1wHWTu1eeymVp4EkLzfg1" : {
          "approvalAvatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
          "approvalName" : "tei952",
          "approvalStatus" : true,
          "approval_at" : 1558007585355,
          "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "id" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
          "name" : "test1",
          "text" : "よろしくお願いいたします。",
          "time" : 1558006972937
        }
      },
      "-LdLuLklhwL7keqLFNmD" : {
        "CIxg5db1wHWTu1eeymVp4EkLzfg1" : {
          "approvalAvatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
          "approvalName" : "tei952",
          "approvalStatus" : true,
          "approval_at" : 1557878954656,
          "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "id" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
          "name" : "test1",
          "text" : "よろしくお願がいします",
          "time" : 1557878800801
        },
        "Vn8NjeM3yCh7vsK6mwhEdk9d1h73" : {
          "approvalAvatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
          "approvalName" : "tei952",
          "approvalStatus" : true,
          "approval_at" : 1557963906426,
          "avatar" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
          "id" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
          "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
          "name" : "test1",
          "text" : "よろしくお願がいします",
          "time" : 1557963672862
        }
      },
      "-LdLuU-AHWwvMHDT-QpQ" : {
        "CIxg5db1wHWTu1eeymVp4EkLzfg1" : {
          "approvalAvatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
          "approvalName" : "tei952",
          "approvalStatus" : true,
          "approval_at" : 1557878963211,
          "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "id" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
          "name" : "test1",
          "text" : "よろしくお願がいします",
          "time" : 1557878819756
        },
        "Vn8NjeM3yCh7vsK6mwhEdk9d1h73" : {
          "approvalAvatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
          "approvalName" : "tei952",
          "approvalStatus" : true,
          "approval_at" : 1557963924127,
          "avatar" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
          "id" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
          "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
          "name" : "test1",
          "text" : "よろしくお願がいします",
          "time" : 1557963521001
        }
      },
      "-LdLubY6J4gW1t94t63x" : {
        "CIxg5db1wHWTu1eeymVp4EkLzfg1" : {
          "approvalAvatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
          "approvalName" : "tei952",
          "approvalStatus" : true,
          "approval_at" : 1558007628579,
          "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "id" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "knowledgeid" : "-LdLubY6J4gW1t94t63x",
          "name" : "test1",
          "text" : "よろしくお願いいたします。",
          "time" : 1558006897384
        }
      },
      "-LedXZi8fzaKO45rL-Kv" : {
        "CIxg5db1wHWTu1eeymVp4EkLzfg1" : {
          "approvalAvatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
          "approvalName" : "tei952",
          "approvalStatus" : true,
          "approval_at" : 1557649926601,
          "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "id" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "knowledgeid" : "-LedXZi8fzaKO45rL-Kv",
          "name" : "test1",
          "text" : "よろしくお願いいたします。",
          "time" : 1557649836830
        },
        "Vn8NjeM3yCh7vsK6mwhEdk9d1h73" : {
          "approvalAvatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
          "approvalName" : "tei952",
          "approvalStatus" : true,
          "approval_at" : 1557963962173,
          "avatar" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
          "id" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
          "knowledgeid" : "-LedXZi8fzaKO45rL-Kv",
          "name" : "test1",
          "text" : "よろしくお願がいします",
          "time" : 1557963695975
        }
      }
    }
  },
  "knowledgecertificates" : {
    "data" : {
      "-LbW07Cj8C37LDyZeKHF" : {
        "CIxg5db1wHWTu1eeymVp4EkLzfg1" : {
          "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "certificatePath" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledgecertificates%2FCIxg5db1wHWTu1eeymVp4EkLzfg1%2F-LbW07Cj8C37LDyZeKHF?alt=media&token=0a84788e-8a4f-4a7a-a83f-2bab43c82566",
          "id" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
          "name" : "test1",
          "time" : 1556058992137
        },
        "Vn8NjeM3yCh7vsK6mwhEdk9d1h73" : {
          "avatar" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
          "certificatePath" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledgecertificates%2FVn8NjeM3yCh7vsK6mwhEdk9d1h73%2F-LbW07Cj8C37LDyZeKHF?alt=media&token=b444bde7-74d6-4d89-bdda-51039271784f",
          "id" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
          "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
          "name" : "test2",
          "time" : 1556060905896
        }
      },
      "-LbYZZXvYQxtpo2AWpzL" : {
        "-LctyLWU1ERkDV29z2rk" : {
          "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "certificatePath" : "https://image.baidu.com/search/detail?ct=503316480&z=&tn=baiduimagedetail&ipn=d&word=%E5%AD%A6%E4%B9%A0%E8%AF%81%E6%98%8E%E4%B9%A6&step_word=&ie=utf-8&in=&cl=2&lm=-1&st=-1&hd=undefined&latest=undefined&copyright=undefined&cs=5659746,4131529913&os=2045183806,206696368&simid=3410681258,295304104&pn=2&rn=1&di=81730&ln=1642&fr=&fmq=1555750763902_R&ic=0&s=undefined&se=&sme=&tab=0&width=&height=&face=undefined&is=0,0&istype=2&ist=&jit=&bdtype=0&spn=0&pi=0&gsm=0&objurl=http%3A%2F%2Fimgsa.baidu.com%2Fexp%2Fw%3D500%2Fsign%3D9a7fec740a24ab18e016e13705fae69a%2F4b90f603738da977f10b8f79b351f8198618e3b8.jpg&rpstart=0&rpnum=0&adpicid=0&force=undefined",
          "id" : "-LctyLWU1ERkDV29z2rk",
          "knowledgeid" : "-LbYZZXvYQxtpo2AWpzL",
          "name" : "test1",
          "time" : 1555750807868
        }
      }
    }
  },
  "knowledgecomments" : {
    "data" : {
      "-LbW07Cj8C37LDyZeKHF" : {
        "contents" : {
          "-LcPpPauyQT7nMHxsSDI" : {
            "-LcxVmYndkXWm-77gAEA" : {
              "avatar" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
              "comment" : "ｃｃｃ",
              "contentid" : "-LcPpPauyQT7nMHxsSDI",
              "id" : "-LcxVmYndkXWm-77gAEA",
              "name" : "test2",
              "time" : 1555810167344
            },
            "-LdMchK9BuyD5k8KGL53" : {
              "comment" : "ddd",
              "contentid" : "-LcPpPauyQT7nMHxsSDI",
              "id" : "-LdMchK9BuyD5k8KGL53",
              "time" : 1556248450583
            },
            "-LdRL6pbWRNI1nmQABMV" : {
              "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
              "comment" : "请老师告诉我答案",
              "contentid" : "-LcPpPauyQT7nMHxsSDI",
              "id" : "-LdRL6pbWRNI1nmQABMV",
              "name" : "tei952",
              "time" : 1556327464435
            }
          },
          "-LcPtGVHXPZU2lKmAWBg" : {
            "-LcxYOh92HaZ7OhFDqD_" : {
              "avatar" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
              "comment" : "ｃｃｃ",
              "contentid" : "-LcPtGVHXPZU2lKmAWBg",
              "id" : "-LcxYOh92HaZ7OhFDqD_",
              "name" : "test2",
              "time" : 1555810851964
            },
            "-Ldv9-JFOVF5t8H0W3mc" : {
              "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
              "comment" : "",
              "contentid" : "-LcPtGVHXPZU2lKmAWBg",
              "id" : "-Ldv9-JFOVF5t8H0W3mc",
              "name" : "tei952",
              "time" : 1556844381819
            },
            "-Ldv9JYj9Yjt004w758w" : {
              "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
              "comment" : "你好！",
              "contentid" : "-LcPtGVHXPZU2lKmAWBg",
              "id" : "-Ldv9JYj9Yjt004w758w",
              "name" : "tei952",
              "time" : 1556844464712
            }
          },
          "-LcPuOOzxujK4Z-uAWMA" : {
            "-LcxYTmeA2BEr_x0WLQI" : {
              "avatar" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
              "comment" : "ｄｄｄ",
              "contentid" : "-LcPuOOzxujK4Z-uAWMA",
              "id" : "-LcxYTmeA2BEr_x0WLQI",
              "name" : "test2",
              "time" : 1555810872804
            }
          },
          "-LcPuq3uP8_kKl9Si9yX" : {
            "-LcxS6qcmuVQz0OZJPsw" : {
              "avatar" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
              "comment" : "ｓｓｓｓ",
              "contentid" : "-LcPuq3uP8_kKl9Si9yX",
              "id" : "-LcxS6qcmuVQz0OZJPsw",
              "name" : "test2",
              "time" : 1555809205965
            },
            "-LcxUU9sie73l12gKQt_" : {
              "avatar" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
              "comment" : "ｓｓｓ２",
              "contentid" : "-LcPuq3uP8_kKl9Si9yX",
              "id" : "-LcxUU9sie73l12gKQt_",
              "name" : "test2",
              "time" : 1555809825754
            }
          },
          "x02" : {
            "-LeqYCab4GKxe6txfX-A" : {
              "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
              "comment" : "评论测试20190514",
              "contentid" : "x02",
              "id" : "-LeqYCab4GKxe6txfX-A",
              "name" : "tei952",
              "time" : 1557840845561
            }
          }
        }
      },
      "-LbYZZXvYQxtpo2AWpzL" : {
        "contents" : {
          "-LcVaE3TSJd2ov2URtTG" : {
            "-Ld6NM34oRR_yPqyWhmU" : {
              "avatar" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
              "comment" : "没做完吧",
              "contentid" : "-LcVaE3TSJd2ov2URtTG",
              "id" : "-Ld6NM34oRR_yPqyWhmU",
              "name" : "test2",
              "time" : 1555975730873
            },
            "-Ld6NRqWGg-bFf6Ela0v" : {
              "avatar" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
              "comment" : "可以加新的吗？",
              "contentid" : "-LcVaE3TSJd2ov2URtTG",
              "id" : "-Ld6NRqWGg-bFf6Ela0v",
              "name" : "test2",
              "time" : 1555975753516
            },
            "-LdZRdOXR_eosBk5jm3Q" : {
              "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
              "comment" : "测试在评论时发消息通知",
              "contentid" : "-LcVaE3TSJd2ov2URtTG",
              "id" : "-LdZRdOXR_eosBk5jm3Q",
              "name" : "tei952",
              "time" : 1556463393491
            },
            "-LdZV1Iymxfm4YV1UQRy" : {
              "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
              "comment" : "ありがとうございました。",
              "contentid" : "-LcVaE3TSJd2ov2URtTG",
              "id" : "-LdZV1Iymxfm4YV1UQRy",
              "name" : "tei952",
              "time" : 1556464281580
            }
          },
          "-LdZOt-Zkrwc4mXRAKAo" : {
            "-Ldpr732CLcdK6ReeCqX" : {
              "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
              "comment" : "请告诉我答案",
              "contentid" : "-LdZOt-Zkrwc4mXRAKAo",
              "id" : "-Ldpr732CLcdK6ReeCqX",
              "name" : "tei952",
              "time" : 1556755546715
            }
          },
          "x17" : {
            "-LeqG8WaPiXTyiLNf4v_" : {
              "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
              "comment" : "测试20190514",
              "contentid" : "x17",
              "id" : "-LeqG8WaPiXTyiLNf4v_",
              "name" : "tei952",
              "time" : 1557836110128
            }
          }
        }
      }
    }
  },
  "knowledgecontents" : {
    "data" : {
      "-LbW07Cj8C37LDyZeKHF" : {
        "contents" : {
          "x01" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>Angularへようこそ！ Angularは、Web、モバイル、またはデスクトップ用\nの最新のアプリケーションを構築するのに役立ちます。\nこのガイドでは、簡単なAngularアプリを構築して実行する方法を説明します。\n Angular CLIツールを使用して開発を加速し、すべてのAngularプロジェクト\n に役立つスタイルガイドの推奨事項を遵守します。\nこのガイドは30分以内に完了します。このガイドの最後には、最終的なコード\nレビューの一環として、最終的なアプリケーションコードのコピーをダウンロード\nするリンクがあります。 （このガイドのコマンドを実行しない場合でも、\n最終的なアプリケーションコードをダウンロードできます）。</code></pre>",
              "type" : "Html"
            },
            "id" : "x01",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "01",
            "time" : 1555228371611,
            "title" : "1.0 Angularへようこそ",
            "update_at" : 1556488166377
          },
          "x02" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 1,
            "content" : {
              "data" : "<pre><code>Angularには、Node.js バージョン8.xまたは10.xが必要です。\nバージョンをチェックするためには、node -v をターミナルあるいは\nコンソールで実行してください。\nNode.jsを手に入れるには、 nodejs.orgへ行きましょう。</code></pre>",
              "type" : "Html"
            },
            "id" : "x02",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "02",
            "time" : 1555228371611,
            "title" : "2.0 Node.js",
            "update_at" : 1556488166377
          },
          "x03" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>Angular、Angular CLI、Angularアプリケーションは、npmパッケージとして\n利用可能なライブラリによって提供される機能に依存します。 npmパッケージ\nをダウンロードしてインストールするには、npmパッケージマネージャが必要です。\nこのクイックスタートでは、デフォルトで Node.js とともにインストールされる\nnpmクライアントコマンドラインインターフェースを使用します。\nnpmクライアントがインストールされていることを確認するには、ターミナルや\nコンソールでnpm -vを実行します。</code></pre>",
              "type" : "Html"
            },
            "id" : "x03",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "03",
            "time" : 1555228371611,
            "title" : "3.0 npm パッケージマネージャー",
            "update_at" : 1556488166377
          },
          "x04" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>インストール\nnpm install -g @angular/cli\nワークスペースと初期アプリケーションの作成\nng new my-app\nアプリケーションをサーブする\ncd my-app\nng serve --open\nng serve コマンドはサーバーを起動します。\nプロジェクトのファイル変更を監視して、変更があれば再度ビルドを行います。\n--open （または -o ）オプションはhttp://localhost:4200/ を自動的\nにブラウザで開きます。</code></pre>",
              "type" : "Html"
            },
            "id" : "x04",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "04",
            "time" : 1555228371611,
            "title" : "4.0 Angular CLI",
            "update_at" : 1556488166377
          },
          "x05" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>コンポーネントは、Angularアプリケーションの基本的なビルディング\nブロックです。彼らは、画面上にデータを表示し、ユーザーの入力を聞いて、\nその入力に基づいて行動を起こします。\n最初のアプリの一環として、CLIが最初のAngularコンポーネントを作成\nしました。これはルートコンポーネントであり、app-rootという名前です。\nsrc/app/app.component.ts\n@Component({\n  selector: &#39;app-root&#39;,\n  templateUrl: &#39;./app.component.html&#39;,\n  styleUrls: [&#39;./app.component.css&#39;]\n})\nexport class AppComponent {\n  title = &#39;My First Angular App!&#39;;\n}</code></pre>",
              "type" : "Html"
            },
            "id" : "x05",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "05",
            "time" : 1555228371611,
            "title" : "5.0 Angularコンポーネントを編集する",
            "update_at" : 1556488166377
          },
          "x06" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>ツアー・オブ・ヒーローズ チュートリアルはAngularの基礎をカバーしています。\n このチュートリアルでは人材派遣会社がヒーローの集合を管理するための\n アプリケーションを開発します。\nこの基本的なアプリケーションは、データ駆動型アプリケーションで期待される\n多くの機能を持っています。 ヒーローのリストを取得して表示し、選択した\nヒーローの詳細を編集し、ヒーローデータのさまざまなビュー間を遷移します。\nこのチュートリアルが終わるときには、あなたは次のことができるように\nなっています。\n要素を表示・隠蔽する、そしてヒーローデータのリストを表示するための\n組み込みAngularディレクティブを使う。\nヒーローの詳細やヒーローのリストを表示するためのAngularコンポーネント\nを作成する。\n読み取り専用データのための単方向データバインディングを使用する。\n双方向データバインディングを用いて、モデルを更新するための編集可能な\nフィールドを設置する。\nキー入力やクリックといったユーザーのイベントに対しコンポーネントがもつ\nメソッドをバインドする。\nユーザーがマスターリストからヒーローを選択し、詳細画面でそのヒーロー\nを編集できるようにする。\nパイプによりデータを整形する。\nヒーローを組み立てるための共有サービスを作成する。\nさまざまなビューとそれらのコンポーネント間を遷移可能にするために\nルーティングを使用する。\nAngularを始めるためにAngularのことを十分に学び、Angularは必要なことを\n何でもできるということを確信するでしょう。</code></pre>",
              "type" : "Html"
            },
            "id" : "x06",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "06",
            "time" : 1555228371611,
            "title" : "6.0 チュートリアル: ツアー・オブ・ヒーローズ",
            "update_at" : 1556488166377
          },
          "x07" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "https://angular.jp/generated/images/guide/toh/toh-anim.gif",
              "type" : "Picture"
            },
            "id" : "x07",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "07",
            "time" : 1555228371611,
            "title" : "6.4 アプリケーションでユーザーがアクションを取っている様子です。",
            "update_at" : 1556488166377
          },
          "x08" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>まず、Angular CLIを使用して初期アプリケーションを作成します。このチュートリアル\nでは、スターターアプリケーションを修正して拡張し、Tour of Heroesアプリを作成します。\nチュートリアルのこの部分では、次のことを行います。\n1 環境を設定します。\n2 新しいワークスペースと初期アプリケーションプロジェクトを作成します。\n3 アプリケーションをサーブします。\n4 アプリケーションを変更します。</code></pre>",
              "type" : "Html"
            },
            "id" : "x08",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "08",
            "time" : 1555228371611,
            "title" : "7.0 アプリケーションシェル",
            "update_at" : 1556488166377
          },
          "x09" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>開発環境を設定するには、入門の次の手順に従います。\nng new angular-tour-of-heroes\ncd angular-tour-of-heroes\nng serve --open</code></pre>",
              "type" : "Html"
            },
            "id" : "x09",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "09",
            "time" : 1555228371611,
            "title" : "8.0 環境を設定します",
            "update_at" : 1556488166377
          },
          "x10" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\napp.component.ts (class title property)\n    import { Component } from &#39;@angular/core&#39;;</p>\n<pre><code>@Component({\nselector: &#39;app-root&#39;,\ntemplateUrl: &#39;./app.component.html&#39;,\nstyleUrls: [&#39;./app.component.css&#39;]\n})\nexport class AppComponent {\ntitle = &#39;Tour of Heroes&#39;;\n}\n</code></pre><p>app.component.html (template)<br>    <h1>{{title}}</h1>\nsrc/styles.css\n/<em> Application-wide Styles </em>/\nh1 {\n  color: #369;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 250%;\n}\nh2, h3 {\n  color: #444;\n  font-family: Arial, Helvetica, sans-serif;\n  font-weight: lighter;\n}\nbody {\n  margin: 2em;\n}\nbody, input[type=&quot;text&quot;], button {\n  color: #888;\n  font-family: Cambria, Georgia;\n}\n/<em> everywhere else </em>/\n* {\n  font-family: Arial, Helvetica, sans-serif;\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x10",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "10",
            "time" : 1555228371611,
            "title" : "9.0 アプリケーションを変更する",
            "update_at" : 1556488166377
          },
          "x11" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nng generate component heroes</p>\n<p>app/heroes/heroes.component.ts (初期バージョン)\n    import { Component, OnInit } from &#39;@angular/core&#39;;</p>\n<pre><code>    @Component({\n    selector: &#39;app-heroes&#39;,\n    templateUrl: &#39;./heroes.component.html&#39;,\n    styleUrls: [&#39;./heroes.component.css&#39;]\n    })\n    export class HeroesComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n}\n</code></pre><pcode>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x11",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "11",
            "time" : 1555228371611,
            "title" : "10.0 heroes コンポーネントを作成する",
            "update_at" : 1556488166377
          },
          "x12" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>heroes.component.ts (hero プロパティ)\n    hero = &#39;Windstorm&#39;;\nheroes.component.html    \n    {{hero}}</code></pre>",
              "type" : "Html"
            },
            "id" : "x12",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "12",
            "time" : 1555228371611,
            "title" : "11.0 hero プロパティを追加する",
            "update_at" : 1556488166377
          },
          "x13" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>src/app/app.component.html   \n    &lt;h1&gt;{{title}}&lt;/h1&gt;\n    &lt;app-heroes&gt;&lt;/app-heroes&gt;</code></pre>",
              "type" : "Html"
            },
            "id" : "x13",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "13",
            "time" : 1555228371611,
            "title" : "12.0 HeroesComponent ビューを表示する",
            "update_at" : 1556488166377
          },
          "x14" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nsrc/app/hero.ts\n    export class Hero {\n    id: number;\n    name: string;\n    }\nsrc/app/heroes/heroes.component.ts\n    import { Component, OnInit } from &#39;@angular/core&#39;;\n    import { Hero } from &#39;../hero&#39;;</p>\n<pre><code>@Component({\nselector: &#39;app-heroes&#39;,\ntemplateUrl: &#39;./heroes.component.html&#39;,\nstyleUrls: [&#39;./heroes.component.css&#39;]\n})\nexport class HeroesComponent implements OnInit {\nhero: Hero = {\n    id: 1,\n    name: &#39;Windstorm&#39;\n};\n\nconstructor() { }\n\nngOnInit() {\n}\n\n}\n</code></pre><pcode>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x14",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "14",
            "time" : 1555228371611,
            "title" : "13.0 Hero クラスを作成する",
            "update_at" : 1556488166377
          },
          "x15" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>heroes.component.html (HeroesComponent のテンプレート)\n    &lt;h2&gt;{{hero.name}} Details&lt;/h2&gt;\n    &lt;div&gt;&lt;span&gt;id: &lt;/span&gt;{{hero.id}}&lt;/div&gt;\n    &lt;div&gt;&lt;span&gt;name: &lt;/span&gt;{{hero.name}}&lt;/div&gt;</code></pre>",
              "type" : "Html"
            },
            "id" : "x15",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "15",
            "time" : 1555228371611,
            "title" : "14.0 ヒーローオブジェクトを表示する",
            "update_at" : 1556488166377
          },
          "x16" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x16",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "16",
            "time" : 1555228371611,
            "title" : "15.0 UppercasePipe で書式設定する",
            "update_at" : 1556488166377
          },
          "x22" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x22",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "22",
            "time" : 1555228371611,
            "title" : "26.0 サービス",
            "update_at" : 1556488166377
          },
          "x23" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>Tour of Heroes の中で扱っている HeroesComponent は、今のところ仮\nのデータを取得して表示している状態です。\nこのチュートリアルのリファクタリング後には、HeroesComponent は小さく\nなりビューをサポートすることに専念します。 これはモックサービスを使用\nして、ユニットテストをより簡潔にすることにもつながります。</code></pre>",
              "type" : "Html"
            },
            "id" : "x23",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "23",
            "time" : 1555228371611,
            "title" : "27.0 HeroService の作成",
            "update_at" : 1556488166377
          },
          "x24" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nng generate service hero</p>\n<p>src/app/hero.service.ts (new service)\n    import { Injectable } from &#39;@angular/core&#39;;</p>\n<pre><code>@Injectable({\nprovidedIn: &#39;root&#39;,\n})\nexport class HeroService {\n\nconstructor() { }\n\n}\n</code></pre><pcode>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x24",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "24",
            "time" : 1555228371611,
            "title" : "28.0 ヒーローデータの取得",
            "update_at" : 1556488166377
          },
          "x25" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>src/app/hero.service.ts (Observable imports)\n    import { Observable, of } from &#39;rxjs&#39;;\n    getHeroes(): Observable&lt;Hero[]&gt; {\n        return of(HEROES);\n    }\nsrc/app/heroes/heroes.component.ts (import HeroService)\n    heroes: Hero[];\n    constructor(private heroService: HeroService) { }\n    getHeroes(): void {\n    this.heroService.getHeroes()\n        .subscribe(heroes =&gt; this.heroes = heroes);\n    }</code></pre>",
              "type" : "Html"
            },
            "id" : "x25",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "25",
            "time" : 1555228371611,
            "title" : "29.0 MessagesComponent",
            "update_at" : 1556488166377
          },
          "x26" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nng generate component messages</p>\n<p>/src/app/app.component.html\n    <h1>{{title}}</h1>\n    <app-heroes></app-heroes>\n    <app-messages></app-messages>\n/src/app/message.service.ts\n    import { Injectable } from &#39;@angular/core&#39;;</p>\n<pre><code>@Injectable({\nprovidedIn: &#39;root&#39;,\n})\nexport class MessageService {\nmessages: string[] = [];\n\nadd(message: string) {\n    this.messages.push(message);\n}\n\nclear() {\n    this.messages = [];\n}\n}\n</code></pre><pcode>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x26",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "26",
            "time" : 1555228371611,
            "title" : "30.0 HeroService への注入",
            "update_at" : 1556488166377
          },
          "x27" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>/src/app/hero.service.ts (import MessageService)\n    import { MessageService } from &#39;./message.service&#39;;\n    constructor(private messageService: MessageService) { }\n    getHeroes(): Observable&lt;Hero[]&gt; {\n    // TODO: send the message _after_ fetching the heroes\n    this.messageService.add(&#39;HeroService: fetched heroes&#39;);\n    return of(HEROES);\n    }</code></pre>",
              "type" : "Html"
            },
            "id" : "x27",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "27",
            "time" : 1555228371611,
            "title" : "31.0 HeroService からのメッセージを表示する",
            "update_at" : 1556488166377
          },
          "x28" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n/src/app/messages/messages.component.ts (import MessageService)\n    import { MessageService } from &#39;../message.service&#39;;\n    constructor(public messageService: MessageService) {}\nsrc/app/messages/messages.component.html\n    <div *ngIf=\"messageService.messages.length\"></p>\n<pre><code>&lt;h2&gt;Messages&lt;/h2&gt;\n&lt;button class=&quot;clear&quot;\n        (click)=&quot;messageService.clear()&quot;&gt;clear&lt;/button&gt;\n&lt;div *ngFor=&#39;let message of messageService.messages&#39;&gt; {{message}} &lt;/div&gt;\n\n&lt;/div&gt;\n</code></pre><pcode>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x28",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "28",
            "time" : 1555228371611,
            "title" : "32.0 ルーティング",
            "update_at" : 1556488166377
          },
          "x29" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "https://angular.jp/generated/images/guide/toh/nav-diagram.png",
              "type" : "Picture"
            },
            "id" : "x29",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "29",
            "time" : 1555228371611,
            "title" : "32.4 ルーティング",
            "update_at" : 1556488166377
          },
          "x30" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>Tour of Heroes アプリケーションには新しい要求があります：\nダッシュボードビューを追加する。\nヒーローズビューとダッシュボードビューの間で行き来できる機能を追加する。\nユーザーが各ビューでヒーロー名をクリックしたとき、選択されたヒーローの詳細ビューを表示する。\nユーザーがEメール上でディープリンクをクリックしたとき、特定のヒーローの詳細ビューを開く。</code></pre>",
              "type" : "Html"
            },
            "id" : "x30",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "30",
            "time" : 1555228371611,
            "title" : "33.0 AppRoutingModuleを追加する",
            "update_at" : 1556488166377
          },
          "x31" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nng generate module app-routing --flat --module=app</p>\n<p>src/app/app-routing.module.ts (generated)\n    import { NgModule } from &#39;@angular/core&#39;;\n    import { CommonModule } from &#39;@angular/common&#39;;</p>\n<pre><code>@NgModule({\nimports: [\n    CommonModule\n],\ndeclarations: []\n})\nexport class AppRoutingModule { }\n</code></pre><pcode>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x31",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "31",
            "time" : 1555228371611,
            "title" : "34.0 ルートを追加する",
            "update_at" : 1556488166377
          },
          "x32" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nsrc/app/app-routing.module.ts (v1)\n    import { HeroesComponent }      from &#39;./heroes/heroes.component&#39;;</p>\n<pre><code>const routes: Routes = [\n{ path: &#39;heroes&#39;, component: HeroesComponent }\n];\n</code></pre><p>src/app/app.component.html (router-outlet)\n    <h1>{{title}}</h1>\n    <nav>\n    <a routerLink=\"/heroes\">Heroes</a>\n    </nav>\n    <router-outlet></router-outlet>\n    <app-messages></app-messages>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x32",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "32",
            "time" : 1555228371611,
            "title" : "35.0 ダッシュボードビューを追加する",
            "update_at" : 1556488166377
          },
          "x33" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code> \nng generate component dashboard</p>\n<p>src/app/dashboard/dashboard.component.html\n    <h3>Top Heroes</h3>\n    <div class=\"grid grid-pad\">\n    <a *ngFor=\"let hero of heroes\" class=\"col-1-4\">\n        <div class=\"module hero\">\n        <h4>{{hero.name}}</h4>\n        </div>\n    </a>\n    </div>\nsrc/app/dashboard/dashboard.component.ts\n    import { Component, OnInit } from &#39;@angular/core&#39;;\n    import { Hero } from &#39;../hero&#39;;\n    import { HeroService } from &#39;../hero.service&#39;;</p>\n<pre><code>@Component({\nselector: &#39;app-dashboard&#39;,\ntemplateUrl: &#39;./dashboard.component.html&#39;,\nstyleUrls: [ &#39;./dashboard.component.css&#39; ]\n})\nexport class DashboardComponent implements OnInit {\nheroes: Hero[] = [];\n\nconstructor(private heroService: HeroService) { }\n\nngOnInit() {\n    this.getHeroes();\n}\n\ngetHeroes(): void {\n    this.heroService.getHeroes()\n    .subscribe(heroes =&gt; this.heroes = heroes.slice(1, 5));\n}\n}\n</code></pre><pcode>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x33",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "33",
            "time" : 1555228371611,
            "title" : "36.0 ダッシュボードのルートを追加する",
            "update_at" : 1556488166377
          },
          "x34" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>src/app/app-routing.module.ts (import DashboardComponent)\n    import { DashboardComponent }   from &#39;./dashboard/dashboard.component&#39;;\n    { path: &#39;dashboard&#39;, component: DashboardComponent },\nsrc/app/app.component.html\n    &lt;h1&gt;{{title}}&lt;/h1&gt;\n    &lt;nav&gt;\n    &lt;a routerLink=&quot;/dashboard&quot;&gt;Dashboard&lt;/a&gt;\n    &lt;a routerLink=&quot;/heroes&quot;&gt;Heroes&lt;/a&gt;\n    &lt;/nav&gt;\n    &lt;router-outlet&gt;&lt;/router-outlet&gt;\n    &lt;app-messages&gt;&lt;/app-messages&gt;</code></pre>",
              "type" : "Html"
            },
            "id" : "x34",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "34",
            "time" : 1555228371611,
            "title" : "37.0 HTTPサービス",
            "update_at" : 1556488166377
          },
          "x35" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>このチュートリアルではAngularのHttpClientを使用して、次のデータ永続の\n機能を追加します。\nHeroServiceはHTTPリクエストを介してヒーローデータを取得します。\nユーザーはヒーロー情報を追加、編集、削除ができ、その変更をHTTPを通\nして保存することができます。\nユーザーは名前でヒーロー情報を検索できます。</code></pre>",
              "type" : "Html"
            },
            "id" : "x35",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "35",
            "time" : 1555228371611,
            "title" : "38.0 サービス有効化",
            "update_at" : 1556488166377
          },
          "x36" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>src/app/app.module.ts (Http Client import)\n    import { HttpClientModule }    from &#39;@angular/common/http&#39;;\nデータサーバーをシミュレートする\n    npm install angular-in-memory-web-api --save\nsrc/app/app.module.ts (インメモリ Web API をインポート)\n    import { HttpClientInMemoryWebApiModule } from &#39;angular-in-memory-web-api&#39;;\n    import { InMemoryDataService }  from &#39;./in-memory-data.service&#39;;</code></pre>",
              "type" : "Html"
            },
            "id" : "x36",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "36",
            "time" : 1555228371611,
            "title" : "39.0 HTTPサービス",
            "update_at" : 1556488166377
          },
          "x37" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nng generate service InMemoryData</p>\n<p>src/app/in-memory-data.service.ts\n    import { InMemoryDbService } from &#39;angular-in-memory-web-api&#39;;\n    import { Hero } from &#39;./hero&#39;;\n    import { Injectable } from &#39;@angular/core&#39;;</p>\n<pre><code>@Injectable({\nprovidedIn: &#39;root&#39;,\n})\nexport class InMemoryDataService implements InMemoryDbService {\ncreateDb() {\n    const heroes = [\n    { id: 11, name: &#39;Mr. Nice&#39; },\n    { id: 12, name: &#39;Narco&#39; },\n    { id: 13, name: &#39;Bombasto&#39; },\n    { id: 14, name: &#39;Celeritas&#39; },\n    { id: 15, name: &#39;Magneta&#39; },\n    { id: 16, name: &#39;RubberMan&#39; },\n    { id: 17, name: &#39;Dynama&#39; },\n    { id: 18, name: &#39;Dr IQ&#39; },\n    { id: 19, name: &#39;Magma&#39; },\n    { id: 20, name: &#39;Tornado&#39; }\n    ];\n    return {heroes};\n}\n\n// Overrides the genId method to ensure that a hero always has an id.\n// If the heroes array is empty,\n// the method below returns the initial number (11).\n// if the heroes array is not empty, the method below returns the highest\n// hero id + 1.\ngenId(heroes: Hero[]): number {\n    return heroes.length &gt; 0 ? Math.max(...heroes.map(hero =&gt; hero.id)) + 1 : 11;\n}\n}\n</code></pre><pcode>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x37",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "37",
            "time" : 1555228371611,
            "title" : "40.0 ヒーローとHTTP",
            "update_at" : 1556488166377
          },
          "x38" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>src/app/hero.service.ts (HTTPシンボルをインポート)\n    import { HttpClient, HttpHeaders } from &#39;@angular/common/http&#39;;\n    constructor(\n    private http: HttpClient,\n    private messageService: MessageService) { }\nsrc/app/hero.service.ts (RxJSの&#39;of()&#39;を使ったgetHeroes)\n    private heroesUrl = &#39;api/heroes&#39;;  // Web APIのURL\n    /** サーバーからヒーローを取得する */\n    getHeroes (): Observable&lt;Hero[]&gt; {\n        return this.http.get&lt;Hero[]&gt;(this.heroesUrl)\n    }</code></pre>",
              "type" : "Html"
            },
            "id" : "x38",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "38",
            "time" : 1555228371611,
            "title" : "41.0 Observableに侵入link",
            "update_at" : 1556488166377
          },
          "x39" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>src/app/hero.service.ts (RxJSの&#39;of()&#39;を使ったgetHeroes)\n    /** サーバーからヒーローを取得する */\n    getHeroes (): Observable&lt;Hero[]&gt; {\n    return this.http.get&lt;Hero[]&gt;(this.heroesUrl)\n        .pipe(\n        tap(heroes =&gt; this.log(&#39;fetched heroes&#39;)),\n        catchError(this.handleError&lt;Hero[]&gt;(&#39;getHeroes&#39;, []))\n        );\n    }</code></pre>",
              "type" : "Html"
            },
            "id" : "x39",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "39",
            "time" : 1555228371611,
            "title" : "42.0 IDでヒーローを取得する",
            "update_at" : 1556488166377
          },
          "x40" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>src/app/hero.service.ts\n    /** IDによりヒーローを取得する。見つからなかった場合は404を返却する。 */\n    getHero(id: number): Observable&lt;Hero&gt; {\n    const url = `${this.heroesUrl}/${id}`;\n    return this.http.get&lt;Hero&gt;(url).pipe(\n        tap(_ =&gt; this.log(`fetched hero id=${id}`)),\n        catchError(this.handleError&lt;Hero&gt;(`getHero id=${id}`))\n    );\n    }</code></pre>",
              "type" : "Html"
            },
            "id" : "x40",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "40",
            "time" : 1555228371611,
            "title" : "43.0 Angularアニメーション・イントロダクション",
            "update_at" : 1556488166377
          },
          "x41" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>アニメーションは動きの錯覚を提供します(時間の経過と共にHTML要素の\nスタイルが変化します)。うまく設計されたアニメーションは\nアプリケーションをより楽しく使いやすくすることができます。しかし、\nただの飾りではありません。アニメーションは、さまざまな方法でアプリ\n・ユーザー体験を向上させることができます:\nアニメーションがなければ、Webページの遷移は突然で不快感を与えるか\nもしれません。\nモーションはユーザー体験を大幅に向上させます。アニメーションは\nユーザーの操作に対するアプリケーションの応答を検出する機会を与えます。\nよいアニメーションは直感的にユーザーの注意を必要な場所に呼びよせます。</code></pre>",
              "type" : "Html"
            },
            "id" : "x41",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "41",
            "time" : 1555228371611,
            "title" : "44.0 アニメーションモジュールを有効にする",
            "update_at" : 1556488166377
          },
          "x42" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nsrc/app/app.module.ts\n    import { NgModule } from &#39;@angular/core&#39;;\n    import { BrowserModule } from &#39;@angular/platform-browser&#39;;\n    import { BrowserAnimationsModule } from &#39;@angular/platform-browser/animations&#39;;</p>\n<pre><code>@NgModule({\nimports: [\n    BrowserModule,\n    BrowserAnimationsModule\n],\ndeclarations: [ ],\nbootstrap: [ ]\n})\nexport class AppModule { }\n</code></pre><pcode>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x42",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "42",
            "time" : 1555228371611,
            "title" : "45.0 コンポーネントファイル内にアニメーション関数をインポートする",
            "update_at" : 1556488166377
          },
          "x43" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>src/app/app.component.ts\n    import { Component, HostBinding } from &#39;@angular/core&#39;;\n    import {\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    // ...\n    } from &#39;@angular/animations&#39;;</code></pre>",
              "type" : "Html"
            },
            "id" : "x43",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "43",
            "time" : 1555228371611,
            "title" : "46.0 アニメーションメタデータプロパティを追加する",
            "update_at" : 1556488166377
          },
          "x44" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "https://angular.jp/generated/images/guide/animations/open-closed.png",
              "type" : "Picture"
            },
            "id" : "x44",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "44",
            "time" : 1555228371611,
            "title" : "46.4 シンプルな遷移アニメーション",
            "update_at" : 1556488166377
          },
          "x45" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>単一のHTML要素をある状態から別の状態に変更するシンプルな遷移\nをアニメーション化しましょう。たとえば、ユーザーの最後の操作\nから、ボタンがOpenまたはClosedのいずれかを表示するように指定\nできます。ボタンがopen状態では表示され黄色になり、closed状態\nになると透明で緑色になります。\nHTMLでは、これらの属性は色や不透明度などの通常のCSSスタイル\nを使用して設定されます。Angularでは、style()関数を使用して\n、アニメーションで使用する一連のCSSスタイルを指定します。\nアニメーションの状態に対して一連のスタイルをまとめて、その状\n態に対してopenやclosedなどの名前を付けることができます。</code></pre>",
              "type" : "Html"
            },
            "id" : "x45",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "45",
            "time" : 1555228371611,
            "title" : "47.0 アニメーションの状態とスタイル",
            "update_at" : 1556488166377
          },
          "x46" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>src/app/open-close.component.ts\n    // ...\n    state(&#39;open&#39;, style({\n    height: &#39;200px&#39;,\n    opacity: 1,\n    backgroundColor: &#39;yellow&#39;\n    })),\nsrc/app/open-close.component.ts\n    state(&#39;closed&#39;, style({\n    height: &#39;100px&#39;,\n    opacity: 0.5,\n    backgroundColor: &#39;green&#39;\n    })),</code></pre>",
              "type" : "Html"
            },
            "id" : "x46",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "46",
            "time" : 1555228371611,
            "title" : "48.0 アニメーションの状態とスタイル",
            "update_at" : 1556488166377
          },
          "x47" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>src/app/open-close.component.ts\n    transition(&#39;open =&gt; closed&#39;, [\n        animate(&#39;1s&#39;)\n    ]),\nsrc/app/open-close.component.ts\n    transition(&#39;closed =&gt; open&#39;, [\n        animate(&#39;0.5s&#39;)\n    ]),</code></pre>",
              "type" : "Html"
            },
            "id" : "x47",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "47",
            "time" : 1555228371611,
            "title" : "49.0 Httpクライアントモジュール",
            "update_at" : 1556488166377
          },
          "x48" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>新しいHttpクライアントモジュールは@angular/common/httpとして、\nこれまでの@angular/httpとは別のモジュールとして提供されています。\n既存のHttpモジュールと新しいHttpクライアントモジュールでは基本的\nな使い方は似ていますが、一部互換性のない構文が含まれています。\nそのためいきなり@angular/httpを置き換えるのではなく別モジュール\nとすることで、徐々に移行できるようにしようという意図があるようです。</code></pre>",
              "type" : "Html"
            },
            "id" : "x48",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "48",
            "time" : 1555228371611,
            "title" : "50.0 Httpクライアントモジュールインストール",
            "update_at" : 1556488166377
          },
          "x49" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\napp.module.ts\n    import { NgModule } from &#39;@angular/core&#39;;\n    import { BrowserModule } from &#39;@angular/platform-browser&#39;;</p>\n<pre><code>// HttpClientModuleをインポート\nimport { HttpClientModule } from &#39;@angular/common/http&#39;;\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        // HttpClientModuleを追加\n        HttpClientModule,\n    ],\n})\nexport class AppModule {}\n</code></pre><p>sample.service.ts\n    import { Injectable } from &#39;@angular/core&#39;;\n    import { HttpClient } from &#39;@angular/common/http&#39;;</p>\n<pre><code>@Injectable()\nexport class SampleService {\n\n    // コンストラクタの引数に指定してDI\n    constructor(private http: HttpClient) {}\n}\n</code></pre><pcode>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x49",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "49",
            "time" : 1555228371611,
            "title" : "51.0 JSON形式のパースがデフォルトに",
            "update_at" : 1556488166377
          },
          "x50" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>this.http.get(url).map(response =&gt; response.json()).subscribe(json =&gt; ...);\nhttp.get(url, { responseType: &#39;text&#39; })\n    // レスポンスはテキストとしてsubscribeに渡される\n    .subscribe(text =&gt; console.log(text));</code></pre>",
              "type" : "Html"
            },
            "id" : "x50",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "50",
            "time" : 1555228371611,
            "title" : "52.0 レスポンスの型指定",
            "update_at" : 1556488166377
          },
          "x51" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nJavaScriptとTypeScriptで全く同じコードなのにresponse.fooの呼び出しがエラー\nになってしまいました。これを回避するためには、interfaceを用いて内部のプロパティ\nを定義する必要があります。\nimport &#39;rxjs/add/operator/map&#39;;</p>\n<p>// プロパティ: fooを持つinterfaceを定義\ninterface FooResponse {\n    foo: string;\n}</p>\n<p>// パターン1：mapでキャスト\nthis.http.get(url)\n    // FooResponseにキャスト\n    .map(response =&gt; response as FooResponse)\n    .subscribe(response =&gt; {\n        console.log(response.foo);     // OK \n        console.log(response[&#39;foo&#39;]);  // OK\n    });</p>\n<p>// パターン2：subscribe内でキャスト\nthis.http.get(url)\n    .subscribe(response =&gt; {\n        const fooResponse = response as FooResponse;\n        console.log(fooResponse.foo);     // OK\n        console.log(fooResponse[&#39;foo&#39;]);  // OK\n    });\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x51",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "51",
            "time" : 1555228371611,
            "title" : "53.0 完全なレスポンスの取得",
            "update_at" : 1556488166377
          },
          "x52" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n// プロパティ: fooを持つinterfaceを定義\ninterface FooResponse {\n    foo: string;\n}</p>\n<p>// getメソッドにobserveオプションを指定\nthis.http.get<FooResponse>(url, { observe: &#39;response&#39; })\n    .subscribe(response =&gt; {\n        // ヘッダ情報はresponse.headersに格納。getメソッドで取得。\n        console.log(response.headers.get(&#39;X-My-Header&#39;));</p>\n<pre><code>    // レスポンスボディはresponse.bodyに格納。型指定も有効。\n    console.log(response.body.foo);\n});\n</code></pre><pcode>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x52",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "52",
            "time" : 1555228371611,
            "title" : "54.0 Interceptor",
            "update_at" : 1556488166377
          },
          "x53" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nimport { Injectable } from &#39;@angular/core&#39;;\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from &#39;@angular/common/http&#39;;\nimport { Observable } from &#39;rxjs/Observable&#39;;</p>\n<p>@Injectable()\nexport class SimpleInterceptor implements HttpInterceptor {</p>\n<pre><code>// リクエストの変換処理。ここに共通処理を記述。\nintercept(request: HttpRequest&lt;any&gt;, next: HttpHandler): Observable&lt;HttpEvent&lt;any&gt;&gt; {\n    return next.handle(request);\n}\n</code></pre><p>}</p>\n<p>import { NgModule } from &#39;@angular/core&#39;;\nimport { HTTP_INTERCEPTORS } from &#39;@angular/common/http&#39;;\nimport { SimpleInterceptor } from &#39;./simple-interceptor.service&#39;;</p>\n<p>@NgModule({\n    providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: SimpleInterceptor,\n            // 必須：HTTP_INTERCEPTORSが配列であることを示す\n            multi: true\n        }\n    ]\n})\nexport class AppModule {}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x53",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "53",
            "time" : 1555228371611,
            "title" : "55.0 リクエストの処理",
            "update_at" : 1556488166377
          },
          "x54" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n// そのまま複製するサンプル\nintercept(request: HttpRequest<any>, next: HttpHandler): Observable&lt;HttpEvent<any>&gt; {\n    const req = request.clone();</p>\n<pre><code>return next.handle(req);\n</code></pre><p>}</p>\n<p>// fooの値を書き換える場合\nintercept(request: HttpRequest<any>, next: HttpHandler): Observable&lt;HttpEvent<any>&gt; {\n    const req = request.clone({ foo: &#39;Foo&#39; });</p>\n<pre><code>return next.handle(req);\n</code></pre><p>}</p>\n<p>// 複数の値も可\nintercept(request: HttpRequest<any>, next: HttpHandler): Observable&lt;HttpEvent<any>&gt; {\n    const req = request.clone({ foo: &#39;Foo&#39;, bar: &#39;Bar&#39; });</p>\n<pre><code>return next.handle(req);\n</code></pre><p>}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x54",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "54",
            "time" : 1555228371611,
            "title" : "56.0 レスポンスの処理",
            "update_at" : 1556488166377
          },
          "x55" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nintercept(request: HttpRequest<any>, next: HttpHandler): Observable&lt;HttpEvent<any>&gt; {\n    const storage = window.sessionStorage;</p>\n<pre><code>return next.handle(request)\n    .do(event =&gt; {\n        if (event instanceof HttpResponse) {\n            storage.setItem(&#39;cache&#39;, event.body);\n        }\n    });\n</code></pre><p>}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x55",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "55",
            "time" : 1555228371611,
            "title" : "57.0 Progress Events",
            "update_at" : 1556488166377
          },
          "x56" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nimport { HttpEventType, HttpResponse, HttpEventType } from &#39;@angular/common/http&#39;;</p>\n<p>this.http.request(request).subscribe(event =&gt; {</p>\n<pre><code>if (event.type === HttpEventType.UploadProgress) {\n    // 進捗状況の出力\n    const percentDone = Math.round(100 * event.loaded / event.total);\n    console.log(`File is ${percentDone}% uploaded.`);\n} else if (event instanceof HttpResponse) {\n    // HttpResponseを取得した場合は処理完了\n    console.log(&#39;File is completely uploaded!&#39;);\n}\n</code></pre><p>});\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x56",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "56",
            "time" : 1555228371611,
            "title" : "58.0 XSRF対策",
            "update_at" : 1556488166377
          },
          "x57" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>上で紹介した Interceptor を利用した機能として、XSRF 対策がサポートされています。\nクッキーに XSRF-TOKEN が設定されている場合、その値をリクエストヘッダ X-XSRF-TOKEN \nに設定して通信します。\nこの Intercepter は、HttpClient を使用した通信のうち、\nリクエストメソッドが GET, HEAD 以外\nリクエスト先 URL が相対パス\nであるリクエストに適用されます。</code></pre>",
              "type" : "Html"
            },
            "id" : "x57",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "57",
            "time" : 1555228371611,
            "title" : "59.0 Observable",
            "update_at" : 1556488166377
          },
          "x58" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>Observableは、アプリケーションの中でパブリッシャーとサブスクライバー間でメッセージ\nを渡すためのサポートを提供します。Observableは、イベント処理、非同期プログラミング、\nおよび複数の値の処理のための他のテクニックよりも大きな利点を提供します。\nObservableは宣言的です—つまり、値を公開するための関数を定義しますが、コンシューマー\nがそれを購読するまでは実行されません。購読するコンシューマーは、機能が完了するまで、\nまたは購読を中止するまで通知を受け取ります。\nObservableは、文脈に応じて、任意の型—リテラル、メッセージ、またはイベントの複数の値\nを提供できます。受け取るためのAPIは値が同期的・非同期的に提供される場合も同じです。\n基本的なセットアップとティアダウンはObservableによって処理されるので、あなたの\nアプリケーションコードは値を消費するためにサブスクライブを行うことと、それが済んだら\n購読を中止することだけを心配する必要があります。ストリームがキー入力、HTTPレスポンス、\nインターバルタイマーのどれでも、値をリスニングしたり、リスニングを止めるためのインター\nフェースは同じです。\nこれらの利点のために、ObservableはAngular内で広く使用されており、アプリの開発にも推\n奨されています。</code></pre>",
              "type" : "Html"
            },
            "id" : "x58",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "58",
            "time" : 1555228371611,
            "title" : "60.0 ジオロケーションのアップデートを監視する",
            "update_at" : 1556488166377
          },
          "x59" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n// Create an Observable that will start listening to geolocation updates\n// when a consumer subscribes.\nconst locations = new Observable((observer) =&gt; {\n  // Get the next and error callbacks. These will be passed in when\n  // the consumer subscribes.\n  const {next, error} = observer;\n  let watchId;</p>\n<p>  // Simple geolocation API check provides values to publish\n  if (&#39;geolocation&#39; in navigator) {\n    watchId = navigator.geolocation.watchPosition(next, error);\n  } else {\n    error(&#39;Geolocation not available&#39;);\n  }</p>\n<p>  // When the consumer unsubscribes, clean up data ready for next subscription.\n  return {unsubscribe() { navigator.geolocation.clearWatch(watchId); }};\n});</p>\n<p>// Call subscribe() to start listening for updates.\nconst locationsSubscription = locations.subscribe({\n  next(position) { console.log(&#39;Current Position: &#39;, position); },\n  error(msg) { console.log(&#39;Error Getting Location: &#39;, msg); }\n});</p>\n<p>// Stop listening for location after 10 seconds\nsetTimeout(() =&gt; { locationsSubscription.unsubscribe(); }, 10000);</p>\n<p>next\n必須です。個々の値が提供されたときのハンドラーです。実行が開始されてから0回以上呼び出されます。\nerror\nオプションです。エラー通知のハンドラーです。エラーはObservableインスタンスの実行を停止します。\ncomplete\nオプションです。実行完了通知のハンドラーです。遅延した値は、実行完了後もnextハンドラーに引き続き渡されます。\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x59",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "59",
            "time" : 1555228371611,
            "title" : "61.0 サブスクライブ",
            "update_at" : 1556488166377
          },
          "x60" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nSubscribe using observer\n    // Create simple observable that emits three values\n    const myObservable = of(1, 2, 3);</p>\n<pre><code>// Create observer object\nconst myObserver = {\nnext: x =&gt; console.log(&#39;Observer got a next value: &#39; + x),\nerror: err =&gt; console.error(&#39;Observer got an error: &#39; + err),\ncomplete: () =&gt; console.log(&#39;Observer got a complete notification&#39;),\n};\n\n// Execute with the observer object\nmyObservable.subscribe(myObserver);\n// Logs:\n// Observer got a next value: 1\n// Observer got a next value: 2\n// Observer got a next value: 3\n// Observer got a complete notification\n</code></pre><p>Subscribe with positional arguments\n    myObservable.subscribe(\n    x =&gt; console.log(&#39;Observer got a next value: &#39; + x),\n    err =&gt; console.error(&#39;Observer got an error: &#39; + err),\n    () =&gt; console.log(&#39;Observer got a complete notification&#39;)\n    );\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x60",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "60",
            "time" : 1555228371611,
            "title" : "62.0 Observableを作成する",
            "update_at" : 1556488166377
          },
          "x61" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nCreate observable with constructor\n    // This function runs when subscribe() is called\n    function sequenceSubscriber(observer) {\n    // synchronously deliver 1, 2, and 3, then complete\n    observer.next(1);\n    observer.next(2);\n    observer.next(3);\n    observer.complete();</p>\n<pre><code>// unsubscribe function doesn&#39;t need to do anything in this\n// because values are delivered synchronously\nreturn {unsubscribe() {}};\n}\n\n// Create a new Observable that will deliver the above sequence\nconst sequence = new Observable(sequenceSubscriber);\n\n// execute the Observable and print the result of each notification\nsequence.subscribe({\nnext(num) { console.log(num); },\ncomplete() { console.log(&#39;Finished sequence&#39;); }\n});\n\n// Logs:\n// 1\n// 2\n// 3\n// Finished sequence\n</code></pre><p>Create with custom fromEvent function\n    function fromEvent(target, eventName) {\n    return new Observable((observer) =&gt; {\n        const handler = (e) =&gt; observer.next(e);</p>\n<pre><code>    // Add the event handler to the target\n    target.addEventListener(eventName, handler);\n\n    return () =&gt; {\n    // Detach the event handler from the target\n    target.removeEventListener(eventName, handler);\n    };\n});\n}\n</code></pre><p>Use custom fromEvent function\n    const ESC_KEY = 27;\n    const nameInput = document.getElementById(&#39;name&#39;) as HTMLInputElement;</p>\n<pre><code>const subscription = fromEvent(nameInput, &#39;keydown&#39;)\n.subscribe((e: KeyboardEvent) =&gt; {\n    if (e.keyCode === ESC_KEY) {\n    nameInput.value = &#39;&#39;;\n    }\n});\n</code></pre><pcode>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x61",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "61",
            "time" : 1555228371611,
            "title" : "63.0 マルチキャスト",
            "update_at" : 1556488166377
          },
          "x62" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>典型的なObservableは、サブスクライブしたオブザーバーごとに独立した新しい実行を作成します。\nオブザーバーが購読すると、Observableはイベントハンドラーをつなぎ、そのオブザーバーに値を\n渡します。2つ目のオブザーバーが加入すると、Observableは新しいイベントハンドラーをつなぎ、\n別の実行でその2つ目のオブザーバーに値を渡します。\n場合によっては、各サブスクライバーに対して独立した実行を開始するのではなく各サブスクリプ\nションが同じ値を取得するようにしたいことがあるでしょう—値の発行がすでに始まっていたとして\nも。これは、ドキュメントオブジェクトのクリックを監視するような場合に当てはまります。\nマルチキャスト は、1回の実行で複数のサブスクライバーにブロードキャストする方法です。マルチ\nキャスト\bをするObservable\bの場合、ドキュメントに複数のリスナーを登録するのではなく、最初\nのリスナーを再利用して値を各サブスクライバーに送信します。\nObservableを作成するときは、そのObservableをどのように使用するか、およびその値をマルチキ\nャストするかどうかを決定する必要があります。\n個々の数値が発信されてから1秒遅れ\bて、1から3までカウントする例を見てみましょう。</code></pre>",
              "type" : "Html"
            },
            "id" : "x62",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "62",
            "time" : 1555228371611,
            "title" : "64.0 Create a delayed sequence",
            "update_at" : 1556488166377
          },
          "x63" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nfunction sequenceSubscriber(observer) {\n  const seq = [1, 2, 3];\n  let timeoutId;</p>\n<p>  // Will run through an array of numbers, emitting one value\n  // per second until it gets to the end of the array.\n  function doSequence(arr, idx) {\n    timeoutId = setTimeout(() =&gt; {\n      observer.next(arr[idx]);\n      if (idx === arr.length - 1) {\n        observer.complete();\n      } else {\n        doSequence(arr, ++idx);\n      }\n    }, 1000);\n  }</p>\n<p>  doSequence(seq, 0);</p>\n<p>  // Unsubscribe should clear the timeout to stop execution\n  return {unsubscribe() {\n    clearTimeout(timeoutId);\n  }};\n}</p>\n<p>// Create a new Observable that will deliver the above sequence\nconst sequence = new Observable(sequenceSubscriber);</p>\n<p>sequence.subscribe({\n  next(num) { console.log(num); },\n  complete() { console.log(&#39;Finished sequence&#39;); }\n});</p>\n<p>// Logs:\n// (at 1 second): 1\n// (at 2 seconds): 2\n// (at 3 seconds): 3\n// (at 3 seconds): Finished sequence\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x63",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "63",
            "time" : 1555228371611,
            "title" : "65.0 Two subscriptions",
            "update_at" : 1556488166377
          },
          "x64" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n// Subscribe starts the clock, and will emit after 1 second\nsequence.subscribe({\n  next(num) { console.log(&#39;1st subscribe: &#39; + num); },\n  complete() { console.log(&#39;1st sequence finished.&#39;); }\n});</p>\n<p>// After 1/2 second, subscribe again.\nsetTimeout(() =&gt; {\n  sequence.subscribe({\n    next(num) { console.log(&#39;2nd subscribe: &#39; + num); },\n    complete() { console.log(&#39;2nd sequence finished.&#39;); }\n  });\n}, 500);</p>\n<p>// Logs:\n// (at 1 second): 1st subscribe: 1\n// (at 1.5 seconds): 2nd subscribe: 1\n// (at 2 seconds): 1st subscribe: 2\n// (at 2.5 seconds): 2nd subscribe: 2\n// (at 3 seconds): 1st subscribe: 3\n// (at 3 seconds): 1st sequence finished\n// (at 3.5 seconds): 2nd subscribe: 3\n// (at 3.5 seconds): 2nd sequence finished\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x64",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "64",
            "time" : 1555228371611,
            "title" : "66.0 Create a multicast subscriber",
            "update_at" : 1556488166377
          },
          "x65" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nfunction multicastSequenceSubscriber() {\n  const seq = [1, 2, 3];\n  // Keep track of each observer (one for every active subscription)\n  const observers = [];\n  // Still a single timeoutId because there will only ever be one\n  // set of values being generated, multicasted to each subscriber\n  let timeoutId;</p>\n<p>  // Return the subscriber function (runs when subscribe()\n  // function is invoked)\n  return (observer) =&gt; {\n    observers.push(observer);\n    // When this is the first subscription, start the sequence\n    if (observers.length === 1) {\n      timeoutId = doSequence({\n        next(val) {\n          // Iterate through observers and notify all subscriptions\n          observers.forEach(obs =&gt; obs.next(val));\n        },\n        complete() {\n          // Notify all complete callbacks\n          observers.slice(0).forEach(obs =&gt; obs.complete());\n        }\n      }, seq, 0);\n    }</p>\n<pre><code>return {\n  unsubscribe() {\n    // Remove from the observers array so it&#39;s no longer notified\n    observers.splice(observers.indexOf(observer), 1);\n    // If there&#39;s no more listeners, do cleanup\n    if (observers.length === 0) {\n      clearTimeout(timeoutId);\n    }\n  }\n};\n</code></pre><p>  };\n}</p>\n<p>// Run through an array of numbers, emitting one value\n// per second until it gets to the end of the array.\nfunction doSequence(observer, arr, idx) {\n  return setTimeout(() =&gt; {\n    observer.next(arr[idx]);\n    if (idx === arr.length - 1) {\n      observer.complete();\n    } else {\n      doSequence(observer, arr, ++idx);\n    }\n  }, 1000);\n}</p>\n<p>// Create a new Observable that will deliver the above sequence\nconst multicastSequence = new Observable(multicastSequenceSubscriber());</p>\n<p>// Subscribe starts the clock, and begins to emit after 1 second\nmulticastSequence.subscribe({\n  next(num) { console.log(&#39;1st subscribe: &#39; + num); },\n  complete() { console.log(&#39;1st sequence finished.&#39;); }\n});</p>\n<p>// After 1 1/2 seconds, subscribe again (should &quot;miss&quot; the first value).\nsetTimeout(() =&gt; {\n  multicastSequence.subscribe({\n    next(num) { console.log(&#39;2nd subscribe: &#39; + num); },\n    complete() { console.log(&#39;2nd sequence finished.&#39;); }\n  });\n}, 1500);</p>\n<p>// Logs:\n// (at 1 second): 1st subscribe: 1\n// (at 2 seconds): 1st subscribe: 2\n// (at 2 seconds): 2nd subscribe: 2\n// (at 3 seconds): 1st subscribe: 3\n// (at 3 seconds): 1st sequence finished\n// (at 3 seconds): 2nd subscribe: 3\n// (at 3 seconds): 2nd sequence finished\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x65",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "65",
            "time" : 1555228371611,
            "title" : "67.0 RxJS ライブラリ",
            "update_at" : 1556488166377
          },
          "x66" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>RxJS は Observable 型の実装を提供します。Observable 型は、型が言語の\n一部となるまで、そしてブラウザがそれをサポートするまで必要です。ライブラリ\nはまたobservablesを作成して作業するためのユーティリティ関数を提供します。\nこれらのユーティリティ関数は、次の用途に使用できます。\n 非同期処理の既存のコードを observables に変換する\n ストリーム内の値を反復処理する\n 異なる型への値のマッピング\n ストリームのフィルタリング\n 複数のストリームの作成</code></pre>",
              "type" : "Html"
            },
            "id" : "x66",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "66",
            "time" : 1555228371611,
            "title" : "68.0 Observable 作成関数",
            "update_at" : 1556488166377
          },
          "x67" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\npromise から observable を作成する\n    import { from } from &#39;rxjs&#39;;</p>\n<pre><code>// Create an Observable out of a promise\nconst data = from(fetch(&#39;/api/endpoint&#39;));\n// Subscribe to begin listening for async result\ndata.subscribe({\nnext(response) { console.log(response); },\nerror(err) { console.error(&#39;Error: &#39; + err); },\ncomplete() { console.log(&#39;Completed&#39;); }\n});\n</code></pre><p>カウンターから observable を\b作成する\n    import { interval } from &#39;rxjs&#39;;</p>\n<pre><code>// Create an Observable that will publish a value on an interval\nconst secondsCounter = interval(1000);\n// Subscribe to begin publishing values\nsecondsCounter.subscribe(n =&gt;\nconsole.log(`It&#39;s been ${n} seconds since subscribing!`));\n</code></pre><p>イベントから observable を作成する\n    import { fromEvent } from &#39;rxjs&#39;;</p>\n<pre><code>const el = document.getElementById(&#39;my-element&#39;);\n\n// Create an Observable that will publish mouse movements\nconst mouseMoves = fromEvent(el, &#39;mousemove&#39;);\n\n// Subscribe to start listening for mouse-move events\nconst subscription = mouseMoves.subscribe((evt: MouseEvent) =&gt; {\n// Log coords of mouse movements\nconsole.log(`Coords: ${evt.clientX} X ${evt.clientY}`);\n\n// When the mouse is over the upper-left of the screen,\n// unsubscribe to stop listening for mouse movements\nif (evt.clientX &lt; 40 &amp;&amp; evt.clientY &lt; 40) {\n    subscription.unsubscribe();\n}\n});\n</code></pre><p>AJAX リクエストから observable を作成する\n    import { ajax } from &#39;rxjs/ajax&#39;;</p>\n<pre><code>// Create an Observable that will create an AJAX request\nconst apiData = ajax(&#39;/api/data&#39;);\n// Subscribe to create the request\napiData.subscribe(res =&gt; console.log(res.status, res.response));\n</code></pre><pcode>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x67",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "67",
            "time" : 1555228371611,
            "title" : "69.0 オペレーター",
            "update_at" : 1556488166377
          },
          "x68" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nMap operator\n    import { map } from &#39;rxjs/operators&#39;;</p>\n<pre><code>const nums = of(1, 2, 3);\n\nconst squareValues = map((val: number) =&gt; val * val);\nconst squaredNums = squareValues(nums);\n\nsquaredNums.subscribe(x =&gt; console.log(x));\n\n// Logs\n// 1\n// 4\n// 9\n</code></pre><p>Standalone pipe function\n    import { filter, map } from &#39;rxjs/operators&#39;;</p>\n<pre><code>const nums = of(1, 2, 3, 4, 5);\n\n// Create a function that accepts an Observable.\nconst squareOddVals = pipe(\nfilter((n: number) =&gt; n % 2 !== 0),\nmap(n =&gt; n * n)\n);\n\n// Create an Observable that will run the filter and map functions\nconst squareOdd = squareOddVals(nums);\n\n// Suscribe to run the combined functions\nsquareOdd.subscribe(x =&gt; console.log(x));\n</code></pre><p>Observable.pipe function\n    import { filter, map } from &#39;rxjs/operators&#39;;</p>\n<pre><code>const squareOdd = of(1, 2, 3, 4, 5)\n.pipe(\n    filter(n =&gt; n % 2 !== 0),\n    map(n =&gt; n * n)\n);\n\n// Subscribe to get values\nsquareOdd.subscribe(x =&gt; console.log(x));\n</code></pre><pcode>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x68",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "68",
            "time" : 1555228371611,
            "title" : "70.0 catchError オペレーター",
            "update_at" : 1556488166377
          },
          "x69" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nimport { ajax } from &#39;rxjs/ajax&#39;;\nimport { map, catchError } from &#39;rxjs/operators&#39;;\n// Return &quot;response&quot; from the API. If an error happens,\n// return an empty array.\nconst apiData = ajax(&#39;/api/data&#39;).pipe(\n  map(res =&gt; {\n    if (!res.response) {\n      throw new Error(&#39;Value expected!&#39;);\n    }\n    return res.response;\n  }),\n  catchError(err =&gt; of([]))\n);</p>\n<p>apiData.subscribe({\n  next(x) { console.log(&#39;data: &#39;, x); },\n  error(err) { console.log(&#39;errors already caught... will not run&#39;); }\n});\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x69",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "69",
            "time" : 1555228371611,
            "title" : "71.0 失敗した observable の再実行",
            "update_at" : 1556488166377
          },
          "x70" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nimport { ajax } from &#39;rxjs/ajax&#39;;\nimport { map, retry, catchError } from &#39;rxjs/operators&#39;;</p>\n<p>const apiData = ajax(&#39;/api/data&#39;).pipe(\n  retry(3), // Retry up to 3 times before failing\n  map(res =&gt; {\n    if (!res.response) {\n      throw new Error(&#39;Value expected!&#39;);\n    }\n    return res.response;\n  }),\n  catchError(err =&gt; of([]))\n);</p>\n<p>apiData.subscribe({\n  next(x) { console.log(&#39;data: &#39;, x); },\n  error(err) { console.log(&#39;errors already caught... will not run&#39;); }\n});\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x70",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "70",
            "time" : 1555228371611,
            "title" : "72.0 Naming observables",
            "update_at" : 1556488166377
          },
          "x71" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nimport { Component } from &#39;@angular/core&#39;;\nimport { Observable } from &#39;rxjs&#39;;</p>\n<p>@Component({\n  selector: &#39;app-stopwatch&#39;,\n  templateUrl: &#39;./stopwatch.component.html&#39;\n})\nexport class StopwatchComponent {</p>\n<p>  stopwatchValue: number;\n  stopwatchValue$: Observable<number>;</p>\n<p>  start() {\n    this.stopwatchValue$.subscribe(num =&gt;\n      this.stopwatchValue = num\n    );\n  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x71",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "71",
            "time" : 1555228371611,
            "title" : "73.0 Angular での Observable",
            "update_at" : 1556488166377
          },
          "x72" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>Angular はさまざまな一般的な非同期操作を処理するためのインターフェースとして \nObservable を使用します。たとえば：\nEventEmitter クラスは Observable を拡張しています。\nHTTP モジュールは Observable を使用して AJAX リクエストとレスポンスを処理\nします。\nRouter と Form モジュールは、ユーザー入力イベントを待ち受けてレスポンスする\nために Observable を使用します。</code></pre>",
              "type" : "Html"
            },
            "id" : "x72",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "72",
            "time" : 1555228371611,
            "title" : "74.0 EventEmitter",
            "update_at" : 1556488166377
          },
          "x73" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n@Component({\n  selector: &#39;zippy&#39;,\n  template: <code>&lt;div class=&quot;zippy&quot;&gt;\n    &lt;div (click)=&quot;toggle()&quot;&gt;Toggle&lt;/div&gt;\n    &lt;div [hidden]=&quot;!visible&quot;&gt;\n      &lt;ng-content&gt;&lt;/ng-content&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;</code>})</p>\n<p>export class ZippyComponent {\n  visible = true;\n  @Output() open = new EventEmitter<any>();\n  @Output() close = new EventEmitter<any>();</p>\n<p>  toggle() {\n    this.visible = !this.visible;\n    if (this.visible) {\n      this.open.emit(null);\n    } else {\n      this.close.emit(null);\n    }\n  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x73",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "73",
            "time" : 1555228371611,
            "title" : "75.0 HTTP",
            "update_at" : 1556488166377
          },
          "x74" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>ngularの HttpClient は、HTTPメソッド呼び出しからの Observable を返します。\nたとえば、http.get(‘/api’) は Observable オブジェクトを返します。これは、\nPromise ベースの HTTP API に勝るいくつかの利点を提供します。\nObservables はサーバーのレスポンスを変更しません(Promise で .then() の呼び\n出しによって発生する可能性があります)。代わりに、必要に応じて一連のオペレータ\nーを使用して値を変換することができます。\nHTTP リクエストは unsubscribe() メソッドで取り消すことができます。\nイベントの更新の進行状況を取得するようにリクエストを構成できます。\n失敗したリクエストは簡単に再試行できます。</code></pre>",
              "type" : "Html"
            },
            "id" : "x74",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "74",
            "time" : 1555228371611,
            "title" : "76.0 非同期パイプの使用",
            "update_at" : 1556488166377
          },
          "x75" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>@Component({\n  selector: &#39;async-observable-pipe&#39;,\n  template: `&lt;div&gt;&lt;code&gt;observable|async&lt;/code&gt;:\n       Time: {{ time | async }}&lt;/div&gt;`\n})\nexport class AsyncObservablePipeComponent {\n  time = new Observable(observer =&gt;\n    setInterval(() =&gt; observer.next(new Date().toString()), 1000)\n  );\n}</code></pre>",
              "type" : "Html"
            },
            "id" : "x75",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "75",
            "time" : 1555228371611,
            "title" : "77.0 ルーターイベント",
            "update_at" : 1556488166377
          },
          "x76" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nimport { Router, NavigationStart } from &#39;@angular/router&#39;;\nimport { filter } from &#39;rxjs/operators&#39;;</p>\n<p>@Component({\n  selector: &#39;app-routable&#39;,\n  templateUrl: &#39;./routable.component.html&#39;,\n  styleUrls: [&#39;./routable.component.css&#39;]\n})\nexport class Routable1Component implements OnInit {</p>\n<p>  navStart: Observable<NavigationStart>;</p>\n<p>  constructor(private router: Router) {\n    // Create a new Observable that publishes only the NavigationStart event\n    this.navStart = router.events.pipe(\n      filter(evt =&gt; evt instanceof NavigationStart)\n    ) as Observable<NavigationStart>;\n  }</p>\n<p>  ngOnInit() {\n    this.navStart.subscribe(evt =&gt; console.log(&#39;Navigation Started!&#39;));\n  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x76",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "76",
            "time" : 1555228371611,
            "title" : "78.0 ActivatedRoute",
            "update_at" : 1556488166377
          },
          "x77" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nimport { ActivatedRoute } from &#39;@angular/router&#39;;</p>\n<p>@Component({\n  selector: &#39;app-routable&#39;,\n  templateUrl: &#39;./routable.component.html&#39;,\n  styleUrls: [&#39;./routable.component.css&#39;]\n})\nexport class Routable2Component implements OnInit {\n  constructor(private activatedRoute: ActivatedRoute) {}</p>\n<p>  ngOnInit() {\n    this.activatedRoute.url\n      .subscribe(url =&gt; console.log(&#39;The URL changed to: &#39; + url));\n  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x77",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "77",
            "time" : 1555228371611,
            "title" : "79.0 リアクティブフォーム",
            "update_at" : 1556488166377
          },
          "x78" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nimport { FormGroup } from &#39;@angular/forms&#39;;</p>\n<p>@Component({\n  selector: &#39;my-component&#39;,\n  template: &#39;MyComponent Template&#39;\n})\nexport class MyComponent implements OnInit {\n  nameChangeLog: string[] = [];\n  heroForm: FormGroup;</p>\n<p>  ngOnInit() {\n    this.logNameChange();\n  }\n  logNameChange() {\n    const nameControl = this.heroForm.get(&#39;name&#39;);\n    nameControl.valueChanges.forEach(\n      (value: string) =&gt; this.nameChangeLog.push(value)\n    );\n  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x78",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "78",
            "time" : 1555228371611,
            "title" : "80.0 事前サジェスト",
            "update_at" : 1556488166377
          },
          "x79" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nimport { fromEvent } from &#39;rxjs&#39;;\nimport { ajax } from &#39;rxjs/ajax&#39;;\nimport { map, filter, debounceTime, distinctUntilChanged, switchMap } from &#39;rxjs/operators&#39;;</p>\n<p>const searchBox = document.getElementById(&#39;search-box&#39;);</p>\n<p>const typeahead = fromEvent(searchBox, &#39;input&#39;).pipe(\n  map((e: KeyboardEvent) =&gt; e.target.value),\n  filter(text =&gt; text.length &gt; 2),\n  debounceTime(10),\n  distinctUntilChanged(),\n  switchMap(() =&gt; ajax(&#39;/api/endpoint&#39;))\n);</p>\n<p>typeahead.subscribe(data =&gt; {\n // Handle the data from the API\n});\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x79",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "79",
            "time" : 1555228371611,
            "title" : "81.0 指数関数的バックオフ",
            "update_at" : 1556488166377
          },
          "x80" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "certificatePath" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledgecontents%2FCIxg5db1wHWTu1eeymVp4EkLzfg1%2F-LbW07Cj8C37LDyZeKHFx80?alt=media&token=2161c1ec-d5db-476f-814c-0526da29e7ff",
              "type" : "Certificate"
            },
            "id" : "x80",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "ord" : "80",
            "time" : 1555228371611,
            "title" : "82.9 御修了ありがとうございました。",
            "update_at" : 1556488166377
          }
        }
      },
      "-LbYZZXvYQxtpo2AWpzL" : {
        "contents" : {
          "x01" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>二進数　0011100\n八進数　034\n十六進数１C\n計算　&amp; | !\n文字コーディング：\nSHIFT－JIS\nUTF－８\nEUC\nBCD</code></pre>",
              "type" : "Html"
            },
            "id" : "x01",
            "knowledgeid" : "-LbYZZXvYQxtpo2AWpzL",
            "name" : "test1",
            "ord" : "01",
            "time" : 1555228371611,
            "title" : "1.0 数の進数",
            "update_at" : 1556488166377
          },
          "x02" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>整数 bit byte short int long\n小数 single double\n文字ストリング string\nブーリアン boolean true false\n計算式 + - * /\n優先順位 * / + - ()</code></pre>",
              "type" : "Html"
            },
            "id" : "x02",
            "knowledgeid" : "-LbYZZXvYQxtpo2AWpzL",
            "name" : "test1",
            "ord" : "02",
            "time" : 1555228371611,
            "title" : "2.0 データタイプと計算式",
            "update_at" : 1556488166377
          },
          "x03" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>配列 []\nリスト List\nセット DataSet\nキュー Queue\nハッシュテーブル Hashtable Map\nスタック Stack\nソート bubble sort, Hash sort\nツリー (Directory)</code></pre>",
              "type" : "Html"
            },
            "id" : "x03",
            "knowledgeid" : "-LbYZZXvYQxtpo2AWpzL",
            "name" : "test1",
            "ord" : "03",
            "time" : 1555228371611,
            "title" : "3.0 データ構造",
            "update_at" : 1556488166377
          },
          "x04" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>順番 ; {}\n分岐 if else switch\nループ for foreach loop\nファイル read write text file csv tsv xml config</code></pre>",
              "type" : "Html"
            },
            "id" : "x04",
            "knowledgeid" : "-LbYZZXvYQxtpo2AWpzL",
            "name" : "test1",
            "ord" : "04",
            "time" : 1555228371611,
            "title" : "4.0 ブーリアン計算式、プログラム構造",
            "update_at" : 1556488166377
          },
          "x05" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>class\ninterface\ninstance\nシングルトン\nFactory</code></pre>",
              "type" : "Html"
            },
            "id" : "x05",
            "knowledgeid" : "-LbYZZXvYQxtpo2AWpzL",
            "name" : "test1",
            "ord" : "05",
            "time" : 1555228371611,
            "title" : "5.0 クラスとデザインパタン",
            "update_at" : 1556488166377
          },
          "x06" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>XP\nPMP\n開発管理\n工数 schecdule\nバッグ bugfree\nバージョン git svn team founder</code></pre>",
              "type" : "Html"
            },
            "id" : "x06",
            "knowledgeid" : "-LbYZZXvYQxtpo2AWpzL",
            "name" : "test1",
            "ord" : "06",
            "time" : 1555228371611,
            "title" : "6.0 開発プロセス",
            "update_at" : 1556488166377
          },
          "x07" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>create table\nCRUD\ninsert\nupdate\ndelete\nselect</code></pre>",
              "type" : "Html"
            },
            "id" : "x07",
            "knowledgeid" : "-LbYZZXvYQxtpo2AWpzL",
            "name" : "test1",
            "ord" : "07",
            "time" : 1555228371611,
            "title" : "7.0 データベースのテーブル",
            "update_at" : 1556488166377
          },
          "x08" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>left join\nright join\ninner join\nin\nexists</code></pre>",
              "type" : "Html"
            },
            "id" : "x08",
            "knowledgeid" : "-LbYZZXvYQxtpo2AWpzL",
            "name" : "test1",
            "ord" : "08",
            "time" : 1555228371611,
            "title" : "8.0 データベースのクエリ",
            "update_at" : 1556488166377
          },
          "x09" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>funtion \nprocedure\npackage\ntrigger</code></pre>",
              "type" : "Html"
            },
            "id" : "x09",
            "knowledgeid" : "-LbYZZXvYQxtpo2AWpzL",
            "name" : "test1",
            "ord" : "09",
            "time" : 1555228371611,
            "title" : "9.0 データベースのプロシージャ",
            "update_at" : 1556488166377
          },
          "x10" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>tranaction\nbegin trans\ncommit\nrollback\nindex</code></pre>",
              "type" : "Html"
            },
            "id" : "x10",
            "knowledgeid" : "-LbYZZXvYQxtpo2AWpzL",
            "name" : "test1",
            "ord" : "10",
            "time" : 1555228371611,
            "title" : "10.0 データベーストランザクションとチューニング",
            "update_at" : 1556488166377
          },
          "x11" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>.net framework \nJava struts+spring+hibernet</code></pre>",
              "type" : "Html"
            },
            "id" : "x11",
            "knowledgeid" : "-LbYZZXvYQxtpo2AWpzL",
            "name" : "test1",
            "ord" : "11",
            "time" : 1555228371611,
            "title" : "11.0 フレームワーク",
            "update_at" : 1556488166377
          },
          "x12" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>アプリケーション\nウェブプログラム\nアプリ\nサービス\nバッチ\nウェブサービス\nWCF</code></pre>",
              "type" : "Html"
            },
            "id" : "x12",
            "knowledgeid" : "-LbYZZXvYQxtpo2AWpzL",
            "name" : "test1",
            "ord" : "12",
            "time" : 1555228371611,
            "title" : "12.0 プログラム種類",
            "update_at" : 1556488166377
          },
          "x13" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>詳細設計\nテスト仕様書\nスケジュール\n課題票\nバッグ票</code></pre>",
              "type" : "Html"
            },
            "id" : "x13",
            "knowledgeid" : "-LbYZZXvYQxtpo2AWpzL",
            "name" : "test1",
            "ord" : "13",
            "time" : 1555228371611,
            "title" : "13.0 プロジェクト演習のプロジェクト起動、各種類の管理書類",
            "update_at" : 1556488166377
          },
          "x14" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>Excel\nPDF\nPPT</code></pre>",
              "type" : "Html"
            },
            "id" : "x14",
            "knowledgeid" : "-LbYZZXvYQxtpo2AWpzL",
            "name" : "test1",
            "ord" : "14",
            "time" : 1555228371611,
            "title" : "14.0 プロジェクト演習のプログラムでOFFICE文書操作",
            "update_at" : 1556488166377
          },
          "x15" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>データ暗号化\n復号化\nデータベース接続\nファイル操作（テクストファイル、バイナリファイル、XMLファイルなど）</code></pre>",
              "type" : "Html"
            },
            "id" : "x15",
            "knowledgeid" : "-LbYZZXvYQxtpo2AWpzL",
            "name" : "test1",
            "ord" : "15",
            "time" : 1555228371611,
            "title" : "15.0 プロジェクト演習共通部品",
            "update_at" : 1556488166377
          },
          "x16" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>メール送信\nメディア接続\nFTPアクセス</code></pre>",
              "type" : "Html"
            },
            "id" : "x16",
            "knowledgeid" : "-LbYZZXvYQxtpo2AWpzL",
            "name" : "test1",
            "ord" : "16",
            "time" : 1555228371611,
            "title" : "16.0 プロジェクト演習のメール送信、メディア接続、FTPアクセス",
            "update_at" : 1556488166377
          },
          "x17" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>システム配布\n自動更新\n多言語化</code></pre>",
              "type" : "Html"
            },
            "id" : "x17",
            "knowledgeid" : "-LbYZZXvYQxtpo2AWpzL",
            "name" : "test1",
            "ord" : "17",
            "time" : 1555228371611,
            "title" : "17.0 プロジェクト演習のシステム配布、自動更新、多言語化",
            "update_at" : 1556488166377
          },
          "x18" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>WinService\nWebService\nWCF</code></pre>",
              "type" : "Html"
            },
            "id" : "x18",
            "knowledgeid" : "-LbYZZXvYQxtpo2AWpzL",
            "name" : "test1",
            "ord" : "18",
            "time" : 1555228371611,
            "title" : "18.0 プロジェクト演習のサービスアプリケーション開発",
            "update_at" : 1556488166377
          },
          "x19" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>VS2017\nAndroid\nIOS</code></pre>",
              "type" : "Html"
            },
            "id" : "x19",
            "knowledgeid" : "-LbYZZXvYQxtpo2AWpzL",
            "name" : "test1",
            "ord" : "19",
            "time" : 1555228371611,
            "title" : "19.0 プロジェクト演習のAndroid、IOSなどクロスアプリ開発環境構築",
            "update_at" : 1556488166377
          },
          "x20" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "certificatePath" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledgecontents%2FCIxg5db1wHWTu1eeymVp4EkLzfg1%2F-LbYZZXvYQxtpo2AWpzLx20?alt=media&token=d89c0292-3a04-48a1-99f3-ffbe6666d359",
              "type" : "Certificate"
            },
            "id" : "x20",
            "knowledgeid" : "-LbYZZXvYQxtpo2AWpzL",
            "name" : "test1",
            "ord" : "20",
            "time" : 1555228371611,
            "title" : "20.9 御修了ありがとうございました。",
            "update_at" : 1556488166377
          }
        }
      },
      "-Ld495mtWIyObJzEEK7s" : {
        "contents" : {
          "x01" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngit install\n<a href=\"https://qiita.com/toshi-click/items/dcf3dd48fdc74c91b409\">git install guid</a></p>\n<p>create local repository\ncd D:\\work\\wohapp\ngit init\ngit clone https://github.com/highwayns/wohApp.git\ngit remote add origin/master https://github.com/highwayns/wohApp.git</p>\n<p>update repository</p>\n<p>git reset --hard origin/master\ngit fetch\ngit pull</p>\n<p>commit modified\ngit add .\ngit commit -m &quot;XXX modified&quot;\ngit push</p>\n<p>コンフリクト解消\n<a href=\"https://qiita.com/yuya_presto/items/5d99499cf96c0ebb09f8\">コンフリクト解消ガイド</a>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x01",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "ord" : "01",
            "time" : 1555228371611,
            "title" : "1.0 Git",
            "update_at" : 1556488166377
          },
          "x02" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>[json-server](https://github.com/highwayns/json-server)\n[json.org](https://json.org/)\n[json-editor](https://github.com/jdorn/json-editor)</code></pre>",
              "type" : "Html"
            },
            "id" : "x02",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "ord" : "02",
            "time" : 1555228371611,
            "title" : "2.0 json",
            "update_at" : 1556488166377
          },
          "x03" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>https://qiita.com/takeharu/items/809114f943208aaf55b3\nhttps://momentjs.com/\nhttps://underscorejs.org/\nhttps://qiita.com/tsukishimaao/items/39d22fd9178546d6cdeb\nhttps://wp-p.info/tpl_rep.php?cat=js-application&amp;fl=r9\nhttps://qiita.com/ichikawa_0829/items/85413fedc59822ccef75\nhttps://developer.mozilla.org/ja/docs/Web/API/Window/localStorage\n[js study guildline](https://github.com/highwayns/wohApp/blob/master/doc/js.md)</code></pre>",
              "type" : "Html"
            },
            "id" : "x03",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "ord" : "03",
            "time" : 1555228371611,
            "title" : "3.0 js",
            "update_at" : 1556488166377
          },
          "x04" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>http://www.ituore.com/entry/html-css-basic\nhttps://www.webopixel.net/html-css/503.html\nhttps://qiita.com/ritukiii/items/67b3c50002b48c6186d6</code></pre>",
              "type" : "Html"
            },
            "id" : "x04",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "ord" : "04",
            "time" : 1555228371611,
            "title" : "4.0 html/css",
            "update_at" : 1556488166377
          },
          "x05" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nhttps://qiita.com/taiponrock/items/9001ae194571feb63a5e\nhttps://nodejs.org/en/docs/</p>\n<p>npm install\nnpm start\nnpm run build</p>\n<p>https://dackdive.hateblo.jp/entry/2016/10/10/095800\nhttps://github.com/highwayns/esformatter</p>\n<p>npm install [-g] esformatter\nesformatter -i test.js</p>\n<p>webpack：\n【入门 Webpack，看这篇就够了 - 前端学习笔记 - SegmentFault 思否】\nhttps://segmentfault.com/a/1190000006178770\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x05",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "ord" : "05",
            "time" : 1555228371611,
            "title" : "5.0 nodejs",
            "update_at" : 1556488166377
          },
          "x06" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>http://docs.phonegap.com/</code></pre>",
              "type" : "Html"
            },
            "id" : "x06",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "ord" : "06",
            "time" : 1555228371611,
            "title" : "6.0 phonegap",
            "update_at" : 1556488166377
          },
          "x07" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nhttps://algorithm.joho.info/programming/vs2017-visual-studio-tools-for-apache-cordova-install/\ndebug\nhttps://jp.vuejs.org/v2/cookbook/debugging-in-vscode.html</p>\n<p>install vue plugin &amp; Eslint plugin &amp; Debugger for Chrome\n    {\n      &quot;type&quot;: &quot;chrome&quot;,\n      &quot;request&quot;: &quot;launch&quot;,\n      &quot;name&quot;: &quot;vuejs: chrome&quot;,\n      &quot;url&quot;: &quot;http://localhost:8080&quot;,\n      &quot;webRoot&quot;: &quot;${workspaceFolder}/src&quot;,\n      &quot;breakOnLoad&quot;: true,\n      &quot;sourceMapPathOverrides&quot;: {\n        &quot;webpack:///./src/<em>&quot;: &quot;${webRoot}/</em>&quot;\n      }\n    }\nhttps://docs.microsoft.com/en-us/visualstudio/cross-platform/tools-for-cordova/debug-test/debug-using-visual-studio?view=toolsforcordova-2017\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x07",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "ord" : "07",
            "time" : 1555228371611,
            "title" : "7.0 vs install cordova",
            "update_at" : 1556488166377
          },
          "x08" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nhttps://firebase.google.com/docs/reference/js/firebase</p>\n<p>firebase tools:</p>\n<p>npm i firebase-tools\nnpm i -g firebase-tools\nfirebase login\nfirebase init\nfirebase use --add\nfirebase serve --only hosting\nfirebase deploy\nfirebase open hosting:site</p>\n<p>firebase auth:\nfirebase database:\nfirebase firestore:\nfirebase storage:\nfirebase hosting:\nfirebase mlkit:</p>\n<p>firebase performance monitor:</p>\n<p>アプリケーションにPerformance Monitoring SDKを追加する\n  （Optional）SDKを使用してアプリケーションのカスタムトレースとカウンタを定義する\n  Firebaseコンソールでのパフォーマンスデータの監視\nfirebase Crashlytics:\nfirebase Test Lab:</p>\n<p>firebase In-App messaging:\nfirebase Predictions:\nfirebase A/B Testing:\nfirebase Cloud messaging:\nfirebase Remote Config:\nfirebase Dynamic Links:\nfirebase App Index:\nfirebase invite:\nfirebase admob:</p>\n<p><a href=\"https://github.com/highwayns/wohApp/blob/master/doc/firebase.md\">Firebase study guildline</a>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x08",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "ord" : "08",
            "time" : 1555228371611,
            "title" : "8.0 firebase",
            "update_at" : 1556488166377
          },
          "x09" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nhttps://cordova.apache.org/docs/en/latest/</p>\n<p>npm install cordova -g\ncordova create wohapp com.highwayns.wohapp wohApp\ncordova requirements\ncordova platform add ios --save\ncordova plugin add cordova-plugin-whitelist cordova-plugin-statusbar cordova-plugin-camera cordova-plugin-geolocation cordova-plugin-file-transfer cordova-plugin-inappbrowser cordova-plugin-network-information\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x09",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "ord" : "09",
            "time" : 1555228371611,
            "title" : "9.0 cordova",
            "update_at" : 1556488166377
          },
          "x10" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nhttps://vuejs.org/v2/guide/\nhttps://vuex.vuejs.org/guide/\nhttps://jp.vuejs.org/v2/cookbook/using-axios-to-consume-apis.html\nproject create:\nnpm install -g vue-cli\nvue init webpack test-vue</p>\n<p>project manager:\nnpm install --global @vue/cli\nvue ui</p>\n<p>online editor:\nhttps://github.com/highwayns/vuegg</p>\n<p><a href=\"https://github.com/highwayns/wohApp/blob/master/doc/vue.md\">Vue usage guildline</a>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x10",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "ord" : "10",
            "time" : 1555228371611,
            "title" : "10.0 vue &amp; vuex &amp;axios",
            "update_at" : 1556488166377
          },
          "x11" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nhttp://v2.framework7.io/vue/</p>\n<p>npm install framework7\nnpm install -g framework7-cli\nframework7 create\nframework7 create --ui\nframework7 create --ui --port 8080\nframework7 generate-assets\nframework7 generate-assets --ui\nframework7 cordova plugin add cordova-plugin-statusbar\nframework7 cordova plugin add cordova-plugin-splashscreen\nframework7 cordova build ios</p>\n<p><a href=\"https://github.com/highwayns/wohApp/blob/master/doc/framework7.md\">Framework7 study guildline</a>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x11",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "ord" : "11",
            "time" : 1555228371611,
            "title" : "11.0 framework7",
            "update_at" : 1556488166377
          },
          "x12" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nhttps://github.com/gulpjs/gulp/tree/master/docs</p>\n<p>npm install glup -g\ngulp Iconfont</p>\n<p>framework7-icons:\nhttps://github.com/framework7io/framework7-icons</p>\n<p>material-design-icons:\nhttps://github.com/google/material-design-icons\nhttps://icofont.com/icons\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x12",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "ord" : "12",
            "time" : 1555228371611,
            "title" : "12.0 glup &amp; Iconfont",
            "update_at" : 1556488166377
          },
          "x13" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>https://maketips.net/tip/223/how-to-include-jquery-into-vuejs</code></pre>",
              "type" : "Html"
            },
            "id" : "x13",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "ord" : "13",
            "time" : 1555228371611,
            "title" : "13.0 jQuery",
            "update_at" : 1556488166377
          },
          "x14" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>https://github.com/FirebaseExtended/bolt/blob/master/docs/language.md\nnpm install --global firebase-bolt\nfirebase-bolt &lt; posts.bolt\n[Bolt study guildline](https://github.com/highwayns/wohApp/blob/master/doc/bolt.md)</code></pre>",
              "type" : "Html"
            },
            "id" : "x14",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "ord" : "14",
            "time" : 1555228371611,
            "title" : "14.0 firebasebot",
            "update_at" : 1556488166377
          },
          "x15" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nhttps://firechat.firebaseapp.com/docs/\nAPI - Public Methods\nnew Firechat(ref, options)\nFirechat.setUser(userId, userName, onComplete)\nFirechat.resumeSession()\nFirechat.on(eventType, callback)\nFirechat.createRoom(roomName, roomType, callback(roomId))\nFirechat.enterRoom(roomId)\nFirechat.leaveRoom(roomId)\nFirechat.sendMessage(roomId, messageContent, messageType=&#39;default&#39;, callback)\nFirechat.toggleUserMute(userId, callback)\nFirechat.inviteUser(userId, roomId)\nFirechat.acceptInvite(inviteId, callback)\nFirechat.declineInvite(inviteId, callback)\nFirechat.getRoomList(callback)\nFirechat.getUsersByRoom(roomId, [limit=100], callback)\nFirechat.getUsersByPrefix(prefix, startAt, endAt, limit, callback)\nFirechat.getRoom(roomId, callback)\nFirechat.createPost(content, pic, callback)\nFirechat.addComment(postKey, comments, callback)\nFirechat.likePost(postKey, callback)\nFirechat.getPostList(callback)\nFirechat.removePost(postKey, callback)\nFirechat.getPostComments(postkey, callback)\nFirechat.removePostComment(postKey, commentKey, callback)\nFirechat.getPostLikes(postkey, callback)\nFirechat.unlikePost(postKey, likeKey, callback)\nFirechat.addContact(userid, name, header, location, callback)\nFirechat.removeContact(userkey, callback)\nFirechat.getContactList(callback)</p>\n<p>API - Exposed Bindings\nuser-update - Invoked when the user&#39;s metadata changes.\nroom-enter - Invoked when the user successfully enters a room.\nroom-exit - Invoked when the user exists a room.\nmessage-add - Invoked when a new message is received.\nmessage-remove - Invoked when a message is deleted.\nroom-invite - Invoked when a new room invite is received.\nroom-invite-response - Invoked when a response to a previous invite is received.</p>\n<p>Data Structure\nmoderators/ \n  <user-id> - A list of user ids and their moderator status. \n    true|false - A boolean value indicating the user&#39;s moderator status.\nroom-messages/ \n  <room-id> \n    <message-id> \n      userId - The id of the user that sent the message.\n      name - The name of the user that sent the message.\n      message - The content of the message.\n      timestamp - The time at which the message was sent.\nroom-metadata/ \n  <room-id> \n    createdAt - The time at which the room was created.\n    createdByUserId- The id of the user that created the room.\n    id - The id of the room.\n    name - The public display name of the room.\n    type - The type of room, public or private.\nroom-users/\nuser-names-online/\nusers/ \n  <user-id> \n    id - The id of the user.\n    name - The display name of the user.\n    invites - A list of invites the user has received.\n    muted - A list of user ids currently muted by the user.\n    rooms - A list of currently active rooms, used for sessioning.\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x15",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "ord" : "15",
            "time" : 1555228371611,
            "title" : "15.0 firechat",
            "update_at" : 1556488166377
          },
          "x16" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nJDKのインストール\nAndroid SDKのインストール</p>\n<p>export PATH=$HOME/Library/Android/sdk/platform-tools:$PATH\nexport PATH=$HOME/Library/Android/sdk/tools:$PATH</p>\n<p>cordova platform add android</p>\n<p>エミュレータでの検証:\nGenymotion.appを起動\nアプリケーション内で、VMをダウンロード (もしまだなければ)\nVMを起動\nCordovaから起動 \n$ cordova run android </p>\n<p>実機で検証:\nAndroid実機のUSBデバッグ機能をONに\nMacにAndroid実機をUSB接続 (USBケーブルが充電専用だとNGなので注意)\n次のコマンドで接続確認して、表示されればOK $ adb devices \nCordovaから起動 \n$ cordova run android \nビルドを待つ...\n実機でアプリが起動!\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x16",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "ord" : "16",
            "time" : 1555228371611,
            "title" : "16.0 android",
            "update_at" : 1556488166377
          },
          "x17" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>Apple の開発者のダウンロードアップルの開発者として登録する必要があります。\n    $ npm install -g ios-sim\n    $ npm install -g ios-deploy\n    $ cordova run ios --device\n    $ cordova emulate ios</code></pre>",
              "type" : "Html"
            },
            "id" : "x17",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "ord" : "17",
            "time" : 1555228371611,
            "title" : "17.0 ios",
            "update_at" : 1556488166377
          },
          "x18" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ncordova build windows -- --appx=8.1-phone\nTo deploy Windows package:\ncordova run windows -- --win  # explicitly specify Windows as deployment target\ncordova run windows # <code>run</code> uses Windows package by default</p>\n<p>To deploy Windows Phone package:\ncordova run windows -- --phone  # deploy app to Windows Phone 8.1 emulator\ncordova run windows --device -- --phone  # deploy app to connected device</p>\n<p>This command will give you the list of all available targets:\ncordova run windows --list\ncordova run windows --target=&quot;Emulator 8.1 720P 4.7 inch&quot; -- --phone\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x18",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "ord" : "18",
            "time" : 1555228371611,
            "title" : "18.0 windows",
            "update_at" : 1556488166377
          },
          "x19" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>一部Packageはpython2.7を使っている。\nhttps://www.python.jp/install/windows/install_py2.7.html</code></pre>",
              "type" : "Html"
            },
            "id" : "x19",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "ord" : "19",
            "time" : 1555228371611,
            "title" : "19.0 python2.7",
            "update_at" : 1556488166377
          },
          "x20" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>https://github.com/highwayns/awesome-vue\nhttps://github.com/highwayns/vuejs-interview-questions\nhttps://github.com/highwayns/awesome-github-vue\nhttps://github.com/highwayns/vue2-elm\nhttps://github.com/useryangtao/vue-wechat</code></pre>",
              "type" : "Html"
            },
            "id" : "x20",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "ord" : "20",
            "time" : 1555228371611,
            "title" : "20.0 awaresome",
            "update_at" : 1556488166377
          },
          "x21" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nhttps://qiita.com/oret/items/8c9a216865b088c15d68\nhttps://jp.vuejs.org/v2/guide/unit-testing.html\nhttps://qiita.com/TsutomuNakamura/items/975329b61e5c8a375691\nhttps://qiita.com/chimame/items/e97883fd46b67529d59f</p>\n<p>npm install -g nodeunit\ntest folderにテストプログラムを作成する\nnodeunit test\n<a href=\"https://github.com/highwayns/wohApp/blob/master/doc/nodeunit.md\">Nodeunit usage guildline</a>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x21",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "ord" : "21",
            "time" : 1555228371611,
            "title" : "21.0 unittest",
            "update_at" : 1556488166377
          },
          "x22" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>[vuefire](https://github.com/highwayns/vuefire)\n[vue plugin](https://jp.vuejs.org/v2/guide/plugins.html)\n[VUEプラグインの使用](https://github.com/highwayns/wohApp/blob/master/doc/vueplugin.md)</code></pre>",
              "type" : "Html"
            },
            "id" : "x22",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "ord" : "22",
            "time" : 1555228371611,
            "title" : "22.0 vue plugin &amp; vuefire",
            "update_at" : 1556488166377
          },
          "x23" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>https://github.com/ahmed-musallam/AtACE-AEM-Vue</code></pre>",
              "type" : "Html"
            },
            "id" : "x23",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "ord" : "23",
            "time" : 1555228371611,
            "title" : "23.0 vue on aem",
            "update_at" : 1556488166377
          },
          "x24" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>[app-framework git](https://github.com/highwayns/app-framework)\n[app-framework guildline](https://github.com/highwayns/wohApp/blob/master/doc/appframework.md)\n[image-upload-component](https://github.com/highwayns/wohApp/blob/master/doc/image-upload-component.md)\n[sort-object](https://github.com/highwayns/wohApp/blob/master/doc/sort-object.md)\n[language-files](https://github.com/highwayns/wohApp/blob/master/doc/language-files.md)\n[Design your application](https://github.com/highwayns/wohApp/blob/master/doc/design.md)\n[Page components](https://github.com/highwayns/wohApp/blob/master/doc/page-components.md)\n[Routing](https://github.com/highwayns/wohApp/blob/master/doc/routing.md)\n[Global data object](https://github.com/highwayns/wohApp/blob/master/doc/data-object.md)\n[Icon fonts](https://github.com/highwayns/wohApp/blob/master/doc/icon-fonts.md)\n[Images](https://github.com/highwayns/wohApp/blob/master/doc/images.md)\n[Modules and Scripts](https://github.com/highwayns/wohApp/blob/master/doc/modules-and-scripts.md)\n[State restoration](https://github.com/highwayns/wohApp/blob/master/doc/state-restoration.md)</code></pre>",
              "type" : "Html"
            },
            "id" : "x24",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "ord" : "24",
            "time" : 1555228371611,
            "title" : "24.0 app-framework",
            "update_at" : 1556488166377
          },
          "x25" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "comment_count" : 0,
            "content" : {
              "certificatePath" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledgecontents%2FCIxg5db1wHWTu1eeymVp4EkLzfg1%2F-Ld495mtWIyObJzEEK7sx25?alt=media&token=6fc5ba7b-bf22-4f62-945a-38a5f0dcda2f",
              "type" : "Certificate"
            },
            "id" : "x25",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "ord" : "25",
            "time" : 1555228371611,
            "title" : "25.9 御修了ありがとうございました。",
            "update_at" : 1556488166377
          }
        }
      },
      "-LdLtODpcc-J83q1aU5f" : {
        "contents" : {
          "x01" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>Spring Boot を使って、サーバサイドから JSON を返却する方法を紹介します。\n次の URL にリクエストすると、\nhttp://localhost:8080/hello\n次のレスポンスを返す例を書いていきます。\n{&quot;message&quot;:&quot;Hello, World!&quot;}</code></pre>",
              "type" : "Html"
            },
            "id" : "x01",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "01",
            "time" : 1555228371611,
            "title" : "1.0 JSONを返す",
            "update_at" : 1556488166377
          },
          "x02" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>JDK 1.8 以上\nMaven 3.0 以上（or Gradle 等）</code></pre>",
              "type" : "Html"
            },
            "id" : "x02",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "02",
            "time" : 1555228371611,
            "title" : "2.0 環境・ツール",
            "update_at" : 1556488166377
          },
          "x03" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nMaven の XML を作成します。アプリのルートディレクトリは gssb としています。\ngssb/pom.xml</p>\n<p><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion></p>\n<p>  <groupId>com.github.mamorum</groupId>\n  <artifactId>gssb</artifactId>\n  <version>1.0.0</version></p>\n  <parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>1.5.1.RELEASE</version>\n  </parent>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n  </dependencies>\n\n  <properties>\n    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;\n  </properties>\n\n<p>  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-compiler-plugin</artifactId>\n        <configuration>\n          <source>1.8</source>\n          <target>1.8</target>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-maven-plugin</artifactId>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x03",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "03",
            "time" : 1555228371611,
            "title" : "3.0 ビルドファイルの作成",
            "update_at" : 1556488166377
          },
          "x04" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb/src/main/java/gssb/controller/HelloController.java\npackage gssb.controller;</p>\n<p>import java.util.Collections;\nimport java.util.Map;</p>\n<p>import org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;</p>\n<p>@RestController  // JSON を返すコントローラに付与。\npublic class HelloController {</p>\n<p>  // リクエスト /hello に対して実行されるメソッド。\n  @RequestMapping(&quot;/hello&quot;)\n  public Map&lt;String, String&gt; hello() {\n    return Collections.singletonMap(&quot;message&quot;, &quot;Hello, World!&quot;);\n  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x04",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "04",
            "time" : 1555228371611,
            "title" : "4.0 コントローラの作成",
            "update_at" : 1556488166377
          },
          "x05" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb/src/main/java/gssb/App.java\npackage gssb;</p>\n<p>import org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;</p>\n<p>@SpringBootApplication\npublic class App {\n  public static void main(String[] args) {\n    SpringApplication.run(App.class, args);\n  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x05",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "05",
            "time" : 1555228371611,
            "title" : "5.0 起動クラスの作成",
            "update_at" : 1556488166377
          },
          "x06" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb &gt; mvn spring-boot:run\n（省略）\n・・・Started App in 3.865 seconds (JVM running for 8.989)</p>\n<p>http://localhost:8080/hello にアクセスして、冒頭の JSON が返ってくれば成功です。\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x06",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "06",
            "time" : 1555228371611,
            "title" : "6.0 起動と確認",
            "update_at" : 1556488166377
          },
          "x07" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>Spring Boot の Webアプリで、サーバサイドから静的コンテンツ\n（html, js, css, png, etc）を返却する方法を書いていきます。</code></pre>",
              "type" : "Html"
            },
            "id" : "x07",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "07",
            "time" : 1555228371611,
            "title" : "7.0 静的コンテンツを返す",
            "update_at" : 1556488166377
          },
          "x08" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb/src/main/resources/public/index.html\n&lt;!DOCTYPE html&gt;</p>\n<html lang=\"ja\">\n<head>\n<meta charset=\"utf-8\">\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<title>Index Page</title>\n</head>\n<body>\n<p>Hello, World.</p>\n</body>\n</html>\n\n<p>静的コンテンツは、デフォルトだと src/main/resources/public\n（or src/main/resources/static）に置くと公開されます。\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x08",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "08",
            "time" : 1555228371611,
            "title" : "8.0 HTML の作成",
            "update_at" : 1556488166377
          },
          "x09" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb &gt; mvn spring-boot:run</p>\n<p>ブラウザで http://localhost:8080/index.html \nを開いて、次のように表示されれば成功です。\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x09",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "09",
            "time" : 1555228371611,
            "title" : "9.0 起動と確認",
            "update_at" : 1556488166377
          },
          "x10" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>静的コンテンツは、ディレクトリ階層を作って公開することもできます。\nsrc/main/resources/public/\n  - index.html\n  - css/\n    - style.css\n  - js/\n    - main.js\n上の例だと、ディレクトリ css, js の資源は、\nhttp://localhost:8080/css/style.css,\n http://localhost:8080/js/main.js で公開されます。</code></pre>",
              "type" : "Html"
            },
            "id" : "x10",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "10",
            "time" : 1555228371611,
            "title" : "10.0 ディレクトリ階層とＵＲＬ",
            "update_at" : 1556488166377
          },
          "x11" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb/src/main/resources/public/jquery-ajax.html\n&lt;!DOCTYPE html&gt;</p>\n<p><html lang=\"ja\"></p>\n<p><head></p>\n<p><meta charset=\"utf-8\"></p>\n<p><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"></p>\n<p><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"></p>\n<p><title>Hello jQuery</title>\n</head></p>\n<p><body></p>\n<p><div>\n  <span class=\"label\">Message : </span>\n  <span class=\"message\"></span>\n</div>\n</body></p>\n<p><script src=\"https://code.jquery.com/jquery-1.12.1.min.js\"></script></p>\n<p><script type=\"text/javascript\">\n// JSON を取得して .message に表示。\n$(function() {\n  $.ajax({\n    url: &#39;/hello&#39;,\n    method: &#39;get&#39;,\n    cache: false\n  }).then(function(data) {\n    $(&#39;.message&#39;).text(data.message);\n  });\n});\n</script>\n</html>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x11",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "11",
            "time" : 1555228371611,
            "title" : "11.0 jQueryでJSONを受信",
            "update_at" : 1556488166377
          },
          "x12" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb &gt; mvn spring-boot:run</p>\n<p>ブラウザで http://localhost:8080/jquery-ajax.html にアクセスして、\n次のように表示されれば成功です。\nMessage : Hello, World!\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x12",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "12",
            "time" : 1555228371611,
            "title" : "12.0 起動と確認",
            "update_at" : 1556488166377
          },
          "x13" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>Spring Boot の Webアプリで、バリデーション（入力値検証）をする方法\nを書いていきます。バリデーションには、javax.validation や Hibernate \nValidator のアノテーションを使います。</code></pre>",
              "type" : "Html"
            },
            "id" : "x13",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "13",
            "time" : 1555228371611,
            "title" : "13.0 バリデーションをする",
            "update_at" : 1556488166377
          },
          "x14" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb/src/main/java/gssb/controller/ValidationController.java\npackage gssb.controller;</p>\n<p>import javax.validation.Valid;\nimport javax.validation.constraints.Size;</p>\n<p>import org.hibernate.validator.constraints.NotEmpty;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RestController;</p>\n<p>@RestController\npublic class ValidationController {</p>\n<p>  @RequestMapping(value=&quot;/address&quot;, method=RequestMethod.POST)\n  public Address create(@Valid @RequestBody Address address) {\n    return address;\n  }</p>\n<p>  public static class Address {</p>\n<pre><code>@NotEmpty\n@Size(min=7, max=7)\npublic String zip;\n\n@NotEmpty\npublic String address;\n</code></pre><p>  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x14",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "14",
            "time" : 1555228371611,
            "title" : "14.0 コントローラの作成",
            "update_at" : 1556488166377
          },
          "x15" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb &gt; gradle bootRun</p>\n<p>正常系\n入力値（リクエストの JSON）に問題がない場合、コントローラは入力値をそのまま返します。\n確認コマンド（※ JSON 内のエスケープ文字「\\」は Windows で必要）\ncurl http://localhost:8080/address -H &quot;Content-Type: application/json&quot; -d &quot;{\\&quot;zip\\&quot;:\\&quot;1234567\\&quot;, \\&quot;address\\&quot;:\\&quot;Japan\\&quot;}&quot; -X POST\n結果\n{&quot;zip&quot;:&quot;1234567&quot;,&quot;address&quot;:&quot;Japan&quot;}</p>\n<p>バリデーションエラー\n「zip を 6桁」「address を空文字」にして、リクエストを送ってみます。\n確認コマンド（※ JSON 内のエスケープ文字「\\」は Windows で必要）\ncurl http://localhost:8080/address -H &quot;Content-Type: application/json&quot; -d &quot;{\\&quot;zip\\&quot;:\\&quot;123456\\&quot;, \\&quot;address\\&quot;:\\&quot;\\&quot;}&quot; -X POST\n結果\n{&quot;timestamp&quot;:1469434038414,&quot;status&quot;:400,&quot;error&quot;:&quot;Bad Request&quot;,&quot;exception&quot;:&quot;org.springframework.web.bind.MethodArgumentNotValidException&quot;,&quot;errors&quot;:[{&quot;codes&quot;:[&quot;NotEmpty.address.address&quot;,&quot;NotEmpty.address&quot;,&quot;NotEmpty&quot;],&quot;arguments&quot;:[{&quot;codes&quot;:[&quot;address.address&quot;,&quot;address&quot;],&quot;arguments&quot;:null,&quot;defaultMessage&quot;:&quot;address&quot;,&quot;code&quot;:&quot;address&quot;}],&quot;defaultMessage&quot;:&quot;may not be empty&quot;,&quot;objectName&quot;:&quot;address&quot;,&quot;field&quot;:&quot;address&quot;,&quot;rejectedValue&quot;:&quot;&quot;,&quot;bindingFailure&quot;:false,&quot;code&quot;:&quot;NotEmpty&quot;},{&quot;codes&quot;:[&quot;Size.address.zip&quot;,&quot;Size.zip&quot;,&quot;Size&quot;],&quot;arguments&quot;:[{&quot;codes&quot;:[&quot;address.zip&quot;,&quot;zip&quot;],&quot;arguments&quot;:null,&quot;defaultMessage&quot;:&quot;zip&quot;,&quot;code&quot;:&quot;zip&quot;},7,7],&quot;defaultMessage&quot;:&quot;size must be between 7 and 7&quot;,&quot;objectName&quot;:&quot;address&quot;,&quot;field&quot;:&quot;zip&quot;,&quot;rejectedValue&quot;:&quot;123456&quot;,&quot;bindingFailure&quot;:false,&quot;code&quot;:&quot;Size&quot;}],&quot;message&quot;:&quot;Validation failed for object=&#39;address&#39;. Errorcount: 2&quot;,&quot;path&quot;:&quot;/address&quot;}\n正常系とは違う JSON が返ってきました。よく見ると、エラーは２つ（Errorcount: 2）で、zip（size must be between 7 and 7）と address（may not be empty）\nのエラー情報が確認できます。\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x15",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "15",
            "time" : 1555228371611,
            "title" : "15.0 起動と確認",
            "update_at" : 1556488166377
          },
          "x16" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>Spring Boot の Webアプリで、テンプレートエンジンの Mustache を使う方法\nを書いてみようと思います。Mustache で HTML をレンダリングして、レスポンス\nとして返してみます。\npom.xml\n  &lt;dependency&gt;\n      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n      &lt;artifactId&gt;spring-boot-starter-mustache&lt;/artifactId&gt;\n    &lt;/dependency&gt;</code></pre>",
              "type" : "Html"
            },
            "id" : "x16",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "16",
            "time" : 1555228371611,
            "title" : "16.0 Mustacheを使う",
            "update_at" : 1556488166377
          },
          "x17" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\npackage gssb.controller;</p>\n<p>import java.util.Date;\nimport java.util.Map;</p>\n<p>import org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestParam;</p>\n<p>@Controller\npublic class MstController {</p>\n<p>  @RequestMapping(&quot;/hello-mst&quot;)\n  public String hello(\n    @RequestParam(defaultValue=&quot;World&quot;) String name,\n    Map&lt;String, Object&gt; model\n  ) {\n    model.put(&quot;name&quot;, name);\n    model.put(&quot;date&quot;, new Date());\n    return &quot;hello-mst&quot;;\n  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x17",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "17",
            "time" : 1555228371611,
            "title" : "17.0 コントローラの作成",
            "update_at" : 1556488166377
          },
          "x18" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb/src/main/resources/templates/hello-mst.html\n&lt;!DOCTYPE html&gt;</p>\n<p><html lang=\"ja\"></p>\n<p><head></p>\n<p><meta charset=\"utf-8\"></p>\n<p><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"></p>\n<p><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"></p>\n<p><title>Hello Mustache</title>\n</head></p>\n<p><body></p>\n<p><div>\n  <p><b>Message:</b> Hello, {{name}}</p>\n  <p><b>Date:</b> {{date}}</p>\n</div>\n</body>\n</html>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x18",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "18",
            "time" : 1555228371611,
            "title" : "18.0 画面の作成",
            "update_at" : 1556488166377
          },
          "x19" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb &gt; mvn spring-boot:run</p>\n<p>ブラウザで http://localhost:8080/hello-mst にアクセスすると、次のように表示されます。\nMessage: Hello, World</p>\n<p>Date: Fri Apr 07 14:11:33 JST 2017\nリクエストパラメータをつける http://localhost:8080/hello-mst?name=Tom と、\n次のように表示されます。\nMessage: Hello, Tom</p>\n<p>Date: Fri Apr 07 14:12:12 JST 2017\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x19",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "19",
            "time" : 1555228371611,
            "title" : "19.0 起動と確認",
            "update_at" : 1556488166377
          },
          "x20" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb/src/main/java/gssb/controller/FileUploadController.java</p>\n<p>package gssb.controller;</p>\n<p>import java.io.BufferedInputStream;\nimport java.io.BufferedOutputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;</p>\n<p>import javax.servlet.http.HttpServletResponse;</p>\n<p>import org.springframework.util.FileCopyUtils;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.multipart.MultipartFile;</p>\n<p>@RestController\npublic class FileUploadController {</p>\n<p>  // 引数名 file は、ファイルのリクエストパラメータ名と一致させる。\n  @RequestMapping(value=&quot;/upload&quot;, method=RequestMethod.POST)\n  public void handle(\n    HttpServletResponse response,\n    @RequestParam MultipartFile file\n  ){\n    // ファイルが空の場合は HTTP 400 を返す。\n    if (file.isEmpty()) {\n      response.setStatus(HttpServletResponse.SC_BAD_REQUEST);\n      return;\n    }\n    // アップロードされたファイルを保存。\n    try {\n      BufferedInputStream in =\n        new BufferedInputStream(file.getInputStream());\n      BufferedOutputStream out =\n        new BufferedOutputStream(\n          new FileOutputStream(file.getOriginalFilename()));\n      FileCopyUtils.copy(in, out);\n    } catch (IOException e) {\n      throw new RuntimeException(&quot;Error uploading file.&quot;, e);\n    }\n  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x20",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "20",
            "time" : 1555228371611,
            "title" : "20.0 ファイルアップロード",
            "update_at" : 1556488166377
          },
          "x21" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb/src/main/resources/public/file-upload.html</p>\n<p>&lt;!DOCTYPE html&gt;</p>\n<p><html lang=\"ja\"></p>\n<p><head></p>\n<p><meta charset=\"utf-8\"></p>\n<p><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"></p>\n<p><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"></p>\n<p><title>File Upload</title>\n</head></p>\n<p><body></p>\n<p><div>\n  <form id=\"form\" enctype=\"multipart/form-data\">\n    <p><input type=\"file\" name=\"file\"></p>\n    <p><input type=\"button\" id=\"upload\" value=\"アップロード\"></p>\n  </form>\n  <span id=\"result\" style=\"padding:3px;\"></span>\n</div>\n</body></p>\n<p><script src=\"https://code.jquery.com/jquery-1.12.1.min.js\"></script></p>\n<p><script type=\"text/javascript\">\n$(function() {\n  // アップロードボタンが押されたら実行。\n  $(&#39;#upload&#39;).click(function() {\n    var formData = new FormData(\n      $(&#39;#form&#39;).get()[0]\n    );\n    $.ajax({\n      url:&#39;/upload&#39;,\n      method:&#39;post&#39;,\n      data:formData,\n      processData:false,\n      contentType:false,\n      cache: false\n    }).done(function(data, status, jqxhr) {\n      $(&#39;#result&#39;).text(&#39;結果：成功&#39;);\n    }).fail(function(data, status, jqxhr) {\n      $(&#39;#result&#39;).text(&#39;結果：失敗&#39;);\n    }); \n  });\n});\n</script>\n</html>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x21",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "21",
            "time" : 1555228371611,
            "title" : "21.0 画面の作成",
            "update_at" : 1556488166377
          },
          "x22" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb &gt; mvn spring-boot:run</p>\n<p>ブラウザで http://localhost:8080/file-upload.html を開いてアップロードすると、\n下の画像のように「成功」と表示されます。ファイルは gssb ディレクトリの下に保存されます。\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x22",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "22",
            "time" : 1555228371611,
            "title" : "22.0 起動と確認",
            "update_at" : 1556488166377
          },
          "x23" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "https://cdn-ak.f.st-hatena.com/images/fotolife/m/mamorums/20160814/20160814222022.png",
              "type" : "Picture"
            },
            "id" : "x23",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "23",
            "time" : 1555228371611,
            "title" : "22.4 確認画像",
            "update_at" : 1556488166377
          },
          "x24" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>Spring Boot の Webアプリで、サービスクラスを使う方法を書きます。サービスクラスは\n「ドメイン駆動設計 - Wikipedia」に登場するオブジェクトで、なんらかの処理（機能）を実装するものです。</code></pre>",
              "type" : "Html"
            },
            "id" : "x24",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "24",
            "time" : 1555228371611,
            "title" : "23.0 サービスクラスを使う",
            "update_at" : 1556488166377
          },
          "x25" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb/src/main/java/gssb/service/RandomNumberService.java</p>\n<p>package gssb.service;</p>\n<p>import org.springframework.stereotype.Service;</p>\n<p>@Service  // サービスクラスに付与。\npublic class RandomNumberService {</p>\n<p>  // 整数0-9の乱数を返却。\n  public int zeroToNine() {\n    return (int) (Math.random() * 10);\n  }\n}\n@Service が付いていると、アプリ起動時に SpringBoot（のコンテナ）が管理してくれます。\n管理されたオブジェクトは、他のオブジェクトに設定（DI：Dependency Injection）\nできたりします。\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x25",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "25",
            "time" : 1555228371611,
            "title" : "24.0 サービスクラスの作成",
            "update_at" : 1556488166377
          },
          "x26" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb/src/main/java/gssb/service/RandomNumberService.java\npackage gssb.controller;</p>\n<p>import java.util.Collections;\nimport java.util.Map;</p>\n<p>import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;</p>\n<p>import gssb.service.RandomNumberService;</p>\n<p>@RestController\npublic class RandomNumberController {</p>\n<p>  // サービスクラスがＤＩされる。\n  @Autowired RandomNumberService random;</p>\n<p>  // 乱数をレスポンスとして返却する。\n  @RequestMapping(&quot;/random&quot;)\n  public Map&lt;String, Integer&gt; random() {\n    int value = random.zeroToNine();\n    return Collections.singletonMap(&quot;value&quot;, value);\n  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x26",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "26",
            "time" : 1555228371611,
            "title" : "25.0 コントローラの作成",
            "update_at" : 1556488166377
          },
          "x27" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb &gt; mvn spring-boot:run</p>\n<p>http://localhost:8080/random にアクセスして、次のような JSON が返ってくれば成功です。\n{&quot;value&quot;:0}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x27",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "27",
            "time" : 1555228371611,
            "title" : "26.0 起動と確認",
            "update_at" : 1556488166377
          },
          "x28" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>Spring の MessageSource を使うと、メッセージをプロパティファイルから簡単に取得できます。\nこれから、Spring Boot で MessageSource を使う手順を書いていこうと思います。</code></pre>",
              "type" : "Html"
            },
            "id" : "x28",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "28",
            "time" : 1555228371611,
            "title" : "27.0 MessageSource を使う",
            "update_at" : 1556488166377
          },
          "x29" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>次のように設定すると、メッセージを messages_ja.properties から取得できます（日本語環境でロケールが ja の場合）。\nspring.messages.basename=messages\nspring.messages.cache-seconds=-1\nspring.messages.encoding=UTF-8\napplication.properties は Spring Boot の設定ファイルで、クラスパス直下に置くと読み込んでくれます。</code></pre>",
              "type" : "Html"
            },
            "id" : "x29",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "29",
            "time" : 1555228371611,
            "title" : "28.0 application.properties の設定",
            "update_at" : 1556488166377
          },
          "x30" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>ファイルを作成して、次のようにキーとメッセージを定義します。\nkey=こんにちは。\nmessages_ja.properties も、クラスパス直下に作成します。Gradle や Maven を使っている場合は、\nsrc/main/resources に用意すれば大丈夫です。\nあと、プロパティファイルは native2ascii しなくて大丈夫みたいです（Java SE 6 から。詳細は こちら。）。</code></pre>",
              "type" : "Html"
            },
            "id" : "x30",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "30",
            "time" : 1555228371611,
            "title" : "29.0 messages_ja.properties の作成",
            "update_at" : 1556488166377
          },
          "x31" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nメッセージを取得したい Java クラスで、MessageSource をプロパティとして定義します。\nそして @Autowired を付けて、Spring Boot に設定（DI）してもらいます。\n@RestController\npublic class MsgController {</p>\n<pre><code>@Autowired MessageSource msg;\n\n// ・・・省略\n</code></pre><p>}\n※ MessageSource を使うクラスは、Spring Boot で管理されている必要があります。\n（@RestController, @Controller, @Service, @Component などが付いてれば大丈夫です。）\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x31",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "31",
            "time" : 1555228371611,
            "title" : "30.0 MessageSource を定義",
            "update_at" : 1556488166377
          },
          "x32" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>MessageSource のメソッド #getMessage を呼び出して、メッセージを取得します。\nString message = msg.getMessage(&quot;key&quot;, null, Locale.JAPAN);\nメソッドの第１引数はメッセージキー、第２引数は置換文字列（今回は指定なし）、\n第３引数はロケールを指定します。</code></pre>",
              "type" : "Html"
            },
            "id" : "x32",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "32",
            "time" : 1555228371611,
            "title" : "31.0 メッセージの取得",
            "update_at" : 1556488166377
          },
          "x33" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>上の例だと、ロケール（#getMessage の第３引数 Locale.JAPAN）が固定で、\n常に日本語のメッセージが取得されます。\n逆に、ローケルを可変にすれば、多言語に対応することができます。\nやり方は色々あると思いますが、コントローラはメソッド引数に Local を\n定義すると、Spring Boot が要求元のロケールを渡してくれるみたいです。\n@RequestMapping(value=&quot;/msg&quot;, method=RequestMethod.GET)\npublic Map&lt;String, String&gt; msg(Locale locale) {\n    String message = msg.getMessage(&quot;key&quot;, null, locale);\n    return Collections.singletonMap(&quot;message&quot;, message);\n}\nこのやり方だと、クライアントに応じてメッセージを可変にすることが\nできます。ロケールに対応するメッセージは、別のプロパティファイル\n（messages_en.properties など）で用意します。</code></pre>",
              "type" : "Html"
            },
            "id" : "x33",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "33",
            "time" : 1555228371611,
            "title" : "32.0 国際化・多言語対応について",
            "update_at" : 1556488166377
          },
          "x34" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>lyway は、SQLベースのDBマイグレーションツールです。DBマイグレーションとは、\nDBのデータを残したまま、テーブル作成やカラム変更等をすることです。\nSpringBoot のアプリで Flyway を使うと、起動時にマイグレーション用のSQLが\n実行されるようになります。</code></pre>",
              "type" : "Html"
            },
            "id" : "x34",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "34",
            "time" : 1555228371611,
            "title" : "33.0 FlywayでDBマイグレーション",
            "update_at" : 1556488166377
          },
          "x35" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>JDK 1.8 以上\nMaven 3.0 以上（or Gradle 等）\nPostgreSQL（執筆時 9.6）</code></pre>",
              "type" : "Html"
            },
            "id" : "x35",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "35",
            "time" : 1555228371611,
            "title" : "34.0 環境・ツール",
            "update_at" : 1556488166377
          },
          "x36" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb-rdb/pom.xml</p>\n<p><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion></p>\n<p>  <groupId>com.github.mamorum</groupId>\n  <artifactId>gssb-rdb</artifactId>\n  <version>1.0.0</version></p>\n  <parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>1.5.1.RELEASE</version>\n  </parent>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-data-jpa</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.flywaydb</groupId>\n      <artifactId>flyway-core</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.postgresql</groupId>\n      <artifactId>postgresql</artifactId>\n    </dependency>\n  </dependencies>\n\n  <properties>\n    &lt;java.version&gt;1.8&lt;/java.version&gt;\n    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;\n  </properties>\n\n<p>  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-maven-plugin</artifactId>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x36",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "36",
            "time" : 1555228371611,
            "title" : "35.0 ビルドファイルの作成",
            "update_at" : 1556488166377
          },
          "x37" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb-rdb/src/main/resources/db/migration/V1__Create.sql</p>\n<p>create table memo (\n  id serial primary key,\n  text varchar(255) not null,\n  version integer not null default 0,\n  updated_time timestamp not null default current_timestamp,\n  created_time timestamp not null default current_timestamp\n);\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x37",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "37",
            "time" : 1555228371611,
            "title" : "36.0 SQLファイルの作成",
            "update_at" : 1556488166377
          },
          "x38" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb-rdb/src/main/resources/application.properties</p>\n<p>spring.datasource.url=jdbc:postgresql://localhost:5432/spring\nspring.datasource.username=spring\nspring.datasource.password=spring\nspring.datasource.driver-class-name=org.postgresql.Driver\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x38",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "38",
            "time" : 1555228371611,
            "title" : "37.0 設定ファイルの作成",
            "update_at" : 1556488166377
          },
          "x39" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb-rdb/src/main/java/gssb/rdb/App.java</p>\n<p>package gssb.rdb;</p>\n<p>import org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;</p>\n<p>@SpringBootApplication\npublic class App {\n  public static void main(String[] args) {\n    SpringApplication.run(App.class);\n  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x39",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "39",
            "time" : 1555228371611,
            "title" : "38.0 起動クラスの作成",
            "update_at" : 1556488166377
          },
          "x40" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb-rdb &gt; mvn spring-boot:run</p>\n<p>・・・Started Application in 4.525 seconds (JVM running for 5.188)</p>\n<p>spring=&gt; select relname as table_name from pg_stat_user_tables;</p>\n<h2 id=\"-table_name\">   table_name</h2>\n<p> memo\n schema_version</p>\n<pcode>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x40",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "40",
            "time" : 1555228371611,
            "title" : "39.0 起動と確認",
            "update_at" : 1556488166377
          },
          "x42" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>SpringBoot の Webアプリで、JDBC 機能を使う方法を書いていきます。プログラム内に\n SQL（insert, select など）を書いてデータを操作します。</code></pre>",
              "type" : "Html"
            },
            "id" : "x42",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "42",
            "time" : 1555228371611,
            "title" : "40.0 JDBCでデータアクセス",
            "update_at" : 1556488166377
          },
          "x43" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb-rdb/src/main/java/gssb/rdb/controller/JdbcMemoController.java\npackage gssb.rdb.controller;</p>\n<p>import java.util.Collections;\nimport java.util.Map;</p>\n<p>import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RestController;</p>\n<p>@RestController\n@RequestMapping(path=&quot;/jdbc/memos&quot;)\npublic class JdbcMemoController {</p>\n<p>  @Autowired JdbcTemplate jdbc;</p>\n<p>  // リクエストパラメータ text を insert。\n  @RequestMapping(method=RequestMethod.POST)\n  public Map&lt;String, Long&gt; create(@RequestParam String text) {\n    Long id = jdbc.queryForObject(\n      &quot;insert into memo (text) values (?) returning id&quot;,\n      new Object[] {text},\n      (rs, num) -&gt; rs.getLong(&quot;id&quot;)\n    );\n    return Collections.singletonMap(&quot;id&quot;, id);\n  }</p>\n<p>  // リクエストＵＲＬ末尾のＩＤと等しいデータを select。\n  @RequestMapping(path=&quot;/{id}&quot;, method=RequestMethod.GET)\n  public Map&lt;String, Memo&gt; read(@PathVariable Long id) {\n    Memo memo = jdbc.queryForObject(\n      &quot;select id, text from memo where id = ?&quot;,\n      new Object[] {id},\n      (rs, num) -&gt; new Memo(rs.getLong(&quot;id&quot;), rs.getString(&quot;text&quot;))\n    );\n    return Collections.singletonMap(&quot;memo&quot;, memo);\n  }</p>\n<p>  // JDBC で操作するエンティティ。\n  public static class Memo {\n    public Long id;\n    public String name;\n    public Memo(Long id, String name) {\n      this.id = id;\n      this.name = name;\n    }\n  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x43",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "43",
            "time" : 1555228371611,
            "title" : "41.0 コントローラの作成",
            "update_at" : 1556488166377
          },
          "x44" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb-rdb &gt; mvn spring-boot:run</p>\n<p>メモの作成（insert）\ncurl http://localhost:8080/jdbc/memos -X POST -d &quot;text=Test&quot;</p>\n<p>メモの検索（select）\ncurl http://localhost:8080/jdbc/memos/1</p>\n<pcode>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x44",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "44",
            "time" : 1555228371611,
            "title" : "42.0 起動と確認",
            "update_at" : 1556488166377
          },
          "x45" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>SpringBoot の Webアプリで、JPA を使う方法を書いていきます。\nJPA を使うと、SQL を書かずにデータを操作することができます。</code></pre>",
              "type" : "Html"
            },
            "id" : "x45",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "45",
            "time" : 1555228371611,
            "title" : "43.0 JPAでデータアクセス",
            "update_at" : 1556488166377
          },
          "x46" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb-rdb/src/main/java/gssb/rdb/model/Memo.java\npackage gssb.rdb.model;</p>\n<p>import javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;\nimport javax.persistence.Id;\nimport javax.persistence.Version;</p>\n<p>import org.hibernate.validator.constraints.NotEmpty;</p>\n<p>@Entity    // JPAエンティティに必要。\npublic class Memo extends TimestampEntity {</p>\n<p>  // データ型 serial（PostgreSQL）。\n  @Id @GeneratedValue(strategy=GenerationType.IDENTITY)\n  public long id;</p>\n<p>  @NotEmpty\n  public String text;</p>\n<p>  @Version\n  public long version;<br>}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x46",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "46",
            "time" : 1555228371611,
            "title" : "44.0 ドメイン（エンティティ）の作成",
            "update_at" : 1556488166377
          },
          "x47" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb-rdb/src/main/java/gssb/rdb/model/TimestampEntity.java\npackage gssb.rdb.model;</p>\n<p>import java.sql.Timestamp;\nimport java.util.Date;</p>\n<p>import javax.persistence.Column;\nimport javax.persistence.MappedSuperclass;\nimport javax.persistence.PrePersist;\nimport javax.persistence.PreUpdate;</p>\n<p>@MappedSuperclass    // JPAエンティティの親に必要。\npublic abstract class TimestampEntity {</p>\n<p>  public Timestamp updatedTime;</p>\n<p>  @Column(updatable=false)\n  public Timestamp createdTime;</p>\n<p>  @PrePersist\n  public void prePersist() {\n    Timestamp ts = new Timestamp((new Date()).getTime());\n    this.createdTime = ts;\n    this.updatedTime = ts;\n    }</p>\n<p>  @PreUpdate\n  public void preUpdate() {\n    this.updatedTime = new Timestamp((new Date()).getTime());\n  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x47",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "47",
            "time" : 1555228371611,
            "title" : "45.0 親クラス",
            "update_at" : 1556488166377
          },
          "x48" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb-rdb/src/main/java/gssb/rdb/repository/MemoRepository.java\npackage gssb.rdb.repository;</p>\n<p>import org.springframework.data.repository.CrudRepository;</p>\n<p>import gssb.rdb.model.Memo;</p>\n<p>public interface MemoRepository extends CrudRepository&lt;Memo, Long&gt; {\n  // 引数の text に一致するエンティティを取得。\n  Iterable<Memo> findByText(String text);\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x48",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "48",
            "time" : 1555228371611,
            "title" : "46.0 リポジトリの作成",
            "update_at" : 1556488166377
          },
          "x49" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb-rdb/src/main/java/gssb/rdb/controller/JpaMemoController.java\npackage gssb.rdb.controller;</p>\n<p>import java.util.Collections;\nimport java.util.Map;</p>\n<p>import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RestController;</p>\n<p>import gssb.rdb.model.Memo;\nimport gssb.rdb.repository.MemoRepository;</p>\n<p>@RestController\n@RequestMapping(path=&quot;/jpa/memos&quot;)\npublic class JpaMemoController {</p>\n<p>  @Autowired MemoRepository repository;</p>\n<p>  // リクエストの JSON を Memo にバインドして insert。\n  @RequestMapping(method=RequestMethod.POST)\n  public Map&lt;String, Memo&gt; create(@RequestBody Memo memo) {\n    Memo result = repository.save(memo);\n    return Collections.singletonMap(&quot;memo&quot;, result);\n  }</p>\n<p>  // リクエストパラメータ text の内容と等しいデータを select。\n  @RequestMapping(method=RequestMethod.GET)\n  public Map&lt;String, Iterable<Memo>&gt; read(@RequestParam String text) {\n    Iterable<Memo> result = repository.findByText(text);\n    return Collections.singletonMap(&quot;memos&quot;, result);\n  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x49",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "49",
            "time" : 1555228371611,
            "title" : "47.0 コントローラの作成",
            "update_at" : 1556488166377
          },
          "x50" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb-rdb &gt; mvn spring-boot:run</p>\n<p>メモの作成\n実行コマンド（※ JSON 内のエスケープ文字「\\」は Windows で必要）\ncurl -H &quot;Content-Type: application/json&quot; -d &quot;{\\&quot;text\\&quot;:\\&quot;Data\\&quot;}&quot; http://localhost:8080/jpa/memos -X POST\n実行結果\n{&quot;memo&quot;:{&quot;updatedTime&quot;:1464938295852,&quot;createdTime&quot;:1464938295852,&quot;id&quot;:3,&quot;text&quot;:&quot;Data&quot;,&quot;version&quot;:0}}</p>\n<p>メモの検索\n実行コマンド\ncurl http://localhost:8080/jpa/memos?text=Data\n実行結果\n{&quot;memos&quot;:[{&quot;updatedTime&quot;:1464938295852,&quot;createdTime&quot;:1464938295852,&quot;id&quot;:3,&quot;text&quot;:&quot;Data&quot;,&quot;version&quot;:0}]}</p>\n<pcode>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x50",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "50",
            "time" : 1555228371611,
            "title" : "48.0 起動と確認",
            "update_at" : 1556488166377
          },
          "x51" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>Spring Boot の Webアプリで、RDB のトランザクションを管理する方法を書きます。\nSpring Framework の アノテーション @Transactional を使って管理します。</code></pre>",
              "type" : "Html"
            },
            "id" : "x51",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "51",
            "time" : 1555228371611,
            "title" : "49.0 トランザクションの管理",
            "update_at" : 1556488166377
          },
          "x52" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb-rdb/src/main/java/gssb/rdb/controller/TxMemoController.java\npackage gssb.rdb.controller;</p>\n<p>import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.transaction.annotation.Transactional;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RestController;</p>\n<p>import gssb.rdb.model.Memo;\nimport gssb.rdb.repository.MemoRepository;</p>\n<p>@RestController\n@RequestMapping(path=&quot;/tx&quot;)\npublic class TxMemoController {</p>\n<p>  @Autowired MemoRepository repository;</p>\n<p>  // メモを１つ作成して、その後でエラーを発生させるメソッド\n  private void create(Memo memo) {\n    repository.save(memo);\n    repository.save(new Memo()); // text の NotEmpty でエラー。\n  }</p>\n<p>  // トランザクションを管理する。\n  @Transactional\n  @RequestMapping(path=&quot;/on/memos&quot;, method=RequestMethod.POST)\n  public void txOn(@RequestBody Memo memo) {\n    create(memo);\n  }</p>\n<p>  // トランザクションを管理しない。\n  @RequestMapping(path=&quot;/off/memos&quot;, method=RequestMethod.POST)\n  public void txOff(@RequestBody Memo memo) {\n    create(memo);\n  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x52",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "52",
            "time" : 1555228371611,
            "title" : "50.0 コントローラの作成",
            "update_at" : 1556488166377
          },
          "x53" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb-rdb &gt; mvn spring-boot:run</p>\n<p>動作確認には curl と psql を使います。事前に psql で Memo テーブルを空にしておきます。\n実行コマンド\nspring=&gt; delete from memo;</p>\n<p>トランザクション管理の確認\ncurl を使って、トランザクションを管理するメソッドを呼び出します。メモを１つ登録して、エラーが発生します。\n実行コマンド（※ JSON 内のエスケープ文字「\\」は Windows で必要）\ncurl -H &quot;Content-Type: application/json&quot; -d &quot;{\\&quot;text\\&quot;:\\&quot;Data\\&quot;}&quot; http://localhost:8080/tx/on/memos -X POST\n実行結果\n{&quot;timestamp&quot;:1465023216817,&quot;status&quot;:500,&quot;error&quot;:&quot;Internal Server Error&quot;,&quot;exception&quot;:&quot;javax.validation....\nトランザクションがロールバックされるので、メモは１つも登録されていないはずです。psql で確認します。</p>\n<p>実行コマンド\nspring=&gt; select * from memo;\n実行結果\n id | text | version | updated_time | created_time\n----+------+---------+--------------+--------------\n(0 行)\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x53",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "53",
            "time" : 1555228371611,
            "title" : "51.0 起動と確認",
            "update_at" : 1556488166377
          },
          "x54" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>Spring Boot の Webアプリで、mockito を使って単体テストをする方法を書きます。\n今回は、リポジトリクラスのモックを用意して、DB にアクセスせずにテストしてみます</code></pre>",
              "type" : "Html"
            },
            "id" : "x54",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "54",
            "time" : 1555228371611,
            "title" : "52.0 mockitoで単体テスト",
            "update_at" : 1556488166377
          },
          "x55" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb-rdb/src/main/java/gssb/rdb/controller/JpaMemoController.java\n@RestController\n@RequestMapping(path=&quot;/jpa/memos&quot;)\npublic class JpaMemoController {</p>\n<p>  @Autowired MemoRepository repository;</p>\n<p>  // リクエストの JSON を Memo にバインドして insert。\n  @RequestMapping(method=RequestMethod.POST)\n  public Map&lt;String, Memo&gt; create(@RequestBody Memo memo) {\n    Memo result = repository.save(memo);\n    return Collections.singletonMap(&quot;memo&quot;, result);\n  }\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x55",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "55",
            "time" : 1555228371611,
            "title" : "53.0 テスト対象コントローラ",
            "update_at" : 1556488166377
          },
          "x56" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>pom.xml\n &lt;dependency&gt;\n      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n      &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;\n      &lt;scope&gt;test&lt;/scope&gt;\n    &lt;/dependency&gt;\n追加すると、Spring Test, JUnit, AssertJ, Mockito 等が使えるようになります。\n詳細は「Test scope dependencies - Spring Boot Reference」に記載されています。</code></pre>",
              "type" : "Html"
            },
            "id" : "x56",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "56",
            "time" : 1555228371611,
            "title" : "54.0 ビルドファイルの編集",
            "update_at" : 1556488166377
          },
          "x57" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb-rdb/src/test/java/gssb/rdb/controller/JpaMemoControllerTest.java\npackage gssb.rdb.controller;</p>\n<p>import static org.assertj.core.api.Assertions.<em>;\nimport static org.mockito.Mockito.</em>;\nimport java.util.Map;\nimport org.junit.Test;\nimport gssb.rdb.model.Memo;\nimport gssb.rdb.repository.MemoRepository;</p>\n<p>public class JpaMemoControllerTest {</p>\n<p>  @Test public void testCreate() {</p>\n<pre><code>// 準備：テストデータ\nMemo memo = new Memo();\nmemo.text = &quot;テスト&quot;;\n\n// 準備：リポジトリのモック（戻り値を設定）\nMemoRepository repo = mock(MemoRepository.class);\nwhen(repo.save(memo)).thenReturn(memo);\n\n// 準備：テスト対象（リポジトリのモックを設定）\nJpaMemoController controller = new JpaMemoController();\ncontroller.repository = repo;\n\n// 実行\nMap&lt;String, Memo&gt; result = controller.create(memo);\n\n// 検証\nassertThat(result.get(&quot;memo&quot;).text).isEqualTo(&quot;テスト&quot;);\n</code></pre><p>  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x57",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "57",
            "time" : 1555228371611,
            "title" : "55.0 テストクラスの作成",
            "update_at" : 1556488166377
          },
          "x58" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>Eclipse の場合、テストクラスをエディタで開いて「実行（JUnit テストとして実行）」\nします。下のように、Maven コマンドでも実行できます。\ngssb-rdb &gt; mvn test</code></pre>",
              "type" : "Html"
            },
            "id" : "x58",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "58",
            "time" : 1555228371611,
            "title" : "56.0 テスト実行",
            "update_at" : 1556488166377
          },
          "x59" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nSpring Boot の Webアプリを、jar 形式でパッケージングして起動する方法を書きます。</p>\n<p>Maven の package タスクで作成します。\ngssb &gt; mvn package\njar は、target 配下に出力されます。</p>\n<p>次のコマンドで起動します。\ngssb &gt; java -jar target\\gssb-1.0.0.jar\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x59",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "59",
            "time" : 1555228371611,
            "title" : "57.0 アプリのjar作成",
            "update_at" : 1556488166377
          },
          "x60" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>Spring Boot のスケジューリング機能を使って、一定間隔で処理を実行する方法を書きます。</code></pre>",
              "type" : "Html"
            },
            "id" : "x60",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "60",
            "time" : 1555228371611,
            "title" : "58.0 タスクのスケジューリング",
            "update_at" : 1556488166377
          },
          "x61" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ngssb/src/main/java/gssb/App.java\npackage gssb;</p>\n<p>import java.text.SimpleDateFormat;\nimport java.util.Date;</p>\n<p>import org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.scheduling.annotation.EnableScheduling;\nimport org.springframework.scheduling.annotation.Scheduled;</p>\n<p>@SpringBootApplication\n@EnableScheduling\npublic class App {</p>\n<p>  private static final SimpleDateFormat\n    fmt = new SimpleDateFormat(&quot;HH:mm:ss&quot;);</p>\n<p>  // 5秒ごとに実行されるメソッド。\n  @Scheduled(fixedRate = 5000)\n  public void reportTime() {\n    System.out.println(fmt.format(new Date()));\n  }</p>\n<p>  public static void main(String[] args) {\n    SpringApplication.run(App.class, args);\n  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x61",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "61",
            "time" : 1555228371611,
            "title" : "59.0 タスクの作成・有効化",
            "update_at" : 1556488166377
          },
          "x62" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>次のコマンドでアプリを起動します。\ngssb &gt; gradle bootRun\n（省略）\n・・・Started Application in 4.525 seconds (JVM running for 5.188)\n17:22:41\n17:22:46\n17:22:51\n（省略）\n５秒ごとに時刻が表示されます。</code></pre>",
              "type" : "Html"
            },
            "id" : "x62",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "62",
            "time" : 1555228371611,
            "title" : "60.0 起動・確認",
            "update_at" : 1556488166377
          },
          "x63" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>Spring Boot の Webアプリを、HTTP経由で管理したり、モニタリングする方法を書きます。\n今回は、Spring Boot の Actuator という機能を使います。</code></pre>",
              "type" : "Html"
            },
            "id" : "x63",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "63",
            "time" : 1555228371611,
            "title" : "61.0 アプリの管理やモニタリング",
            "update_at" : 1556488166377
          },
          "x64" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\npom.xml</p>\n<p> <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-actuator</artifactId>\n    </dependency>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x64",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "64",
            "time" : 1555228371611,
            "title" : "62.0  ビルドファイルの編集",
            "update_at" : 1556488166377
          },
          "x65" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n次のコマンドでアプリを起動します。\ngssb &gt; mvn spring-boot:run</p>\n<p>http://localhost:8080/health にアクセスすると、システムの状態を受け取ることができます。\n{&quot;status&quot;:&quot;UP&quot;}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x65",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "65",
            "time" : 1555228371611,
            "title" : "63.0 起動と確認",
            "update_at" : 1556488166377
          },
          "x66" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "certificatePath" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledgecontents%2FiHmcxnnRDWPOJAE38On1nCdq0ir2%2F-LdLtODpcc-J83q1aU5fx66?alt=media&token=8602328e-a82d-456b-b2c6-db3d752b5c8a",
              "type" : "Certificate"
            },
            "id" : "x66",
            "knowledgeid" : "-LdLtODpcc-J83q1aU5f",
            "name" : "tei952",
            "ord" : "66",
            "time" : 1555228371611,
            "title" : "64.9 御修了ありがとうございました。",
            "update_at" : 1556488166377
          }
        }
      },
      "-LdLtaiBADqiIat-6k_3" : {
        "contents" : {
          "x01" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n&lt;!DOCTYPE html&gt;</p>\n<p><html>\n  <head>\n    <!-- Required meta tags-->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no, minimal-ui, viewport-fit=cover\">\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n    <!-- Color theme for statusbar -->\n    <meta name=\"theme-color\" content=\"#2196f3\">\n    <!-- Your app title -->\n    <title>My App</title>\n    <!-- Path to Framework7 Library CSS -->\n    <link rel=\"stylesheet\" href=\"path/to/framework7.min.css\">\n    <!-- Path to your custom app styles-->\n    <link rel=\"stylesheet\" href=\"path/to/my-app.css\">\n  </head>\n  <body>\n    <!-- App root element -->\n    <div id=\"app\">\n      <!-- Statusbar overlay -->\n      <div class=\"statusbar\"></div></p>\n<pre><code>  &lt;!-- Your main view, should have &quot;view-main&quot; class --&gt;\n  &lt;div class=&quot;view view-main&quot;&gt;\n    &lt;!-- Initial Page, &quot;data-name&quot; contains page name --&gt;\n    &lt;div data-name=&quot;home&quot; class=&quot;page&quot;&gt;\n\n      &lt;!-- Top Navbar --&gt;\n      &lt;div class=&quot;navbar&quot;&gt;\n        &lt;div class=&quot;navbar-inner&quot;&gt;\n          &lt;div class=&quot;title&quot;&gt;Awesome App&lt;/div&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n\n      &lt;!-- Toolbar --&gt;\n      &lt;div class=&quot;toolbar&quot;&gt;\n        &lt;div class=&quot;toolbar-inner&quot;&gt;\n          &lt;!-- Toolbar links --&gt;\n          &lt;a href=&quot;#&quot; class=&quot;link&quot;&gt;Link 1&lt;/a&gt;\n          &lt;a href=&quot;#&quot; class=&quot;link&quot;&gt;Link 2&lt;/a&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n\n      &lt;!-- Scrollable page content --&gt;\n      &lt;div class=&quot;page-content&quot;&gt;\n        &lt;p&gt;Page content goes here&lt;/p&gt;\n        &lt;!-- Link to another page --&gt;\n        &lt;a href=&quot;/about/&quot;&gt;About app&lt;/a&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n&lt;!-- Path to Framework7 Library JS--&gt;\n&lt;script type=&quot;text/javascript&quot; src=&quot;path/to/framework7.min.js&quot;&gt;&lt;/script&gt;\n&lt;!-- Path to your app js--&gt;\n&lt;script type=&quot;text/javascript&quot; src=&quot;path/to/my-app.js&quot;&gt;&lt;/script&gt;\n</code></pre><p>  </body>\n</html>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x01",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "01",
            "time" : 1555228371611,
            "title" : "1.0 App HTML Layout",
            "update_at" : 1556488166377
          },
          "x02" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>var app = new Framework7({\n  // App root element\n  root: &#39;#app&#39;,\n  // App Name\n  name: &#39;My App&#39;,\n  // App id\n  id: &#39;com.myapp.test&#39;,\n  // Enable swipe panel\n  panel: {\n    swipe: &#39;left&#39;,\n  },\n  // Add default routes\n  routes: [\n    {\n      path: &#39;/about/&#39;,\n      url: &#39;about.html&#39;,\n    },\n  ],\n  // ... other parameters\n});</code></pre>",
              "type" : "Html"
            },
            "id" : "x02",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "02",
            "time" : 1555228371611,
            "title" : "2.0 Initialize App:my-app.js",
            "update_at" : 1556488166377
          },
          "x03" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nvar app = new Framework7({\n  ...\n  on: {\n    // each object key means same name event handler\n    pageInit: function (page) {\n      // do something on page init\n    },\n    popupOpen: function (popup) {\n      // do something on popup open\n    },\n  },\n});</p>\n<p>var popup = app.popup.create({\n  ...\n  on: {\n    open: function (popup) {\n      // do something on popup open\n    }\n  }\n})\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x03",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "03",
            "time" : 1555228371611,
            "title" : "3.0 event:",
            "update_at" : 1556488166377
          },
          "x04" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>var app = new Framework7({\n  routes: [\n    {\n      name: &#39;about&#39;,\n      path: &#39;/about/&#39;,\n      url: &#39;./pages/about.html&#39;,\n    },\n    {\n      name: &#39;news&#39;,\n      path: &#39;/news/&#39;,\n      url: &#39;./pages/news.html&#39;,\n      options: {\n        animate: false,\n      },\n    },\n    {\n      name: &#39;users&#39;,\n      path: &#39;/users/&#39;,\n      templateUrl: &#39;./pages/users.html&#39;,\n      options: {\n        context: {\n          users: [&#39;John Doe&#39;, &#39;Vladimir Kharlampidi&#39;, &#39;Timo Ernst&#39;],\n        },\n      },\n      on: {\n        pageAfterIn: function (e, page) {\n          // do something after page gets into the view\n        },\n        pageInit: function (e, page) {\n          // do something when page initialized\n        },\n      }\n    },\n    // Default route, match to all pages (e.g. 404 page)\n    {\n      path: &#39;(.*)&#39;,\n      url: &#39;./pages/404.html&#39;,\n    },\n  ],\n});</code></pre>",
              "type" : "Html"
            },
            "id" : "x04",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "04",
            "time" : 1555228371611,
            "title" : "4.0 routers",
            "update_at" : 1556488166377
          },
          "x05" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>routes = [\n  // ...\n  {\n    path: &#39;/some-page/&#39;,\n    // Component Object\n    component: {\n      template: `\n        &lt;div class=&quot;page&quot;&gt;\n          &lt;div class=&quot;navbar&quot;&gt;\n            &lt;div class=&quot;navbar-inner&quot;&gt;\n              &lt;div class=&quot;title&quot;&gt;{{title}}&lt;/div&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n          &lt;div class=&quot;page-content&quot;&gt;\n            &lt;a @click=&quot;openAlert&quot; class=&quot;red-link&quot;&gt;Open Alert&lt;/a&gt;\n            &lt;div class=&quot;list simple-list&quot;&gt;\n              &lt;ul&gt;\n                {{#each names}}\n                  &lt;li&gt;{{this}}&lt;/li&gt;\n                {{/each}}\n              &lt;/ul&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n      `,\n      style: `\n        .red-link {\n          color: red;\n        }\n      `,\n      data: function () {\n        return {\n          title: &#39;Component Page&#39;,\n          names: [&#39;John&#39;, &#39;Vladimir&#39;, &#39;Timo&#39;],\n        }\n      },\n      methods: {\n        openAlert: function () {\n          var self = this;\n          self.$app.dialog.alert(&#39;Hello world!&#39;);\n        },\n      },\n      on: {\n        pageInit: function (e, page) {\n          // do something on page init\n        },\n        pageAfterOut: function (e, page) {\n          // page has left the view\n        },\n      }\n    },\n  },\n  // ...\n]</code></pre>",
              "type" : "Html"
            },
            "id" : "x05",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "05",
            "time" : 1555228371611,
            "title" : "5.0 router component:",
            "update_at" : 1556488166377
          },
          "x06" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x06",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "06",
            "time" : 1555228371611,
            "title" : "6.0 view layout",
            "update_at" : 1556488166377
          },
          "x07" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x07",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "07",
            "time" : 1555228371611,
            "title" : "7.0 Multiple Views Layout",
            "update_at" : 1556488166377
          },
          "x08" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nvar app = new Framework7({\n  id: &#39;com.myapp.test&#39;,\n  // Extended by Panel component:\n  panel: {\n    swipe: &#39;left&#39;,\n    leftBreakpoint: 768,\n    rightBreakpoint: 1024,\n  },\n  // Extended by Dialog component:\n  dialog: {\n    title: &#39;My App&#39;,\n  },\n  // Extended by Statusbar component:\n  statusbar: {\n    iosOverlaysWebview: true,\n  },\n});</p>\n<p>// Open panel\napp.panel.open(&#39;left&#39;);</p>\n<p>// Hide statusbar\napp.statusbar.hide();</p>\n<p>app.on(&#39;panelOpen&#39;, function (panel) {\n  console.log(&#39;Panel &#39; + panel.side + &#39; opened&#39;);\n});\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x08",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "08",
            "time" : 1555228371611,
            "title" : "8.0 App Methods &amp; Properties",
            "update_at" : 1556488166377
          },
          "x09" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x09",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "09",
            "time" : 1555228371611,
            "title" : "9.0 Accordion Vue Component",
            "update_at" : 1556488166377
          },
          "x10" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n<!-- Actions --></p>\n<p><f7-actions>\n  <!-- Actions Group -->\n  <f7-actions-group>\n    <!-- Actions Label -->\n    <f7-actions-label>Hello</f7-actions-label>\n    <!-- Actions Buttons -->\n    <f7-actions-button>Button 1</f7-actions-button>\n    <f7-actions-button @click=\"doSomething\">Button 2</f7-actions-button>\n  </f7-actions-group>\n  <!-- Another Group -->\n  <f7-actions-group>\n    <!-- Cancel/Close Button -->\n    <f7-actions-button color=\"red\" bold>Cancel</f7-actions-button>\n  </f7-actions-group>\n</f7-actions>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x10",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "10",
            "time" : 1555228371611,
            "title" : "10.0 Action Sheet Vue Component",
            "update_at" : 1556488166377
          },
          "x11" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x11",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "11",
            "time" : 1555228371611,
            "title" : "11.0 Badge Vue Component",
            "update_at" : 1556488166377
          },
          "x12" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n<!-- Block --></p>\n<p><f7-block>...</f7-block></p>\n<!-- With extran highlighting and padding, additional \"strong\" prop -->\n<p><f7-block strong>...</f7-block></p>\n<!-- With block title -->\n<p><f7-block-title>Block Title</f7-block-title></p>\n<p><f7-block>...</f7-block></p>\n<!-- Inset -->\n<p><f7-block inset>...</f7-block></p>\n<!-- With header and footer -->\n<p><f7-block>\n  <f7-block-header>Block Header</f7-block-header>\n  ...\n  <f7-block-footer>Block Footer</f7-block-footer>\n</f7-block></p>\n<!-- With header and footer outside -->\n<p><f7-block-header>Block Header</f7-block-header></p>\n<p><f7-block>\n  ...\n</f7-block></p>\n<p><f7-block-footer>Block Footer</f7-block-footer></p>\n<!-- With header after block title and footer outside-->\n<p><f7-block-title>Block Title</f7-block-title></p>\n<p><f7-block-header>Block Header</f7-block-header></p>\n<p><f7-block>\n  ...\n</f7-block>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x12",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "12",
            "time" : 1555228371611,
            "title" : "12.0 Block Vue Component",
            "update_at" : 1556488166377
          },
          "x13" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x13",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "13",
            "time" : 1555228371611,
            "title" : "13.0 Button Vue Component",
            "update_at" : 1556488166377
          },
          "x14" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nMinimal layout with extra content padding</p>\n<p><f7-card title=\"Card Title\" content=\"Card Content\" footer=\"Card Footer\"></f7-card>\nRenders to:</p>\n<div class=\"card\">\n  <div class=\"card-header\">Card Title</div>\n  <div class=\"card-content card-content-padding\">Card Content</div>\n  <div class=\"card-footer\">Card Footer</div>\n</div>\nMinimal layout without extra content padding\n<f7-card title=\"Card Title\" content=\"Card Content\" footer=\"Card Footer\" :padding=\"false\"></f7-card>\nRenders to:\n<div class=\"card\">\n  <div class=\"card-header\">Card Title</div>\n  <div class=\"card-content\">Card Content</div>\n  <div class=\"card-footer\">Card Footer</div>\n</div>\nCustom Layout\n<f7-card>\n  <f7-card-header>Card header content</f7-card-header>\n  <f7-card-content>\n    <p>Card content</p>\n  </f7-card-content>\n  <f7-card-footer>Card footer content</f7-card-footer>\n</f7-card>\nRenders to:\n<div class=\"card\">\n  <div class=\"card-header\">Card header content</div>\n  <div class=\"card-content\">\n    <p>Card content</p>\n  </div>\n  <div class=\"card-footer\">Card footer content</div>\n</div>\n<code>## 15.0 Checkbox Vue Component</code>\nCheckboxes List is not a separate component, but just a particular case of using <f7-list>, <f7-list-item>.\n<f7-list>\n  <!-- Additional \"checkbox\" prop to enable checkbox list item -->\n  <f7-list-item checkbox value=\"check_1\" checked title=\"Checkbox 1\"></f7-list-item>\n  <f7-list-item checkbox value=\"check_2\" title=\"Checkbox 2\"></f7-list-item>\n</f7-list>\nCheckbox v-model\nv-model is not supported on Checkbox vue component. Instead, just use the combination of checked property and @change event:\n<template>\n  <!-- With boolean value -->\n  <f7-checkbox :checked=\"jobIsDone\" @change=\"jobIsDone = $event.target.checked\"></f7-checkbox>\n\n  <!-- With array value -->\n  <f7-checkbox\n    value=\"banana\"\n    :checked=\"fruits.indexOf('banana') >= 0\"\n    @change=\"checkFruits\"\n  ></f7-checkbox>\n\n  <f7-checkbox\n    value=\"orange\"\n    :checked=\"fruits.indexOf('orange') >= 0\"\n    @change=\"checkFruits\"\n  ></f7-checkbox>\n\n  <f7-checkbox\n    value=\"apple\"\n    :checked=\"fruits.indexOf('apple') >= 0\"\n    @change=\"checkFruits\"\n  ></f7-checkbox>\n</template>\n<script>\n  export default {\n    data() {\n      return {\n        jobIsDone: false,\n        fruits: [],\n      };\n    },\n    methods: {\n      checkFruits(event) {\n        const self = this;\n        const value = event.target.value;\n        if (event.target.checked) {\n          self.fruits.push(value);\n        } else {\n          self.fruits.splice(self.fruits.indexOf(value), 1);\n        }\n      },\n    },\n  };\n</script>\nExamples\n<!-- Inline checkbox -->\n<p>Lorem <f7-checkbox name=\"checkbox-1\"></f7-checkbox> ipsum dolor sit amet, consectetur adipisicing elit. Alias beatae illo nihil aut eius commodi sint eveniet aliquid eligendi <f7-checkbox name=\"checkbox-2\" checked></f7-checkbox> ad delectus impedit tempore nemo, enim vel praesentium consequatur nulla mollitia!</p>\n\n<!-- Checkboxes List -->\n<f7-list>\n  <f7-list-item checkbox title=\"Books\" name=\"demo-checkbox\" checked></f7-list-item>\n  <f7-list-item checkbox title=\"Movies\" name=\"demo-checkbox\"></f7-list-item>\n  <f7-list-item checkbox title=\"Food\" name=\"demo-checkbox\"></f7-list-item>\n  <f7-list-item checkbox title=\"Drinks\" name=\"demo-checkbox\"></f7-list-item>\n</f7-list>\n<code>## 16.0 Chip Vue Component</code>\n  <!-- Simple Chip -->\n  <f7-chip text=\"Example Chip\"></f7-chip>\n\n  <!-- Colored Chip -->\n  <f7-chip text=\"Another Chip\" color=\"red\"></f7-chip>\n\n  <!-- Media Chip -->\n  <f7-chip text=\"Jane Doe\" media=\"J\" media-bg-color=\"red\"></f7-chip>\n\n  <!-- Deleteable Chip -->\n  <f7-chip text=\"Another Chip\" deleteable @delete=\"onChipDelete\"></f7-chip>\n\n  <!-- Deleteable Media Chip -->\n  <f7-chip text=\"Jane Doe\" media-bg=\"red\" deleteable @delete=\"onChipDelete\">\n    <img slot=\"media\" src=\"http://lorempixel.com/100/100/people/9/\">\n  </f7-chip>\n\n  <!-- With Icon -->\n  <f7-chip text=\"Add Contact\" color=\"blue\">\n    <f7-icon slot=\"media\" f7=\"add_round\"></f7-icon>\n  </f7-chip>\n<code>## 17.0 Contacts List Vue Component</code>\n  <template>\n    <f7-page>\n      <f7-navbar back-link=\"Back\" title=\"Contacts\" sliding></f7-navbar>\n\n      <f7-list contacts-list>\n        <f7-list-group v-for=\"(group, key) in contacts\">\n          <f7-list-item :title=\"key\" group-title></f7-list-item>\n          <f7-list-item v-for=\"name in group\" :title=\"name\"></f7-list-item>\n        </f7-list-group>\n      </f7-list>\n\n    </f7-page>\n  </template>\n  <script>\n    export default {\n      data: function () {\n        return {\n          contacts: {\n            &#39;A&#39;: [\n              &#39;Aaron&#39;,\n              &#39;Abbie&#39;,\n              &#39;Adam&#39;,\n              &#39;Adele&#39;,\n              &#39;Agatha&#39;,\n              &#39;Agnes&#39;,\n              &#39;Albert&#39;,\n              &#39;Alexander&#39;\n            ],\n            &#39;B&#39;: [\n              &#39;Bailey&#39;,\n              &#39;Barclay&#39;,\n              &#39;Bartolo&#39;,\n              &#39;Bellamy&#39;,\n              &#39;Belle&#39;,\n              &#39;Benjamin&#39;\n            ],\n            &#39;C&#39;: [\n              &#39;Caiden&#39;,\n              &#39;Calvin&#39;,\n              &#39;Candy&#39;,\n              &#39;Carl&#39;,\n              &#39;Cherilyn&#39;,\n              &#39;Chester&#39;,\n              &#39;Chloe&#39;\n            ],\n            &#39;V&#39;: [\n              &#39;Vladimir&#39;\n            ]\n          }\n        }\n      }\n    }\n  </script>\n<code>## 18.0 Floating Action Button Vue Component</code>\n  Default FAB\n  <f7-page>\n    <!-- FAB must be direct child of a page -->\n    <f7-fab color=\"pink\" @click=\"doSomething\">\n      <f7-icon f7=\"add\"></f7-icon>\n    </f7-fab>\n    ...\n  </f7-page>\n  Renders to:\n  ...\n  <div class=\"fab fab-right-bottom color-pink\">\n    <a href=\"#\">\n      <i class=\"icon f7-icons\">add</i>\n    </a>\n  </div>\n  ...\n  Speed Dial\n  <f7-page>\n    <!-- FAB must be direct child of a page -->\n    <f7-fab color=\"pink\" @click=\"doSomething\">\n      <!-- First icon is visible when Speed Dial actions are closed -->\n      <f7-icon f7=\"add\"></f7-icon>\n      <!-- Second icon is visible when Speed Dial actions are opened -->\n      <f7-icon f7=\"close\"></f7-icon>\n\n      <!-- Speed Dial Buttons -->\n      <f7-fab-buttons>\n        <f7-fab-button color=\"orange\" @click=\"onButtonClick\">A</f7-fab-button>\n        <f7-fab-button color=\"green\" @click=\"onButtonClick\">B</f7-fab-button>\n        <f7-fab-button color=\"blue\" @click=\"onButtonClick\">C</f7-fab-button>\n      </f7-fab-buttons>\n    </f7-fab>\n    ...\n  </f7-page>\n  Renders to:\n  ...\n  <div class=\"fab fab-right-bottom color-pink\">\n    <a href=\"#\">\n      <i class=\"icon f7-icons\">add</i>\n      <i class=\"icon f7-icons\">close</i>\n    </a>\n    <div class=\"fab-buttons fab-buttons-top\">\n      <a href=\"#\" class=\"color-orange\">A</a>\n      <a href=\"#\" class=\"color-green\">B</a>\n      <a href=\"#\" class=\"color-blue\">C</a>\n    </div>\n  </div>\n  ...\n<code>## 19.0 Grid Vue Component</code>\nEqual width columns\n<f7-row>\n  <f7-col>Col 1</f7-col>\n  <f7-col>Col 2</f7-col>\n  <f7-col>Col 3</f7-col>\n</f7-row>\nRenders to:\n<div class=\"row\">\n  <div class=\"col\"></div>\n  <div class=\"col\"></div>\n  <div class=\"col\"></div>\n</div>\nNo gap and fixed size\n<f7-row no-gap>\n  <f7-col width=\"50\">Col 50%</f7-col>\n  <f7-col width=\"25\">Col 25%</f7-col>\n  <f7-col width=\"25\">Col 25%</f7-col>\n</f7-row>\nRenders to:\n<div class=\"row no-gap\">\n  <div class=\"col-50\"></div>\n  <div class=\"col-25\"></div>\n  <div class=\"col-25\"></div>\n</div>\nDifferent columns width on tablet\n<f7-row>\n  <f7-col width=\"50\" tablet-width=\"25\">Col 1</f7-col>\n  <f7-col width=\"50\" tablet-width=\"25\">Col 2</f7-col>\n  <f7-col width=\"50\" tablet-width=\"25\">Col 3</f7-col>\n  <f7-col width=\"50\" tablet-width=\"25\">Col 4</f7-col>\n</f7-row>\nRenders to:\n<div class=\"row\">\n  <div class=\"col-50 tablet-25\">Col 1</div>\n  <div class=\"col-50 tablet-25\">Col 2</div>\n  <div class=\"col-50 tablet-25\">Col 3</div>\n  <div class=\"col-50 tablet-25\">Col 4</div>\n</div>\n<code>## 20.0 Icon Vue Component</code>\n<!-- Default back icon -->\n<f7-icon icon=\"icon-back\"></f7-icon>\n\n<!-- Some custom icon -->\n<f7-icon icon=\"icon-home\"></f7-icon>\n\n<!-- F7 Icons font icon -->\n<f7-icon f7=\"home\"></f7-icon>\n\n<!-- Material Icons font icon -->\n<f7-icon material=\"home\"></f7-icon>\n\n<!-- Font Awesome icons font icon -->\n<f7-icon fa=\"home\"></f7-icon>\n\n<!-- Ionicons icons font icon -->\n<f7-icon ion=\"home\"></f7-icon>\n\n<!-- F7 icons font icon with custom size and color -->\n<f7-icon f7=\"home\" size=\"44px\" color=\"blue\"></f7-icon>\n\n<!-- Conditional icon -->\n<f7-icon if-ios=\"f7:home\" if-md=\"material:home\"></f7-icon>\n<code>## 21.0 Input / Form Elements Vue Components</code>\nv-model is not supported on f7-input vue component. Instead, just use the combination of value property and @input event:\n<template>\n  ...\n  <f7-list-item>\n    <f7-label>Name</f7-label>\n    <f7-input type=\"text\" :value=\"name\" @input=\"name = $event.target.value\" placeholder=\"Your name\" clear-button></f7-input>\n  </f7-list-item>\n  ...\n</template>\n<script>\n  export default {\n    data() {\n      name: &#39;&#39;,\n    },\n    ...\n  };\n</script>\nExamples\nFull Layout / Inline Labels\n<f7-list inline-labels no-hairlines-md>\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>Name</f7-label>\n    <f7-input type=\"text\" placeholder=\"Your name\" :value=\"value\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>Password</f7-label>\n    <f7-input type=\"password\" placeholder=\"Your password\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>E-mail</f7-label>\n    <f7-input type=\"email\" placeholder=\"Your e-mail\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>URL</f7-label>\n    <f7-input type=\"url\" placeholder=\"URL\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>Phone</f7-label>\n    <f7-input type=\"tel\" placeholder=\"Your phone number\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>Gender</f7-label>\n    <f7-input type=\"select\" placeholder=\"Please choose...\">\n      <option value=\"Male\">Male</option>\n      <option value=\"Female\">Female</option>\n    </f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>Birthday</f7-label>\n    <f7-input type=\"date\" value=\"2014-04-30\" placeholder=\"Please choose...\"></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>Date time</f7-label>\n    <f7-input type=\"datetime-local\" placeholder=\"Please choose...\"></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>Range</f7-label>\n    <f7-input type=\"range\" value=\"50\" min=\"0\" max=\"100\" step=\"1\"></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>Textarea</f7-label>\n    <f7-input type=\"textarea\" placeholder=\"Bio\"></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>Resizable</f7-label>\n    <f7-input type=\"textarea\" resizable placeholder=\"Bio\"></f7-input>\n  </f7-list-item>\n\n</f7-list>\nFull Layout / Stacked Labels\n<f7-list no-hairlines-md>\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>Name</f7-label>\n    <f7-input type=\"text\" placeholder=\"Your name\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>Password</f7-label>\n    <f7-input type=\"password\" placeholder=\"Your password\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>E-mail</f7-label>\n    <f7-input type=\"email\" placeholder=\"Your e-mail\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>URL</f7-label>\n    <f7-input type=\"url\" placeholder=\"URL\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>Phone</f7-label>\n    <f7-input type=\"tel\" placeholder=\"Your phone number\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>Gender</f7-label>\n    <f7-input type=\"select\" placeholder=\"Please choose...\">\n      <option value=\"Male\">Male</option>\n      <option value=\"Female\">Female</option>\n    </f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>Birthday</f7-label>\n    <f7-input type=\"date\" value=\"2014-04-30\" placeholder=\"Please choose...\"></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>Date time</f7-label>\n    <f7-input type=\"datetime-local\" placeholder=\"Please choose...\"></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>Range</f7-label>\n    <f7-input type=\"range\" value=\"50\" min=\"0\" max=\"100\" step=\"1\"></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>Textarea</f7-label>\n    <f7-input type=\"textarea\" placeholder=\"Bio\"></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>Resizable</f7-label>\n    <f7-input type=\"textarea\" resizable placeholder=\"Bio\"></f7-input>\n  </f7-list-item>\n</f7-list>\nFloating Labels (MD-theme only)\n<f7-list no-hairlines-md>\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label floating>Name</f7-label>\n    <f7-input type=\"text\" placeholder=\"Your name\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label floating>Password</f7-label>\n    <f7-input type=\"password\" placeholder=\"Your password\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label floating>E-mail</f7-label>\n    <f7-input type=\"email\" placeholder=\"Your e-mail\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label floating>URL</f7-label>\n    <f7-input type=\"url\" placeholder=\"URL\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label floating>Phone</f7-label>\n    <f7-input type=\"tel\" placeholder=\"Your phone number\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label floating>Bio</f7-label>\n    <f7-input type=\"textarea\" placeholder=\"Bio\" resizable></f7-input>\n  </f7-list-item>\n</f7-list>\nValidation + Additional Info\n<f7-list no-hairlines-md>\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>Name</f7-label>\n    <f7-input type=\"text\" placeholder=\"Your name\" info='Default \"required\" validation' required validate clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>Fruit</f7-label>\n    <f7-input type=\"text\" placeholder=\"Type 'apple' or 'banana'\" required validate clear-button>\n      <span slot=\"info\">Pattern validation (<b>apple|banana</b>)</span>\n    </f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>E-mail</f7-label>\n    <f7-input type=\"email\" placeholder=\"Your e-mail\" info='Default e-mail validation' required validate clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>URL</f7-label>\n    <f7-input type=\"url\" placeholder=\"Your URL\" info='Default URL validation' required validate clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-label>Number</f7-label>\n    <f7-input type=\"text\" placeholder=\"Enter number\" info='With custom error message' error-message=\"Only numbers please!\" required validate pattern=\"[0-9]*\" clear-button></f7-input>\n  </f7-list-item>\n\n</f7-list>\nIcon + Input\n<f7-list no-hairlines-md>\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-input type=\"text\" placeholder=\"Your name\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-input type=\"password\" placeholder=\"Your password\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-input type=\"email\" placeholder=\"Your e-mail\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-icon icon=\"demo-list-icon\" slot=\"media\"></f7-icon>\n    <f7-input type=\"url\" placeholder=\"URL\" clear-button></f7-input>\n  </f7-list-item>\n\n</f7-list>\nLabel + Input\n<f7-list no-hairlines-md>\n  <f7-list-item>\n    <f7-label>Name</f7-label>\n    <f7-input type=\"text\" placeholder=\"Your name\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-label>Password</f7-label>\n    <f7-input type=\"password\" placeholder=\"Your password\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-label>E-mail</f7-label>\n    <f7-input type=\"email\" placeholder=\"Your e-mail\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-label>URL</f7-label>\n    <f7-input type=\"url\" placeholder=\"URL\" clear-button></f7-input>\n  </f7-list-item>\n</f7-list>\nOnly Inputs\n<f7-list no-hairlines-md>\n  <f7-list-item>\n    <f7-input type=\"text\" placeholder=\"Your name\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-input type=\"password\" placeholder=\"Your password\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-input type=\"email\" placeholder=\"Your e-mail\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-input type=\"url\" placeholder=\"URL\" clear-button></f7-input>\n  </f7-list-item>\n</f7-list>\nInputs + Additional Info\n<f7-list no-hairlines-md>\n  <f7-list-item>\n    <f7-input type=\"text\" placeholder=\"Your name\" info=\"Full name please\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-input type=\"password\" placeholder=\"Your password\" info=\"8 characters minimum\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-input type=\"email\" placeholder=\"Your e-mail\" info=\"Your work e-mail address\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-input type=\"url\" placeholder=\"URL\" info=\"Your website URL\" clear-button></f7-input>\n  </f7-list-item>\n</f7-list>\nOnly Inputs Inset\n<f7-list inset>\n  <f7-list-item>\n    <f7-input type=\"text\" placeholder=\"Your name\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-input type=\"password\" placeholder=\"Your password\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-input type=\"email\" placeholder=\"Your e-mail\" clear-button></f7-input>\n  </f7-list-item>\n\n  <f7-list-item>\n    <f7-input type=\"url\" placeholder=\"URL\" clear-button></f7-input>\n  </f7-list-item>\n</f7-list>\n<code>## 22.0 Link Vue Component</code>\nNavigation Link\n<f7-link href=\"/about/\">About</f7-link>\n\n<!-- Renders to: -->\n\n<a href=\"/about/\" class=\"link\">About</a>\nBack Navigation Link\n<f7-link back>Back</f7-link>\n\n<!-- Renders to: -->\n\n<a href=\"#\" class=\"link back\">Back</a>\nWith Router Parameters\n<f7-link href=\"/about/\" :animate=\"false\" :ignore-cache=\"true\">About</f7-link>\n\n<!-- Renders to: -->\n\n<a href=\"/about/\" class=\"link\" data-animate=\"false\" data-ignore-cache=\"true\">About</a>\nExternal Link\n<f7-link href=\"http://google.com\" external>Google</f7-link>\n\n<!-- Renders to: -->\n\n<a href=\"http://google.com\" class=\"link external\">Google</a>\nTab Link\n<!-- Tabs -->\n<f7-tabs>\n  <f7-tab id=\"tab-1\" tab-active>Tab 1</f7-tab>\n  <f7-tab id=\"tab-1\">Tab 2</f7-tab>\n</f7-tabs>\n<!-- Switch Between Tabs -->\n<f7-link tab-link=\"#tab-1\" tab-link-active>Show Tab 1</f7-link>\n<f7-link tab-link=\"#tab-2\">Show Tab 2</f7-link>\n\n<!-- Renders to: -->\n\n<!-- Tabs -->\n<div class=\"tabs\">\n  <div class=\"tab tab-active\" id=\"tab-1\">Tab 1</div>\n  <div class=\"tab\" id=\"tab-2\">Tab 2</div>\n</div>\n<!-- Switch Between Tabs -->\n<a href=\"#\" data-tab=\"#tab-1\" class=\"tab-link tab-link-active\">Show Tab 1</a>\n<a href=\"#\" data-tab=\"#tab-2\" class=\"tab-link\">Show Tab 2</a>\nRoutable Tabs\n<!-- Tabs -->\n<f7-tabs>\n  <f7-tab id=\"tab-1\"></f7-tab>\n  <f7-tab id=\"tab-2\"></f7-tab>\n</f7-tabs>\n<!-- Switch Between Tabs -->\n<f7-link tab-link route-tab-id=\"tab-1\" href=\"/tabs/\">Show Tab 1</f7-link>\n<f7-link tab-link route-tab-id=\"tab-2\" href=\"/tabs/tab-2/\">Show Tab 2</f7-link>\n\n<!-- Renders to: -->\n\n<!-- Tabs -->\n<div class=\"tabs\">\n  <div class=\"tab\" id=\"tab-1\"></div>\n  <div class=\"tab\" id=\"tab-2\"></div>\n</div>\n<!-- Switch Between Tabs -->\n<a href=\"/tabs/\" class=\"tab-link\" data-route-tab-id=\"tab-1\">Show Tab 1</a>\n<a href=\"/tabs/tab-2/\" class=\"tab-link\" data-route-tab-id=\"tab-2\">Show Tab 2</a>\n\nOpen And Close Panel\n<f7-link panel-open=\"left\">Open Left Panel</f7-link>\n<f7-link panel-close>Close Panel</f7-link>\n\n<!-- Renders to: -->\n\n<a href=\"#\" data-panel=\"left\" class=\"link panel-open\">Open Left Panel</a>\n<a href=\"#\" class=\"link panel-close\">Close Panel</a>\nOpen and Close Popup\n<f7-link popup-open=\"#my-popup\">Open Popup</f7-link>\n<f7-link popup-close=\"#my-popup\">Close Popup</f7-link>\n\n<!-- Renders to: -->\n\n<a href=\"#\" data-popup=\"#my-popup\" class=\"link popup-open\">Open Popup</a>\n<a href=\"#\" data-popup=\"#my-popup\" class=\"link popup-close\">Close Popup</a>\nWith Icon &amp; Color\n<f7-link icon-f7=\"home\" text=\"Home\" color=\"red\"></f7-link>\n\n<!-- Renders to: -->\n\n<a href=\"#\" class=\"link color-red\">\n  <i class=\"icon f7-icons\">home</i>\n  <span>Home</span>\n</a>\n<code>## 23.0 List Vue Component</code>\nMinimal Layout\n<f7-list>\n  <f7-list-item title=\"Item 1\"></f7-list-item>\n  <f7-list-item title=\"Item 2\"></f7-list-item>\n</f7-list>\nRenders to:\n<div class=\"list\">\n  <ul>\n    <li class=\"item-content\">\n      <div class=\"item-inner\">\n        <div class=\"item-title\">Item 1</div>\n      </div>\n    </li>\n    <li class=\"item-content\">\n      <div class=\"item-inner\">\n        <div class=\"item-title\">Item 2</div>\n      </div>\n    </li>\n  </ul>\n</div>\nWith Groups\n<f7-list>\n  <f7-list-group>\n    <f7-list-item title=\"Group 1\" group-title></f7-list-item>\n    <f7-list-item title=\"Item 1\"></f7-list-item>\n    <f7-list-item title=\"Item 2\"></f7-list-item>\n  </f7-list-group>\n  <f7-list-group>\n    <f7-list-item title=\"Group 2\" group-title></f7-list-item>\n    <f7-list-item title=\"Item 1\"></f7-list-item>\n    <f7-list-item title=\"Item 2\"></f7-list-item>\n  </f7-list-group>\n</f7-list>\nRenders to:\n<div class=\"list\">\n  <div class=\"list-group\">\n    <ul>\n      <li class=\"list-group-title\"><span>Group 1</span></li>\n      <li class=\"item-content\">\n        <div class=\"item-inner\">\n          <div class=\"item-title\">Item 1</div>\n        </div>\n      </li>\n      <li class=\"item-content\">\n        <div class=\"item-inner\">\n          <div class=\"item-title\">Item 2</div>\n        </div>\n      </li>\n    </ul>\n  </div>\n  <div class=\"list-group\">\n    <ul>\n      <li class=\"list-group-title\"><span>Group 2</span></li>\n      ...\n    </ul>\n  </div>\n</div>\nMedia List\n<f7-list media-list>\n  <f7-list-item title=\"Item 1\" subtitle=\"Subtitle 1\" text=\"Item 1 Text\"></f7-list-item>\n  <f7-list-item title=\"Item 1\" subtitle=\"Subtitle 2\" text=\"Item 2 Text\"></f7-list-item>\n</f7-list>\nRenders to:\n<div class=\"list media-list\">\n  <ul>\n    <li class=\"item-content\">\n      <div class=\"item-inner\">\n        <div class=\"item-title-row\">\n          <div class=\"item-title\">Item 1</div>\n        </div>\n        <div class=\"item-subtitle\">Subtitle 1</div>\n        <div class=\"item-text\">Item 1 Text</div>\n      </div>\n    </li>\n    <li class=\"item-content\">\n      <div class=\"item-inner\">\n        <div class=\"item-title-row\">\n          <div class=\"item-title\">Item 1</div>\n        </div>\n        <div class=\"item-subtitle\">Subtitle 1</div>\n        <div class=\"item-text\">Item 1 Text</div>\n      </div>\n    </li>\n  </ul>\n</div>\nWith Block Footer\n<f7-list>\n  <f7-list-item title=\"Item 1\"></f7-list-item>\n  <f7-list-item title=\"Item 2\"></f7-list-item>\n  <f7-block-footer>List Footer</f7-block-footer>\n</f7-list>\nRenders to:\n<div class=\"list\">\n  <ul>\n    <li class=\"item-content\">\n      <div class=\"item-inner\">\n        <div class=\"item-title\">Item 1</div>\n      </div>\n    </li>\n    <li class=\"item-content\">\n      <div class=\"item-inner\">\n        <div class=\"item-title\">Item 2</div>\n      </div>\n    </li>\n  </ul>\n  <div class=\"block-footer\">List Footer</div>\n</div>\n<code>## 24.0 List Item Vue Component</code>\n<f7-list media-list>\n  <f7-list-item\n    link=\"/home/\"\n    title=\"Item Title\"\n    subtitle=\"Item Subtitle\"\n    text=\"Text\"\n    after=\"Read more\"\n    >\n      <img src=\"path-to-my-image.jpg\" slot=\"media\">\n      <div slot=\"root-start\">Root Start</div>\n      <div slot=\"root\">Root End</div>\n      <div slot=\"content-start\">Content Start</div>\n      <div slot=\"content\">Content End</div>\n      <div slot=\"media-start\">Media Start</div>\n      <div slot=\"media\">Media</div>\n      <span slot=\"after-start\">After Start</span>\n      <span slot=\"after\">After End</span>\n      <div slot=\"inner-start\">Inner Start</div>\n      <div slot=\"inner\">Inner End</div>\n      <div slot=\"before-title\">Before Title</div>\n      <div slot=\"after-title\">After Title</div>\n  </f7-list-item>\n</f7-list>\n\n<!-- Renders to: -->\n\n<div class=\"list media-list\">\n  <ul>\n    <li>\n      <div>Root Start</div>\n      <a href=\"/home/\" class=\"item-link\">\n        <div class=\"item-content\">\n          <div>Content Start</div>\n          <div class=\"item-media\">\n            <img src=\"path-to-my-image.jpg\">\n          </div>\n          <div class=\"item-inner\">\n            <div>Inner Start</div>\n            <div class=\"item-title-row\">\n              <div>Before Title</div>\n              <div class=\"item-title\">Item Title</div>\n              <div>After Title</div>\n              <div class=\"item-after\">\n                <span>After Start</span>\n                <span>Read more</span>\n                <span>After End</span>\n              </div>\n            </div>\n            <div class=\"item-subtitle\">Item Subtitle</div>\n            <div class=\"item-text\">Text</div>\n            <div>Inner End</div>\n          </div>\n          <div>Content End</div>\n        </div>\n      </a>\n      <div>Root End</div>\n    </li>\n  </ul>\n</div>\nExamples\nMinimal Layout\n<f7-list>\n  <f7-list-item title=\"Item 1\"></f7-list-item>\n  <f7-list-item title=\"Item 2\"></f7-list-item>\n</f7-list>\n<!-- Renders to: -->\n\n\n<div class=\"list\">\n  <ul>\n    <li class=\"item-content\">\n      <div class=\"item-inner\">\n        <div class=\"item-title\">Item 1</div>\n      </div>\n    </li>\n    <li class=\"item-content\">\n      <div class=\"item-inner\">\n        <div class=\"item-title\">Item 2</div>\n      </div>\n    </li>\n  </ul>\n</div>\nWith Badges And Divider\n<f7-list>\n  <f7-list-item title=\"Item 1\" badge=\"5\" badge-color=\"red\"></f7-list-item>\n  <f7-list-item title=\"Item 2\" badge=\"3\" badge-color=\"red\"></f7-list-item>\n  <f7-list-item title=\"Items Divider\" divider></f7-list-item>\n  <f7-list-item title=\"Item 3\"></f7-list-item>\n  ...\n</f7-list>\n\n<!-- Renders to: -->\n\n<div class=\"list\">\n  <ul>\n    <li class=\"item-content\">\n      <div class=\"item-inner\">\n        <div class=\"item-title\">Item 1</div>\n        <div class=\"item-after\">\n          <span class=\"badge color-red\">5</span>\n        </div>\n      </div>\n    </li>\n    <li class=\"item-content\">\n      <div class=\"item-inner\">\n        <div class=\"item-title\">Item 2</div>\n        <div class=\"item-after\">\n          <span class=\"badge color-red\">3</span>\n        </div>\n      </div>\n    </li>\n    <li class=\"item-divider\"><span>Items Divider</span></li>\n    <li class=\"item-content\">\n      <div class=\"item-inner\">\n        <div class=\"item-title\">Item 3</div>\n      </div>\n    </li>\n  </ul>\n</div>\nLinks Items\n<f7-list>\n  <f7-list-item link=\"/about/\" title=\"About\"></f7-list-item>\n  <f7-list-item link=\"/contacts/\" title=\"Contacts\"></f7-list-item>\n</f7-list>\n\n<!-- Renders to: -->\n\n<div class=\"list\">\n  <ul>\n    <li>\n      <a href=\"/about/\" class=\"item-link\">\n        <div class=\"item-content\">\n          <div class=\"item-inner\">\n            <div class=\"item-title\">About</div>\n          </div>\n        </div>\n      </a>\n    </li>\n    <li>\n      <a href=\"/contacts/\" class=\"item-link\">\n        <div class=\"item-content\">\n          <div class=\"item-inner\">\n            <div class=\"item-title\">Contacts</div>\n          </div>\n        </div>\n      </a>\n    </li>\n  </ul>\n</div>\nMedia List Items\n<f7-list media-list>\n  <f7-list-item\n    link=\"/item/\"\n    media=\"path/to/image.jpg\"\n    title=\"Item Title\"\n    subtitle=\"Item Subtitle\"\n    text=\"Some text\"\n    after=\"Read more\"\n  ></f7-list-item>\n</f7-list>\n\n<!-- Renders to: -->\n\n<div class=\"list media-list\">\n  <ul>\n    <li>\n      <a href=\"/item/\" class=\"item-link\">\n        <div class=\"item-content\">\n          <div class=\"item-media\">\n            <img src=\"path/to/image.jpg\">\n          </div>\n          <div class=\"item-inner\">\n            <div class=\"item-title-row\">\n              <div class=\"item-title\">Item Title</div>\n              <div class=\"item-after\">Read more</div>\n            </div>\n            <div class=\"item-subtitle\">Item Subtitle</div>\n            <div class=\"item-text\">Some text</div>\n          </div>\n        </div>\n      </a>\n    </li>\n  </ul>\n</div>\nCustom Table-like Elements\n<f7-list-item>\n  <f7-list-item-cell>\n    <f7-list-item-row>\n      <f7-list-item-cell>Cell 1-1</f7-list-item-cell>\n      <f7-list-item-cell>Cell 1-2</f7-list-item-cell>\n      <f7-list-item-cell>Cell 1-3</f7-list-item-cell>\n    </f7-list-item-row>\n    <f7-list-item-row>\n      <f7-list-item-cell>Cell 2-1</f7-list-item-cell>\n      <f7-list-item-cell>Cell 2-2</f7-list-item-cell>\n    </f7-list-item-row>\n    <f7-list-item-row>\n      <f7-list-item-cell>Cell 3-1</f7-list-item-cell>\n      <f7-list-item-cell>\n        <f7-list-item-row>\n          Cell 3-2\n        </f7-list-item-row>\n        <f7-list-item-row>\n          Cell 3-3\n        </f7-list-item-row>\n      </f7-list-item-cell>\n    </f7-list-item-row>\n  </f7-list-item-cell>\n</f7-list-item>\n<code>## 25.0 List Button Vue Component</code>\nMinimal Layout\n<f7-list>\n  <f7-list-button>Button 1</f7-list-button>\n  <f7-list-button>Button 2</f7-list-button>\n</f7-list>\n\n<!-- Renders to: -->\n\n<div class=\"list\">\n  <ul>\n    <li>\n      <a href=\"#\" class=\"item-link list-button\">Button 1</a>\n    </li>\n    <li>\n      <a href=\"#\" class=\"item-link list-button\">Button 2</a>\n    </li>\n  </ul>\n</div>\nColor Buttons\n<f7-list>\n  <f7-list-button color=\"red\">Red Button</f7-list-button>\n  <f7-list-button color=\"green\">Green Button</f7-list-button>\n</f7-list>\nControl Buttons in Inset List\n<f7-list inset>\n  <f7-list-button panel-open=\"left\">Open Panel</f7-list-button>\n  <f7-list-button popup-open=\"#my-popup\">Open Popup</f7-list-button>\n</f7-list>\n<code>## 26.0 List Index Vue Component</code>\n<f7-page>\n  <f7-navbar title=\"List Index\" back-link=\"Back\"></f7-navbar>\n\n  <!-- List Index -->\n  <f7-list-index\n    indexes=\"auto\"\n    list-el=\"#contacts-list\"\n    :scroll-list=\"true\"\n    :label=\"true\"\n    @listindex:select=\"onIndexSelect\"\n  ></f7-list-index>\n\n  <!-- Contacts list -->\n  <f7-list contacts-list id=\"contacts-list\">\n    <f7-list-group>\n      <f7-list-item title=\"A\" group-title></f7-list-item>\n      <f7-list-item title=\"Aaron\"></f7-list-item>\n      <f7-list-item title=\"Adam\"></f7-list-item>\n      <f7-list-item title=\"Aiden\"></f7-list-item>\n      ...\n    </f7-list-group>\n    <f7-list-group>\n      <f7-list-item title=\"B\" group-title></f7-list-item>\n      <f7-list-item title=\"Benjamin\"></f7-list-item>\n      <f7-list-item title=\"Blake\"></f7-list-item>\n      <f7-list-item title=\"Bobby\"></f7-list-item>\n    </f7-list-group>\n    <f7-list-group>\n      <f7-list-item title=\"C\" group-title></f7-list-item>\n      <f7-list-item title=\"Caleb\"></f7-list-item>\n      <f7-list-item title=\"Callum\"></f7-list-item>\n      <f7-list-item title=\"Cameron\"></f7-list-item>\n      ...\n    </f7-list-group>\n    ...\n    <f7-list-group>\n      <f7-list-item title=\"Z\" group-title></f7-list-item>\n      <f7-list-item title=\"Zachary\"></f7-list-item>\n    </f7-list-group>\n  </f7-list>\n</f7-page>\n<code>## 27.0 Login Screen Vue Component</code>\nExamples\n<!-- Login Screen -->\n<f7-login-screen>\n  <!-- Login Screen title -->\n  <f7-login-screen-title>Title</f7-login-screen-title>\n  <!-- Login Screen content goes here -->\n</f7-login-screen>\nRenders to:\n<!-- Login Screen -->\n<div class=\"login-screen\">\n  <!-- Login Screen title -->\n  <div class=\"login-screen-title\">Title</div>\n  <!-- Login Screen content goes here -->\n</div>\nFull Screen Layout\nAccording to Login Screen Layout here is the recommended Login Screen layout structure:\n<f7-login-screen>\n  <f7-view>\n    <f7-page login-screen>\n      <f7-login-screen-title>My App</f7-login-screen-title>\n      <f7-list form>\n        <f7-list-item>\n          <f7-label>Username</f7-label>\n          <f7-input type=\"text\" placeholder=\"Your username\"></f7-input>\n        </f7-list-item>\n        <f7-list-item>\n          <f7-label>Password</f7-label>\n          <f7-input type=\"password\" placeholder=\"Your password\"></f7-input>\n        </f7-list-item>\n      </f7-list>\n      <f7-list>\n        <f7-list-button login-screen-close>Sign In</f7-list-button>\n        <f7-block-footer>Click Sign In to close Login Screen</f7-block-footer>\n      </f7-list>\n    </f7-page>\n  </f7-view>\n</f7-login-screen>\nWhere:\n<f7-login-screen-title>My App</f7-login-screen-title> - additional component with Login Screen title\n<f7-page login-screen> - additional boolean login-screen property on page component to add extra styling to page form elements\n<code>## 28.0 Messagebar Vue Component</code>\nMessagebar Vue component has additional slots for custom elements:\ndefault - element will be inserted in the end of <div class=\"toolbar-inner\"> \nbefore-area - element will be inserted right before textarea. Messagebar attachments go here\nafter-area - element will be inserted right after textarea\nsend-link - element will be inserted inside of send link\nbefore-inner - element will be inserted right before <div class=\"toolbar-inner\"> \nafter-inner - element will be inserted right after <div class=\"toolbar-inner\"> \ninner-start - element will be inserted in the beginning of <div class=\"toolbar-inner\"> \ninner-end - element will be inserted in the end of <div class=\"toolbar-inner\">default slot\n<f7-messagebar placeholder=\"Message\" @submit=\"onSubmit\">\n  <div slot=\"before-inner\">Before inner</div>\n  <div slot=\"after-inner\">After inner</div>\n  <div slot=\"before-area\">Before textarea</div>\n  <div slot=\"after-area\">After textarea</div>\n  <f7-icon if-ios=\"f7:arrow_up_fill\" if-md=\"material:send\" slot=\"send-link\"></f7-icon>\n  <div>Default slot</div>\n</f7-messagebar>\nRenders to:\n<div class=\"toolbar messagebar\">\n  <div>Before inner</div>\n  <div class=\"toolbar-inner\">\n    <div class=\"messagebar-area\">\n      <div>Before textarea</div>\n      <textarea placeholder=\"Message\"></textarea>\n      <div>After textarea</div>\n    </div>\n    <a href=\"#\" class=\"link\"><i class=\"icon f7-icons\">arrow_up_fill</i></a>\n    <div>Default slot</div>\n  </div>\n  <div>After inner</div>\n</div>\nAccess To Messagebar Instance\nIf you use automatic initalization to init Messagebar (with init:true prop) and need to use its Methods and Properties you can access its initialized instance by accessing .f7Messagebar component&#39;s property.\nExamples\n<f7-messagebar placeholder=\"Message\" send-link=\"Send\" @submit=\"onSubmit\"></f7-messagebar>\n\n<!-- Renders to: -->\n\n<div class=\"toolbar messagebar\">\n  <div class=\"toolbar-inner\">\n    <div class=\"messagebar-area\">\n      <textarea placeholder=\"Message\"></textarea>\n    </div>\n    <a href=\"#\" class=\"link\">Send</a>\n  </div>\n</div>\nWith Sheet And Attachments\n<template>\n  <f7-page>\n    <f7-navbar title=\"Messsages\" back-link=\"Back\"></f7-navbar>\n\n    <f7-messagebar\n      :placeholder=\"placeholder\"\n      ref=\"messagebar\"\n      :attachmentsVisible=\"attachmentsVisible\"\n      :sheetVisible=\"sheetVisible\"\n    >\n      <!-- Link to toggle Sheet -->\n      <f7-link\n        icon-if-ios=\"f7:camera_fill\"\n        icon-if-md=\"material:camera_alt\"\n        slot=\"inner-start\"\n        @click=\"sheetVisible = !sheetVisible\"\n      ></f7-link>\n      <!-- Send Message Link -->\n      <f7-link\n        icon-if-ios=\"f7:arrow_up_fill\"\n        icon-if-md=\"material:send\"\n        slot=\"inner-end\"\n        @click=\"sendMessage\"\n      ></f7-link>\n      <!-- Attachments -->\n      <f7-messagebar-attachments>\n        <f7-messagebar-attachment\n          v-for=\"(image, index) in attachments\"\n          :key=\"index\"\n          :image=\"image\"\n          @attachment:delete=\"deleteAttachment(image)\"\n        ></f7-messagebar-attachment>\n      </f7-messagebar-attachments>\n      <!-- Sheet -->\n      <f7-messagebar-sheet>\n        <f7-messagebar-sheet-image\n          v-for=\"(image, index) in images\"\n          :key=\"index\"\n          :image=\"image\"\n          :checked=\"attachments.indexOf(image) >= 0\"\n          @change=\"handleAttachment\"\n        ></f7-messagebar-sheet-image>\n      </f7-messagebar-sheet>\n    </f7-messagebar>\n\n    <f7-messages>\n      ...\n    </f7-messages>\n  </f7-page>\n</template>\n<script>\n  export default {\n    data() {\n      return {\n        attachments: [],\n        sheetVisible: false,\n        // Sheet images available\n        images: [\n          &#39;http://lorempixel.com/300/300/cats/1/&#39;,\n          &#39;http://lorempixel.com/200/300/cats/2/&#39;,\n          &#39;http://lorempixel.com/400/300/cats/3/&#39;,\n          &#39;http://lorempixel.com/300/150/cats/4/&#39;,\n          &#39;http://lorempixel.com/150/300/cats/5/&#39;,\n          &#39;http://lorempixel.com/300/300/cats/6/&#39;,\n          &#39;http://lorempixel.com/300/300/cats/7/&#39;,\n          &#39;http://lorempixel.com/200/300/cats/8/&#39;,\n          &#39;http://lorempixel.com/400/300/cats/9/&#39;,\n          &#39;http://lorempixel.com/300/150/cats/10/&#39;,\n        ],\n      };\n    },\n    computed: {\n      attachmentsVisible() {\n        const self = this;\n        return self.attachments.length &gt; 0;\n      },\n      placeholder() {\n        const self = this;\n        return self.attachments.length &gt; 0 ? &#39;Add comment or Send&#39; : &#39;Message&#39;;\n      },\n    },\n    methods: {\n      deleteAttachment(image) {\n        const self = this;\n        const index = self.attachments.indexOf(image);\n        self.attachments.splice(index, 1)[0]; // eslint-disable-line\n      },\n      handleAttachment(e) {\n        const self = this;\n        const index = self.$$(e.target).parents(&#39;label.checkbox&#39;).index();\n        const image = self.images[index];\n        if (e.target.checked) {\n          // Add to attachments\n          self.attachments.unshift(image);\n        } else {\n          // Remove from attachments\n          self.attachments.splice(self.attachments.indexOf(image), 1);\n        }\n      },\n      sendMessage() {\n        const self = this;\n        const text = self.messagebar.getValue().replace(/\\n/g, &#39;<br>&#39;).trim();\n        // the rest of logic to send a message\n      },\n      onF7Ready() {\n        const self = this;\n        self.messagebar = self.$refs.messagebar.f7Messagebar;\n      },\n    },\n  };\n</script>\n<code>## 29.0 Messages Component</code>\n<f7-message\n  type=\"sent\"\n  text=\"Hello World\"\n  name=\"John Doe\"\n  avatar=\"path/to/image.jpg\"\n>\n  <div slot=\"start\">Start</div>\n  <div slot=\"end\">End</div>\n  <div slot=\"content-start\">Content Start</div>\n  <div slot=\"content-end\">Content End</div>\n  <div slot=\"bubble-start\">Bubble Start</div>\n  <div slot=\"bubble-end\">Bubble End</div>\n</f7-message>\n\n<!-- Renders to: -->\n\n<div class=\"message message-sent\">\n  <div>Start</div>\n  <div class=\"message-avatar\" style=\"background-image: url(path/to/image.jpg);\"></div>\n  <div class=\"message-content\">\n    <div>Content Start</div>\n    <div class=\"message-name\">John Doe</div>\n    <div class=\"message-bubble\">\n      <div>Bubble Start</div>\n      <div class=\"message-text\">Hello World</div>\n      <div>Bubble End</div>\n    </div>\n    <div>Content End</div>\n  </div>\n  <div>End</div>\n</div>\n<code>## 30.0 Navbar Vue Component</code>\n<f7-navbar title=\"My App\">\n  <div slot=\"before-inner\">Before Inner</div>\n  <div slot=\"after-inner\">After Inner</div>\n  <div>Default slot</div>\n</f7-navbar>\n\n<!-- Renders to: -->\n\n<div class=\"navbar\">\n  <div>Before Inner</div>\n  <div class=\"navbar-inner\">\n    <div class=\"title\">My App</div>\n    <div>Default slot</div>\n  </div>\n  <div>After Inner</div>\n</div>\nExamples\nMinimal layout\n<f7-navbar title=\"My App\"></f7-navbar>\n\n<!-- Renders to: -->\n\n<div class=\"navbar\">\n  <div class=\"navbar-inner sliding\">\n    <div class=\"title\">My App</div>\n  </div>\n</div>\nMinimal layout with back link\n<f7-navbar title=\"My App\" back-link=\"Back\"></f7-navbar>\n\n<!-- Renders to: -->\n\n<div class=\"navbar\">\n  <div class=\"navbar-inner sliding\">\n    <div class=\"left\">\n      <a href=\"#\" class=\"back link\">\n        <i class=\"icon icon-back\"></i>\n        <!-- Back link text rendered only for iOS theme -->\n        <span>Back</span>\n      </a>\n    </div>\n    <div class=\"title\">My App</div>\n  </div>\n</div>\nWithout &quot;sliding&quot; transition effect (affects iOS theme only)\n<f7-navbar title=\"My App\" back-link=\"Back\" :sliding=\"false\"></f7-navbar>\n\n<!-- Renders to: -->\n\n<div class=\"navbar\">\n  <div class=\"navbar-inner\">\n    <div class=\"left\">\n      <a href=\"#\" class=\"back link\">\n        <i class=\"icon icon-back\"></i>\n        <!-- Back link text rendered only for iOS theme -->\n        <span>Back</span>\n      </a>\n    </div>\n    <div class=\"title\">My App</div>\n  </div>\n</div>\nWith additional right link to open right panel\n<f7-navbar title=\"My App\" back-link=\"Back\">\n  <f7-nav-right>\n    <f7-link icon=\"icon-bars\" panel-open=\"right\"></f7-link>\n  </f7-nav-right>\n</f7-navbar>\n\n<!-- Renders to: -->\n\n<div class=\"navbar\">\n  <div class=\"navbar-inner sliding\">\n    <div class=\"left\">\n      <a href=\"#\" class=\"back link\">\n        <i class=\"icon icon-back\"></i>\n        <!-- Back link text rendered only for iOS theme -->\n        <span>Back</span>\n      </a>\n    </div>\n    <div class=\"title\">My App</div>\n    <div class=\"right\">\n      <a href=\"#\" class=\"link panel-open\" data-panel=\"right\">\n        <i class=\"icon icon-bars\"></i>\n      </a>\n    </div>\n  </div>\n</div>\nAll three parts\n<f7-navbar>\n  <f7-nav-left back-link=\"Back\"></f7-nav-left>\n  <f7-nav-title>My App</f7-nav-title>\n  <f7-nav-right>\n    <f7-link icon=\"icon-bars\" panel-open=\"right\"></f7-link>\n  </f7-nav-right>\n</f7-navbar>\n\n<!-- Renders to: -->\n\n<div class=\"navbar\">\n  <div class=\"navbar-inner sliding\">\n    <div class=\"left\">\n      <a href=\"#\" class=\"back link\">\n        <i class=\"icon icon-back\"></i>\n        <!-- Back link text rendered only for iOS theme -->\n        <span>Back</span>\n      </a>\n    </div>\n    <div class=\"title\">My App</div>\n    <div class=\"right\">\n      <a href=\"#\" class=\"link panel-open\" data-panel=\"right\">\n        <i class=\"icon icon-bars\"></i>\n      </a>\n    </div>\n  </div>\n</div>\nFull custom layout\n<f7-navbar>\n  <f7-nav-left>\n    <f7-link>Left Link</f7-link>\n  </f7-nav-left>\n  <f7-nav-title>My App</f7-nav-title>\n  <f7-nav-right>\n    <f7-link>Right Link</f7-link>\n  </f7-nav-right>\n</f7-navbar>\n\n<!-- Renders to: -->\n\n<div class=\"navbar\">\n  <div class=\"navbar-inner sliding\">\n    <div class=\"left\">\n      <a href=\"#\" class=\"link\">Left Link</a>\n    </div>\n    <div class=\"title\">My App</div>\n    <div class=\"right\">\n      <a href=\"#\" class=\"link\">Right Link</a>\n    </div>\n  </div>\n</div>\n<code>## 31.0 Page Vue Component</code>\n<f7-page>\n  <div slot=\"fixed\">Fixed element</div>\n  <p>Page content goes here</p>\n</f7-page>\n\n<!-- Renders to: -->\n\n<div class=\"page\">\n  <div>Fixed element</div>\n  <div class=\"page-content\">\n    <p>Page content goes here</p>\n  </div>\n</div>\nExamples\nMinimal layout\n<f7-page name=\"home\">\n  <p>Page content</p>\n</f7-page>\n\n<!-- Renders to: -->\n\n<div class=\"page\" data-name=\"home\">\n  <div class=\"page-content\">\n    <p>Page content</p>\n  </div>\n</div>\nWith Navbar\n<f7-page name=\"home\">\n  <f7-navbar title=\"My App\"></f7-navbar>\n  <p>Page content</p>\n</f7-page>\n\n<!-- Renders to: -->\n\n<div class=\"page\" data-name=\"home\">\n  <div class=\"navbar\">\n    <div class=\"navbar-inner sliding\">\n      <div class=\"title\">My App</div>\n    </div>\n  </div>\n  <div class=\"page-content\">\n    <p>Page content</p>\n  </div>\n</div>\nPull To Refresh\n<f7-page ptr @ptr:refresh=\"onRefresh\">\n  <f7-navbar title=\"My App\"></f7-navbar>\n  <p>Page content</p>\n</f7-page>\n\n<!-- Renders to: -->\n\n<div class=\"page\">\n  <div class=\"navbar\">\n    <div class=\"navbar-inner sliding\">\n      <div class=\"title\">My App</div>\n    </div>\n  </div>\n  <div class=\"page-content ptr-content\">\n    <div class=\"ptr-preloader\">\n      <div class=\"preloader\"></div>\n      <div class=\"ptr-arrow\"></div>\n    </div>\n    <p>Page content</p>\n  </div>\n</div>\nInfinite Scroll\n<f7-page infinite @infinite=\"onInfiniteScroll\">\n  <f7-navbar title=\"My App\"></f7-navbar>\n  <p>Page content</p>\n</f7-page>\n\n<!-- Renders to: -->\n\n<div class=\"page\">\n  <div class=\"navbar\">\n    <div class=\"navbar-inner sliding\">\n      <div class=\"title\">My App</div>\n    </div>\n  </div>\n  <div class=\"page-content infinite-scroll-content\">\n    <p>Page content</p>\n    <div class=\"preloader infinite-scroll-preloader\"></div>\n  </div>\n</div>\nPage Content as Tabs\n<f7-page tabs :page-content=\"false\">\n  <f7-navbar title=\"My App\"></f7-navbar>\n  <f7-page-content tab tab-active id=\"tab-1\">Tab 1 Content ...</f7-page-content>\n  <f7-page-content tab id=\"tab-2\">Tab 2 Content ...</f7-page-content>\n  <f7-page-content tab id=\"tab-3\">Tab 3 Content ...</f7-page-content>\n</f7-page>\n\n<!-- Renders to: -->\n\n<div class=\"page\">\n  <div class=\"navbar\">\n    <div class=\"navbar-inner sliding\">\n      <div class=\"title\">My App</div>\n    </div>\n  </div>\n  <div id=\"tab-1\" class=\"page-content tab tab-active\">\n    Tab 1 Content ...\n  </div>\n  <div id=\"tab-2\" class=\"page-content tab\">\n    Tab 2 Content ...\n  </div>\n  <div id=\"tab-3\" class=\"page-content tab\">\n    Tab 3 Content ...\n  </div>\n</div>\n<code>## 32.0 Panel Vue Component</code>\n!-- Left Panel with Reveal effect --&gt;\n<f7-panel left reveal>\n  <!-- Left panel content goes here -->\n</f7-panel>\n\n<!-- Right Panel with Cover effect and dark layout theme -->\n<f7-panel right cover class=\"theme-dark\">\n  <!-- Right panel content goes here -->\n</f7-panel>\nRenders to:\n<div class=\"panel panel-left panel-reveal\">\n  ...\n</div>\n<div class=\"panel panel-right panel-cover theme-dark\">\n  ...\n</div>\n<code>## 33.0 Photo Browser Vue Component</code>\nHere is how it can be used in Vue component and how to control it:\n<template>\n\n  <!-- Photo Browser -->\n  <f7-photo-browser\n    ref=\"pb\"\n    :photos=\"photos\"\n    theme=\"dark\"\n    @open=\"onOpen\"\n  ></f7-photo-browser>\n\n  <!-- Link To Open PB -->\n  <f7-link @click=\"openPhotoBrowser\">Photos</f7-link>\n\n</template>\n\n<script>\n  export default {\n    data: function () {\n      return {\n        photos: [\n          {\n            url: &#39;path/to/picture-1.jpg&#39;,\n            caption: &#39;Picture 1&#39;\n          },\n          {\n            url: &#39;path/to/picture-2.jpg&#39;,\n            caption: &#39;Picture 2&#39;\n          }\n        ]\n      }\n    },\n    methods: {\n      openPhotoBrowser: function () {\n        this.$refs.pb.open();\n      },\n      onOpen: function () {\n        console.log(&#39;Photo Browser is opened&#39;)\n      }\n    }\n  }\n</script>\n<code>## 34.0 Popover Vue Component</code>\nExamples\n<!-- Popover -->\n<f7-popover>\n  <!-- Popover content goes here -->\n</f7-popover>\nRenders to:\n<!-- Popover -->\n<div class=\"popover\">\n  <div class=\"popover-angle\"></div>\n  <div class=\"popover-inner\">\n    <!-- Popover content goes here -->\n  </div>\n</div>\n<code>## 35.0 Popup Vue Component</code>\n<!-- Popup -->\n<f7-popup>\n  <!-- Popup content goes here -->\n</f7-popup>\n\n<!-- Popup which is also fullscreen on tablets -->\n<f7-popup tablet-fullscreen>\n  <!-- Popup content goes here -->\n</f7-popup>\nRenders to:\n<!-- Popup -->\n<div class=\"popup\">\n  <!-- Popup content goes here -->\n</div>\n\n<!-- Popup which is also fullscreen on tablets -->\n<p><div class=\"popup tablet-fullscreen\">\n  <!-- Popup content goes here -->\n</div>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x14",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "14",
            "time" : 1555228371611,
            "title" : "14.0 Card Vue Component",
            "update_at" : 1556488166377
          },
          "x15" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nExamples\n<!-- Preloader --></p>\n<p><f7-preloader></f7-preloader></p>\n<!-- Red preloader -->\n<p><f7-preloader color=\"red\"></f7-preloader></p>\n<!-- Blue with custom size -->\n<p><f7-preloader color=\"green\" size=\"44px\"></f7-preloader>\nRenders to:\n<!-- Preloader -->\n<span class=\"preloader\"></span></p>\n<!-- Red preloader -->\n<p><span class=\"preloader color-red\"></span></p>\n<!-- Blue with custom size -->\n<p><span class=\"preloader color-green\" style=\"width:44px; height:44px\"></span>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x15",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "15",
            "time" : 1555228371611,
            "title" : "36.0 Preloader / Spinner Vue Component",
            "update_at" : 1556488166377
          },
          "x16" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nExamples\n<!-- Determinate Progressbar --></p>\n<p><f7-progressbar :progress=\"20\"></f7-progressbar></p>\n<!-- Determinate Red Progressbar -->\n<p><f7-progressbar :progress=\"30\" color=\"red\"></f7-progressbar></p>\n<!-- Infinite Blue Progressbar -->\n<p><f7-progressbar infinite color=\"green\"></f7-progressbar></p>\n<!-- Infinite Multi-color Progressbar -->\n<p><f7-progressbar infinite color=\"multi\"></f7-progressbar>\nRenders to:\n<!-- Determinate Progressbar -->\n<span class=\"progressbar\" data-progress=\"20\"><span></span></span></p>\n<!-- Determinate Red Progressbar -->\n<p><span class=\"progressbar color-red\" data-progress=\"30\"><span></span></span></p>\n<!-- Infinite Blue Progressbar -->\n<p><span class=\"progressbar progressbar-infinite color-green\"><span></span></span></p>\n<!-- Infinite Multi-color Progressbar -->\n<p><span class=\"progressbar progressbar-infinite color-multi\"><span></span></span>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x16",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "16",
            "time" : 1555228371611,
            "title" : "37.0 Progressbar Vue Component",
            "update_at" : 1556488166377
          },
          "x17" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nRadios List\nRadios List is not a separate component, but just a particular case of using <f7-list>, <f7-list-item>.</p>\n<p><f7-list>\n  <!-- Additional \"radio\" prop to enable radio list item -->\n  <f7-list-item radio value=\"check_1\" name=\"demo-radio\" checked title=\"Radio 1\"></f7-list-item>\n  <f7-list-item radio value=\"check_2\" name=\"demo-radio\" title=\"Radio 2\"></f7-list-item>\n</f7-list>\nRadio v-model\nv-model is not supported on Radio vue component. Instead, just use the combination of checked property and @change event:</p>\n<template>\n  <f7-radio\n    name=\"fruit\"\n    value=\"bannana\"\n    :checked=\"fruit === 'bannana'\"\n    @change=\"fruit = $event.target.value\"\n  ></f7-radio>\n\n  <f7-radio\n    name=\"fruit\"\n    value=\"orange\"\n    :checked=\"fruit === 'orange'\"\n    @change=\"fruit = $event.target.value\"\n  ></f7-radio>\n\n  <f7-radio\n    name=\"fruit\"\n    value=\"apple\"\n    :checked=\"fruit === 'apple'\"\n    @change=\"fruit = $event.target.value\"\n  ></f7-radio>\n</template>\n<script>\n  export default {\n    data() {\n      return {\n        fruit: &#39;apple&#39;\n      };\n    },\n  };\n</script>\nExamples\n<!-- Inline radio -->\n<p>Lorem <f7-radio name=\"demo-radio-1\"></f7-radio> ipsum dolor sit amet, consectetur adipisicing elit. Alias beatae illo nihil aut eius commodi sint eveniet aliquid eligendi <f7-radio name=\"demo-radio-1\" checked></f7-radio> ad delectus impedit tempore nemo, enim vel praesentium consequatur nulla mollitia!</p>\n\n<!-- Radios List -->\n<f7-list>\n  <f7-list-item radio value=\"Books\" title=\"Books\" name=\"demo-radio-2\" checked></f7-list-item>\n  <f7-list-item radio value=\"Movies\" title=\"Movies\" name=\"demo-radio-2\"></f7-list-item>\n  <f7-list-item radio value=\"Food\" title=\"Food\" name=\"demo-radio-2\"></f7-list-item>\n  <f7-list-item radio value=\"Drinks\" title=\"Drinks\" name=\"demo-radio-2\"></f7-list-item>\n</f7-list>\n<code>## 39.0 Range Slider Vue Component</code>\n<!-- Default -->\n<f7-range\n  :min=\"0\"\n  :max=\"100\"\n  :step=\"1\"\n  :value=\"10\"\n></f7-range>\n\n<!-- Enable labels + color -->\n<f7-range\n  :min=\"0\"\n  :max=\"100\"\n  :step=\"1\"\n  :value=\"50\"\n  :label=\"true\"\n  color=\"orange\"\n></f7-range>\n\n<!-- Dual -->\n<f7-range\n  :min=\"0\"\n  :max=\"500\"\n  :step=\"1\"\n  :value=\"[100, 500]\"\n  :label=\"true\"\n  :dual=\"true\"\n  color=\"green\"\n></f7-range>\n<code>## 40.0 Searchbar Vue Component</code>\nWithout Slots:\n<f7-searchbar\n  disable-link-text=\"Cancel\"\n  placeholder=\"Search in items\"\n  :clear-button=\"true\"\n></f7-searchbar>\n\n<!-- Renders to: -->\n\n<form class=\"searchbar\">\n  <div class=\"searchbar-inner\">\n    <div class=\"searchbar-input-wrap\">\n      <input type=\"search\" placeholder=\"Search\">\n      <i class=\"searchbar-icon\"></i>\n      <span class=\"input-clear-button\"></span>\n    </div>\n    <span class=\"searchbar-disable-button\">Cancel</span>\n  </div>\n</form>\nWith Slots:\n<f7-searchbar\n  disable-link-text=\"Cancel\"\n  placeholder=\"Search in items\"\n  :clear-button=\"true\"\n>\n  <div slot=\"inner-start\">Inner Start</div>\n  <div slot=\"inner-end\">Inner End</div>\n  <div slot=\"input-wrap-start\">Input Wrap Start</div>\n  <div slot=\"input-wrap-end\">Input Wrap End</div>\n  <div slot=\"before-inner\">Before Inner</div>\n  <div slot=\"after-inner\">After Inner</div>\n</f7-searchbar>\n\n<!-- Renders to: -->\n\n<form class=\"searchbar\">\n  <div slot=\"before-inner\">Before Inner</div>\n  <div class=\"searchbar-inner\">\n    <div slot=\"inner-start\">Inner Start</div>\n    <div class=\"searchbar-input-wrap\">\n      <div slot=\"input-wrap-start\">Input Wrap Start</div>\n      <input type=\"search\" placeholder=\"Search\">\n      <i class=\"searchbar-icon\"></i>\n      <span class=\"input-clear-button\"></span>\n      <div slot=\"input-wrap-end\">Input Wrap End</div>\n    </div>\n    <span class=\"searchbar-disable-button\">Cancel</span>\n    <div slot=\"inner-end\">Inner End</div>\n  </div>\n  <div slot=\"after-inner\">After Inner</div>\n</form>\nAccess To Searchbar Instance\nIf you use automatic initalization to init Searchbar (with init:true prop) and need to use Searchbar API you can access its initialized instance by accessing .f7Searchbar component&#39;s property.\nExamples\nHere is how it can be used in Vue component with initialization\n<template>\n  <f7-page>\n\n    <!-- Searchbar -->\n    <f7-searchbar\n      disable-link-text=\"Cancel\"\n      search-container=\"#search-list\"\n      placeholder=\"Search in items\"\n      :clear-button=\"true\"\n      @searchbar:search=\"onSearch\"\n      @searchbar:enable=\"onEnable\"\n      @searchbar:disable=\"onDisable\"\n      @searchbar:clear=\"onClear\"\n    ></f7-searchbar>\n\n    <!-- Will be visible if there is no any results found, defined by \"searchbar-not-found\" class -->\n    <f7-list class=\"searchbar-not-found\">\n      <f7-list-item title=\"Nothing found\"></f7-list-item>\n    </f7-list>\n\n    <!-- Search through this list -->\n    <f7-list class=\"searchbar-found\" id=\"search-list\">\n      <f7-list-item v-for=\"item in items\" :title=\"'Item ' + item\"></f7-list-item>\n    </f7-list>\n\n  </f7-page>\n</template>\n\n<p><script>\n  export default {\n    data: function () {\n      return {\n        items: (function () {\n          var it = [];\n          for (var i = 0; i &lt; 100; i++) it.push(i+1);\n          return it;\n        })()\n      }\n    },\n    methods: {\n      onSearch: function (searchbar, query, previousQuery) {\n        console.log(&#39;search&#39;, query);\n      },\n      onClear: function (event) {\n        console.log(&#39;clear&#39;);\n      },\n      onEnable: function (event) {\n        console.log(&#39;enable&#39;);\n      },\n      onDisable: function (event) {\n        console.log(&#39;disable&#39;);\n      },\n    }\n  }\n</script>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x17",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "17",
            "time" : 1555228371611,
            "title" : "38.0 Radio Vue Component",
            "update_at" : 1556488166377
          },
          "x18" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nExamples\n<!-- Sheet Modal --></p>\n<p><f7-sheet>\n  <!-- Sheet Modal content goes here -->\n</f7-sheet>\nRenders to:\n<!-- Sheet Modal --></p>\n<p><div class=\"sheet-modal\">\n  <div class=\"sheet-modal-inner\">\n    <!-- Sheet Modal content goes here -->\n  </div>\n</div>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x18",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "18",
            "time" : 1555228371611,
            "title" : "41.0 Sheet Modal Vue Component",
            "update_at" : 1556488166377
          },
          "x19" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x19",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "19",
            "time" : 1555228371611,
            "title" : "42.0 Smart Select Vue Component",
            "update_at" : 1556488166377
          },
          "x20" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x20",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "20",
            "time" : 1555228371611,
            "title" : "43.0 Sortable Vue Component",
            "update_at" : 1556488166377
          },
          "x21" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x21",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "21",
            "time" : 1555228371611,
            "title" : "44.0 Statusbar Vue Component",
            "update_at" : 1556488166377
          },
          "x22" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n<!-- Default --></p>\n<p><f7-stepper></f7-stepper></p>\n<!-- Small and round -->\n<p><f7-stepper small round></f7-stepper></p>\n<!-- Min, max, step -->\n<p>&lt;f7-stepper\n  :min=&quot;0&quot;\n  :max=&quot;1000&quot;\n  :step=&quot;100&quot;\n  :value=&quot;500&quot;</p>\n<blockquote>\n<p></f7-stepper></p>\n</blockquote>\n<!-- With buttons only -->\n<p>&lt;f7-stepper\n  :min=&quot;0&quot;\n  :max=&quot;1000&quot;\n  :step=&quot;100&quot;\n  :value=&quot;500&quot;\n  :buttons-only=&quot;true&quot;</p>\n<blockquote>\n<p></f7-stepper></p>\n</blockquote>\n<!-- Event -->\n<p>&lt;f7-stepper\n  :min=&quot;10&quot;\n  :max=&quot;20&quot;\n  :step=&quot;0.5&quot;\n  :value=&quot;15&quot;\n  @stepper:change=&quot;(value) =&gt; { someVar = value }&quot;</p>\n<blockquote>\n<p></f7-stepper>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x22",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "22",
            "time" : 1555228371611,
            "title" : "45.0 Stepper Vue Component",
            "update_at" : 1556488166377
          },
          "x23" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x23",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "23",
            "time" : 1555228371611,
            "title" : "46.0 Subnavbar Vue Component",
            "update_at" : 1556488166377
          },
          "x24" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x24",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "24",
            "time" : 1555228371611,
            "title" : "47.0 Swiper Vue Component",
            "update_at" : 1556488166377
          },
          "x25" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nSwipe To Delete</p>\n<p><f7-list>\n  <f7-list-item swipeout title=\"Item 1\" @swipeout:deleted=\"onSwipeoutDeleted\">\n    <f7-swipeout-actions>\n      <f7-swipeout-button delete>Delete</f7-swipeout-button>\n    </f7-swipeout-actions>\n  </f7-list-item>\n  <f7-list-item swipeout title=\"Item 2\" @swipeout:deleted=\"onSwipeoutDeleted\">\n    <f7-swipeout-actions>\n      <f7-swipeout-button delete>Delete</f7-swipeout-button>\n    </f7-swipeout-actions>\n  </f7-list-item>\n</f7-list>\nRenders to:</p>\n<p><div class=\"list\">\n  <ul>\n    <li class=\"swipeout\">\n      <div class=\"swipeout-content\">\n        <div class=\"item-content\">\n          <div class=\"item-inner\">\n            <div class=\"item-title\">Item 1</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"swipeout-actions-right\">\n        <a href=\"#\" class=\"swipeout-delete\">Delete</a>\n      </div>\n    </li>\n    <li class=\"swipeout\">\n      <div class=\"swipeout-content\">\n        <div class=\"item-content\">\n          <div class=\"item-inner\">\n            <div class=\"item-title\">Item 2</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"swipeout-actions-right\">\n        <a href=\"#\" class=\"swipeout-delete\">Delete</a>\n      </div>\n    </li>\n  </ul>\n</div>\nWith Additional Actions</p>\n<p><f7-list>\n  <f7-list-item swipeout title=\"Item 1\" @swipeout:deleted=\"onSwipeoutDeleted\">\n    <f7-swipeout-actions>\n      <f7-swipeout-button close color=\"blue\">Reply</f7-swipeout-button>\n      <f7-swipeout-button delete>Delete</f7-swipeout-button>\n    </f7-swipeout-actions>\n  </f7-list-item>\n  <f7-list-item swipeout title=\"Item 2\" @swipeout:deleted=\"onSwipeoutDeleted\">\n    <f7-swipeout-actions>\n      <f7-swipeout-button close color=\"blue\">Reply</f7-swipeout-button>\n      <f7-swipeout-button delete>Delete</f7-swipeout-button>\n    </f7-swipeout-actions>\n  </f7-list-item>\n</f7-list>\nRenders to:</p>\n<p><div class=\"list\">\n  <ul>\n    <li class=\"swipeout\">\n      <div class=\"swipeout-content\">\n        <div class=\"item-content\">\n          <div class=\"item-inner\">\n            <div class=\"item-title\">Item 1</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"swipeout-actions-right\">\n        <a href=\"#\" class=\"swipeout-close color-blue\">Reply</a>\n        <a href=\"#\" class=\"swipeout-delete\">Delete</a>\n      </div>\n    </li>\n    <li class=\"swipeout\">\n      <div class=\"swipeout-content\">\n        <div class=\"item-content\">\n          <div class=\"item-inner\">\n            <div class=\"item-title\">Item 2</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"swipeout-actions-right\">\n        <a href=\"#\" class=\"swipeout-close color-blue\">Reply</a>\n        <a href=\"#\" class=\"swipeout-delete\">Delete</a>\n      </div>\n    </li>\n  </ul>\n</div>\nWith Actions On Left</p>\n<p><f7-list>\n  <f7-list-item swipeout title=\"Item 1\">\n    <f7-swipeout-actions left>\n      <f7-swipeout-button close color=\"orange\">Mark</f7-swipeout-button>\n    </f7-swipeout-actions>\n  </f7-list-item>\n  <f7-list-item swipeout title=\"Item 2\">\n    <f7-swipeout-actions left>\n      <f7-swipeout-button close color=\"orange\">Mark</f7-swipeout-button>\n    </f7-swipeout-actions>\n  </f7-list-item>\n</f7-list>\nRenders to:</p>\n<p><div class=\"list\">\n  <ul>\n    <li class=\"swipeout\">\n      <div class=\"swipeout-content\">\n        <div class=\"item-content\">\n          <div class=\"item-inner\">\n            <div class=\"item-title\">Item 1</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"swipeout-actions-left\">\n        <a href=\"#\" class=\"swipeout-close color-orange\">Mark</a>\n      </div>\n    </li>\n    <li class=\"swipeout\">\n      <div class=\"swipeout-content\">\n        <div class=\"item-content\">\n          <div class=\"item-inner\">\n            <div class=\"item-title\">Item 2</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"swipeout-actions-right\">\n        <a href=\"#\" class=\"swipeout-close color-orange\">Mark</a>\n      </div>\n    </li>\n  </ul>\n</div>\nWith Actions On Both Sides</p>\n<p><f7-list>\n  <f7-list-item swipeout title=\"Item 1\">\n    <f7-swipeout-actions left>\n      <f7-swipeout-button close color=\"orange\">Mark</f7-swipeout-button>\n    </f7-swipeout-actions>\n    <f7-swipeout-actions right>\n      <f7-swipeout-button delete>Delete</f7-swipeout-button>\n    </f7-swipeout-actions>\n  </f7-list-item>\n  <f7-list-item swipeout title=\"Item 2\">\n    <f7-swipeout-actions left>\n      <f7-swipeout-button close color=\"orange\">Mark</f7-swipeout-button>\n    </f7-swipeout-actions>\n    <f7-swipeout-actions right>\n      <f7-swipeout-button delete>Delete</f7-swipeout-button>\n    </f7-swipeout-actions>\n  </f7-list-item>\n</f7-list>\nRenders to:</p>\n<p><div class=\"list\">\n  <ul>\n    <li class=\"swipeout\">\n      <div class=\"swipeout-content\">\n        <div class=\"item-content\">\n          <div class=\"item-inner\">\n            <div class=\"item-title\">Item 1</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"swipeout-actions-left\">\n        <a href=\"#\" class=\"swipeout-close color-orange\">Mark</a>\n      </div>\n      <div class=\"swipeout-actions-right\">\n        <a href=\"#\" class=\"swipeout-delete\">Delete</a>\n      </div>\n    </li>\n    <li class=\"swipeout\">\n      <div class=\"swipeout-content\">\n        <div class=\"item-content\">\n          <div class=\"item-inner\">\n            <div class=\"item-title\">Item 2</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"swipeout-actions-right\">\n        <a href=\"#\" class=\"swipeout-close color-orange\">Mark</a>\n      </div>\n      <div class=\"swipeout-actions-right\">\n        <a href=\"#\" class=\"swipeout-delete\">Delete</a>\n      </div>\n    </li>\n  </ul>\n</div>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x25",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "25",
            "time" : 1555228371611,
            "title" : "48.0 Swipeout Vue Component",
            "update_at" : 1556488166377
          },
          "x26" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nExamples</p>\n<p><f7-tabs>\n  <f7-tab id=\"tab1\" tab-active>Tab 1 content...</f7-tab>\n  <f7-tab id=\"tab2\">Tab 2 content...</f7-tab>\n</f7-tabs></p>\n<!-- Renders to: -->\n<p><div class=\"tabs\">\n  <div id=\"tab1\" class=\"tab tab-active\">Tab 1 content...</div>\n  <div id=\"tab2\" class=\"tab\">Tab 2 content...</div>\n</div>\nAnimated tabs</p>\n<p><f7-tabs animated>\n  <f7-tab id=\"tab1\" tab-active>Tab 1 content...</f7-tab>\n  <f7-tab id=\"tab2\">Tab 2 content...</f7-tab>\n</f7-tabs></p>\n<!-- Renders to: -->\n<p><div class=\"tabs-animated-wrap\">\n  <div class=\"tabs\">\n    <div id=\"tab1\" class=\"tab tab-active\">Tab 1 content...</div>\n    <div id=\"tab2\" class=\"tab\">Tab 2 content...</div>\n  </div>\n</div>\n</div>\nSwipeable tabs</p>\n<p><f7-tabs swipeable>\n  <f7-tab id=\"tab1\" tab-active>Tab 1 content...</f7-tab>\n  <f7-tab id=\"tab2\">Tab 2 content...</f7-tab>\n</f7-tabs></p>\n<!-- Renders to: -->\n<p><div class=\"tabs-swipeable-wrap\">\n  <div class=\"tabs\">\n    <div id=\"tab1\" class=\"tab tab-active\">Tab 1 content...</div>\n    <div id=\"tab2\" class=\"tab\">Tab 2 content...</div>\n  </div>\n</div>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x26",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "26",
            "time" : 1555228371611,
            "title" : "49.0 Tabs Vue Component",
            "update_at" : 1556488166377
          },
          "x27" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n<!-- Checked --></p>\n<p><f7-toggle checked></f7-toggle></p>\n<!-- Color toggle -->\n<p><f7-toggle color=\"red\"></f7-toggle></p>\n<!-- Disabled -->\n<p><f7-toggle color=\"orange\" disabled></f7-toggle>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x27",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "27",
            "time" : 1555228371611,
            "title" : "50.0 Toggle Vue Component",
            "update_at" : 1556488166377
          },
          "x28" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x28",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "28",
            "time" : 1555228371611,
            "title" : "51.0 Toolbar Vue Component",
            "update_at" : 1556488166377
          },
          "x29" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x29",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "29",
            "time" : 1555228371611,
            "title" : "52.0 View Vue Component",
            "update_at" : 1556488166377
          },
          "x30" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x30",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "30",
            "time" : 1555228371611,
            "title" : "53.0 Virtual List Vue Component",
            "update_at" : 1556488166377
          },
          "x31" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>var app = new Framework7({\n  actions: {\n    convertToPopover: false,\n    grid: true,\n  }\n});</code></pre>",
              "type" : "Html"
            },
            "id" : "x31",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "31",
            "time" : 1555228371611,
            "title" : "54.0 actions:",
            "update_at" : 1556488166377
          },
          "x32" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>var autocomplete = app.autocomplete.create({\n  inputEl: &#39;#autocomplete-dropdown&#39;,\n  openIn: &#39;dropdown&#39;,\n  source: function (query, render) {\n    ...\n  }\n});</code></pre>",
              "type" : "Html"
            },
            "id" : "x32",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "32",
            "time" : 1555228371611,
            "title" : "55.0 autocomplete",
            "update_at" : 1556488166377
          },
          "x33" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>//Export DOM7 to local variable to make it easy accessable\nvar $$ = Dom7;\n$$(&#39;.something&#39;).on(&#39;click&#39;, function (e) {\n    $$(this).addClass(&#39;hello&#39;).attr(&#39;title&#39;, &#39;world&#39;).insertAfter(&#39;.something-else&#39;);\n});</code></pre>",
              "type" : "Html"
            },
            "id" : "x33",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "33",
            "time" : 1555228371611,
            "title" : "56.0 Dom7",
            "update_at" : 1556488166377
          },
          "x34" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n// Initialize app\nvar app = new Framework7();</p>\n<p>var $$ = Dom7;</p>\n<p>// Compile templates once on app load/init\nvar searchTemplate = $$(&#39;script#search-template&#39;).html();\nvar compiledSearchTemplate = Template7.compile(searchTemplate);</p>\n<p>var listTemplate = $$(&#39;script#list-template&#39;).html();\nvar compiledListTemplate = Template7.compile(listTemplate);</p>\n<p>// That is all, now and further just execute compiled templates with required context\napp.on(&#39;pageInit&#39;, function (page) {\n    // Just execute compiled search template with required content:\n    var html = compiledSearchTemplate({/<em>...some data...</em>/});</p>\n<pre><code>// Do something with html...\n</code></pre><p>});\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x34",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "34",
            "time" : 1555228371611,
            "title" : "57.0 template7",
            "update_at" : 1556488166377
          },
          "x35" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nvar myPlugin = {\n  // Module Name\n  name: &#39;demo-module&#39;,\n  /<em> Install callback\n  It will be executed right after component is installed\n  Context of this callback points to Class where it was installed\n  </em>/\n  install() {\n    const Class = this;\n    console.log(Class);\n  },\n  /<em> Create callback\n  It will be executed in the very beginning of class initilization (when we create new instance of the class)\n  </em>/\n  create(instance) {\n    console.log(&#39;init&#39;, instance);\n  },\n  /<em>\n  Object with default class/plugin parameters\n  </em>/\n  params: {\n    myPlugin: {\n      a: 1,\n      b: 2,\n      c: 3,\n    }\n  },\n  /<em> proto object extends Class prototype </em>/\n  proto: {\n    demo() {\n      return &#39;demo-module-proto-method&#39;;\n    },\n    demoStatic: &#39;demo-module-proto-static&#39;,\n  },\n  // Extend Class with static props and methods, e.g. Class.myMethod\n  static: {\n    demo() {\n      return &#39;demo-module-class-method&#39;;\n    },\n    demoStatic: &#39;demo-module-class-static&#39;,\n  },\n  /<em> Initialized instance Props &amp; Methods </em>/\n  instance: {\n    demoProp: true,\n    demoMethod() {\n      return &#39;demo-method&#39;;\n    },\n  },\n  /<em> Event handlers </em>/\n  on: {\n    demoEvent(a, b) {\n      console.log(&#39;demo-event&#39;, a, b);\n    },\n  },\n  /<em> Handle clicks </em>/\n  clicks: {\n    // prop name means CSS selector of element to add click handler\n    &#39;p&#39;: function ($clickedEl, data) {\n      // $clickedEl: Dom7 instance of clicked element\n      // data: element data set (data- attributes)\n    },\n  }\n};</p>\n<p>Framework7.use(myPlugin);\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x35",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "35",
            "time" : 1555228371611,
            "title" : "58.0 plugin",
            "update_at" : 1556488166377
          },
          "x36" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "certificatePath" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledgecontents%2FiHmcxnnRDWPOJAE38On1nCdq0ir2%2F-LdLtaiBADqiIat-6k_3x36?alt=media&token=124c29a5-2af9-434c-bc0f-e95bea650498",
              "type" : "Certificate"
            },
            "id" : "x36",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_3",
            "name" : "tei952",
            "ord" : "36",
            "time" : 1555228371611,
            "title" : "59.9 御修了ありがとうございました。",
            "update_at" : 1556488166377
          }
        }
      },
      "-LdLtaiBADqiIat-6k_4" : {
        "contents" : {
          "x01" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>npm install vue-infinite-loading -S</code></pre>",
              "type" : "Html"
            },
            "id" : "x01",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_4",
            "name" : "tei952",
            "ord" : "01",
            "time" : 1555228371611,
            "title" : "1.0 Installation",
            "update_at" : 1556488166377
          },
          "x02" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x02",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_4",
            "name" : "tei952",
            "ord" : "02",
            "time" : 1555228371611,
            "title" : "3.0 Component",
            "update_at" : 1556488166377
          },
          "x03" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x03",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_4",
            "name" : "tei952",
            "ord" : "03",
            "time" : 1555228371611,
            "title" : "4.0 Plugin API",
            "update_at" : 1556488166377
          },
          "x04" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n// main.js or index.js\nimport InfiniteLoading from &#39;vue-infinite-loading&#39;;</p>\n<p>Vue.use(InfiniteLoading, { /<em> options </em>/ });\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x04",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_4",
            "name" : "tei952",
            "ord" : "04",
            "time" : 1555228371611,
            "title" : "5.0 Start With Hacker News",
            "update_at" : 1556488166377
          },
          "x05" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x05",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_4",
            "name" : "tei952",
            "ord" : "05",
            "time" : 1555228371611,
            "title" : "6.0 Use With Filter/Tabs",
            "update_at" : 1556488166377
          },
          "x06" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x06",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_4",
            "name" : "tei952",
            "ord" : "06",
            "time" : 1555228371611,
            "title" : "7.0 Top Direction Scroll",
            "update_at" : 1556488166377
          },
          "x07" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x07",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_4",
            "name" : "tei952",
            "ord" : "07",
            "time" : 1555228371611,
            "title" : "8.0 Use With Element UI",
            "update_at" : 1556488166377
          },
          "x08" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x08",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_4",
            "name" : "tei952",
            "ord" : "08",
            "time" : 1555228371611,
            "title" : "9.0 Configure Load Messages",
            "update_at" : 1556488166377
          },
          "x09" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nVia Component Prop\nOnly the spinner slot can be configured via the prop, and the set value can only be the built-in spinner type:</p>\n<p><infinite-loading spinner=\"spiral\"></infinite-loading>\nYou can preview all built-in spinner types on the right. Please use other ways if you want to create your own spinner.</p>\n<p>Via slot Sepcial Attribute\nWe can use the slot special attribute  to configure them:</p>\n<p><infinite-loading>\n  <div slot=\"spinner\">Loading...</div>\n  <div slot=\"no-more\">No more message</div>\n  <div slot=\"no-results\">No results message</div>\n</infinite-loading>\nUnlike other slots, the default value for the error slot will provide a retry button for users to load the data again. If you want to implement a retry button for users when you customize the error slot, you can use the slot-scope  feature, like this:</p>\n<p><infinite-loading>\n  <div slot=\"error\" slot-scope=\"{ trigger }\">\n    Error message, click <a href=\"javascript:;\" @click=\"trigger\">here</a> to retry\n  </div>\n</infinite-loading></p>\n<p>Via Plugin API\nIn order to maintain consistent behavior for all load messages when we are building a large application, this plugin supports configuration on all slots using the plugin API. We just need to pass a string or Vue component to it, click here to read more about that.\nThe error slot is still special in this way. Just as with the slot special attribute, if you want to implement a retry button for users in your own error component, you can use the vm.$attrs  property, like this:\n<!-- your own error component --></p>\n<p><div>\n  Error message, click\n  <a href=\"javascript:;\" @click=\"$attrs.trigger\">here</a>\n  to retry\n</div>\nIf you want to keep variables clear, you can also define a function property named trigger, and bind it to your retry button:\n// your own error component\nexport default {\n  /<em> ... </em>/\n  props: {\n    trigger: Function,\n  },\n  /<em> ... </em>/\n};</p>\n<p>About Hide &amp; Default Styles\nFor easy use, this component provides some default styles (font-size, color and padding) for slot content. If you want to keep all default styles when you configure via the slot special attribute, you have to wrap the content with a template tag:</p>\n<p><infinite-loading>\n  <!-- The no-more message will has default styles -->\n  <template slot=\"no-more\">No more message</template>\n</infinite-loading></p>\n<p>If you want to hide a slot, you can create an empty element that is not a template element, because the empty template element will be ignored by Vue.js:</p>\n<p><infinite-loading>\n  <!-- The no-more slot will not be displayed -->\n  <span slot=\"no-more\"></span>\n</infinite-loading>\nIf you want to remove all default styles to avoid affecting your own styles, you can wrap the content with an element that is not a template element:</p>\n<p><infinite-loading>\n  <!-- The no-more message will has no default styles -->\n  <div slot=\"no-more\">No more message</div>\n</infinite-loading>\nI almost forgot, if you want to configure the slot content globally via the plugin API, you can control it like this:\nimport Vue from &#39;vue&#39;;\nimport InfiniteLoading from &#39;vue-infinite-loading&#39;;\nimport InfiniteError from &#39;path/to/your/components/InfiniteError&#39;,</p>\n<p>Vue.use(InfiniteLoading, {\n  slots: {\n    // keep default styles\n    noResults: &#39;No results message&#39;,</p>\n<pre><code>// remove default styles\nnoMore: InfiniteError,\n\n// hide slot\nerror: {\n  render: h =&gt; h(&#39;div&#39;),\n},\n</code></pre><p>  },\n});\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x09",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_4",
            "name" : "tei952",
            "ord" : "09",
            "time" : 1555228371611,
            "title" : "10.0 Configure Plugin Options",
            "update_at" : 1556488166377
          },
          "x10" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "certificatePath" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledgecontents%2FiHmcxnnRDWPOJAE38On1nCdq0ir2%2F-LdLtaiBADqiIat-6k_4x10?alt=media&token=8688a6b5-aac7-4237-8718-982afff1c1b4",
              "type" : "Certificate"
            },
            "id" : "x10",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_4",
            "name" : "tei952",
            "ord" : "10",
            "time" : 1555228371611,
            "title" : "11.9 御修了ありがとうございました。",
            "update_at" : 1556488166377
          }
        }
      },
      "-LdLtaiBADqiIat-6k_6" : {
        "contents" : {
          "x01" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>ML Kitはモバイル端末上で機械学習を扱いやすくするためのパッケージです。\n今はパブリックベータ公開ではありますが、Firebaseで使うことができます。</code></pre>",
              "type" : "Html"
            },
            "id" : "x01",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_6",
            "name" : "tei952",
            "ord" : "01",
            "time" : 1555228371611,
            "title" : "1.0 ML Kit For Firebaseとは",
            "update_at" : 1556488166377
          },
          "x02" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>次のような機能がBase APIとして用意されています。学習済みのモデルを\n使った機能なので、自分でモデルを用意する必要がなく、お手軽に使うことが\n出来ます。クラウドAPIと端末内APIがあり、端末内APIはオフライン状態でも\n使うことが出来ます。クラウドAPIは内部的にCLOUD Vision APIを使ってい\nるのでCLOUD Vision APIと同じ料金が掛かります。端末内APIは無料で利用\nできます。</code></pre>",
              "type" : "Html"
            },
            "id" : "x02",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_6",
            "name" : "tei952",
            "ord" : "02",
            "time" : 1555228371611,
            "title" : "2.0 BaseAPI",
            "update_at" : 1556488166377
          },
          "x03" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n画像に表示されている物や場所、動き、動物などを分類するものです。端末内\nAPIとクラウドAPIの両方に対応。\nFirebaseVisionCloudDetectorOptions options =\n    new FirebaseVisionCloudDetectorOptions.Builder()\n        .setModelType(FirebaseVisionCloudDetectorOptions.LATEST_MODEL)\n        .setMaxResults(15)\n        .build();</p>\n<p>FirebaseVisionCloudLabelDetector detector = FirebaseVision.getInstance()\n    .getVisionCloudLabelDetector(options);</p>\n<p>FirebaseVisionImageMetadata metadata = new FirebaseVisionImageMetadata.Builder()\n    .setWidth(1280)\n    .setHeight(720)\n    .setFormat(FirebaseVisionImageMetadata.IMAGE_FORMAT_NV21)\n    .setRotation(FirebaseVisionImageMetadata.ROTATION_0)\n    .build();</p>\n<p>FirebaseVisionImageMetadata metadata = new FirebaseVisionImageMetadata.Builder()\n    .setRotation(FirebaseVisionImageMetadata.ROTATION_0)\n    .build();</p>\n<p>Task&lt;SparseArray<FirebaseVisionCloudLabel>&gt; result =\n    detector.detectInImage(image, metadata)  // or detectInBuffer(buffer, metadata)\n    .addOnSuccessListener(\n        this,\n        new OnSuccessListener&lt;SparseArray<FirebaseVisionCloudLabel>&gt;() {\n          @Override\n          public void onSuccess(SparseArray<FirebaseVisionCloudLabel> label) {\n            // Task completed successfully\n            // ...\n          }\n        })\n    .addOnFailureListener(\n        this,\n        new OnFailureListener() {\n          @Override\n          public void onFailure(@NonNull Exception e) {\n            // Task failed with an exception\n            // ...\n          }\n        });</p>\n<p>for(int i = 0; i &lt; labels.size(); i++) {\n  FirebaseVisionCloudLabel label = labels.valueAt(i);</p>\n<p>  Rect bounds = label.getBoundingBox();\n  String label = label.getLabel();\n  String entityId = label.getEntityId();\n  float confidence = label.getScore();\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x03",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_6",
            "name" : "tei952",
            "ord" : "03",
            "time" : 1555228371611,
            "title" : "3.0 画像分類",
            "update_at" : 1556488166377
          },
          "x04" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n画像に表示されている文字を検出し、認識します。端末内APIとクラウドAPIの\n両方に対応。\nFirebaseVisionImage image = FirebaseVisionImage.fromBitmap(bitmap);\nprivate static final SparseIntArray ORIENTATIONS = new SparseIntArray();\nstatic {\n    ORIENTATIONS.append(Surface.ROTATION_0, 90);\n    ORIENTATIONS.append(Surface.ROTATION_90, 0);\n    ORIENTATIONS.append(Surface.ROTATION_180, 270);\n    ORIENTATIONS.append(Surface.ROTATION_270, 180);\n}</p>\n<p>/*<em>\n </em> Get the angle by which an image must be rotated given the device&#39;s current\n <em> orientation.\n </em>/\n@RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)\nprivate int getRotationCompensation(String cameraId, Activity activity, Context context)\n        throws CameraAccessException {\n    // Get the device&#39;s current rotation relative to its &quot;native&quot; orientation.\n    // Then, from the ORIENTATIONS table, look up the angle the image must be\n    // rotated to compensate for the device&#39;s rotation.\n    int deviceRotation = activity.getWindowManager().getDefaultDisplay().getRotation();\n    int rotationCompensation = ORIENTATIONS.get(deviceRotation);</p>\n<pre><code>// On most devices, the sensor orientation is 90 degrees, but for some\n// devices it is 270 degrees. For devices with a sensor orientation of\n// 270, rotate the image an additional 180 ((270 + 270) % 360) degrees.\nCameraManager cameraManager = (CameraManager) context.getSystemService(CAMERA_SERVICE);\nint sensorOrientation = cameraManager\n        .getCameraCharacteristics(cameraId)\n        .get(CameraCharacteristics.SENSOR_ORIENTATION);\nrotationCompensation = (rotationCompensation + sensorOrientation + 270) % 360;\n\n// Return the corresponding FirebaseVisionImageMetadata rotation value.\nint result;\nswitch (rotationCompensation) {\n    case 0:\n        result = FirebaseVisionImageMetadata.ROTATION_0;\n        break;\n    case 90:\n        result = FirebaseVisionImageMetadata.ROTATION_90;\n        break;\n    case 180:\n        result = FirebaseVisionImageMetadata.ROTATION_180;\n        break;\n    case 270:\n        result = FirebaseVisionImageMetadata.ROTATION_270;\n        break;\n    default:\n        result = FirebaseVisionImageMetadata.ROTATION_0;\n        Log.e(TAG, &quot;Bad rotation value: &quot; + rotationCompensation);\n}\nreturn result;\n</code></pre><p>}</p>\n<p>FirebaseVisionImage image = FirebaseVisionImage.fromMediaImage(mediaImage, rotation);</p>\n<p>FirebaseVisionImage image;\ntry {\n    image = FirebaseVisionImage.fromFilePath(context, uri);\n} catch (IOException e) {\n    e.printStackTrace();\n}\nFirebaseVisionTextRecognizer detector = FirebaseVision.getInstance()\n        .getOnDeviceTextRecognizer();\nFirebaseVisionTextRecognizer detector = FirebaseVision.getInstance()\n        .getCloudTextRecognizer();\n// Or, to change the default settings:\n//   FirebaseVisionTextRecognizer detector = FirebaseVision.getInstance()\n//          .getCloudTextRecognizer(options);\nTextRecognitionActivity.java</p>\n<p>// Or, to provide language hints to assist with language detection:\n// See https://cloud.google.com/vision/docs/languages for supported languages\nFirebaseVisionCloudTextRecognizerOptions options = new FirebaseVisionCloudTextRecognizerOptions.Builder()\n        .setLanguageHints(Arrays.asList(&quot;en&quot;, &quot;hi&quot;))\n        .build();\nTask<FirebaseVisionText> result =\n        detector.processImage(image)\n                .addOnSuccessListener(new OnSuccessListener<FirebaseVisionText>() {\n                    @Override\n                    public void onSuccess(FirebaseVisionText firebaseVisionText) {\n                        // Task completed successfully\n                        // ...\n                    }\n                })\n                .addOnFailureListener(\n                        new OnFailureListener() {\n                            @Override\n                            public void onFailure(@NonNull Exception e) {\n                                // Task failed with an exception\n                                // ...\n                            }\n                        });\nString resultText = result.getText();\nfor (FirebaseVisionText.TextBlock block: result.getTextBlocks()) {\n    String blockText = block.getText();\n    Float blockConfidence = block.getConfidence();\n    List<RecognizedLanguage> blockLanguages = block.getRecognizedLanguages();\n    Point[] blockCornerPoints = block.getCornerPoints();\n    Rect blockFrame = block.getBoundingBox();\n    for (FirebaseVisionText.Line line: block.getLines()) {\n        String lineText = line.getText();\n        Float lineConfidence = line.getConfidence();\n        List<RecognizedLanguage> lineLanguages = line.getRecognizedLanguages();\n        Point[] lineCornerPoints = line.getCornerPoints();\n        Rect lineFrame = line.getBoundingBox();\n        for (FirebaseVisionText.Element element: line.getElements()) {\n            String elementText = element.getText();\n            Float elementConfidence = element.getConfidence();\n            List<RecognizedLanguage> elementLanguages = element.getRecognizedLanguages();\n            Point[] elementCornerPoints = element.getCornerPoints();\n            Rect elementFrame = element.getBoundingBox();\n        }\n    }\n}</p>\n<pcode>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x04",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_6",
            "name" : "tei952",
            "ord" : "04",
            "time" : 1555228371611,
            "title" : "4.0 文字認識",
            "update_at" : 1556488166377
          },
          "x05" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n画像内の顔を検出します。顔の各パーツの位置なども検出できます。端末内API\nのみ対応。\nFirebaseVisionFaceDetectorOptions options =\n    new FirebaseVisionFaceDetectorOptions.Builder()\n        .setModeType(FirebaseVisionFaceDetectorOptions.ACCURATE_MODE)\n        .setLandmarkType(FirebaseVisionFaceDetectorOptions.ALL_LANDMARKS)\n        .setClassificationType(FirebaseVisionFaceDetectorOptions.ALL_CLASSIFICATIONS)\n        .setMinFaceSize(0.2f)\n        .setTrackingEnabled(true)\n        .build();\nFirebaseVisionFaceDetector detector = FirebaseVision.getInstance()\n    .getVisionFaceDetector(options);\nFirebaseVisionImageMetadata metadata = new FirebaseVisionImageMetadata.Builder()\n    .setWidth(1280)\n    .setHeight(720)\n    .setFormat(FirebaseVisionImageMetadata.IMAGE_FORMAT_NV21)\n    .setRotation(FirebaseVisionImageMetadata.ROTATION_0)\n    .build();\nFirebaseVisionImageMetadata metadata = new FirebaseVisionImageMetadata.Builder()\n    .setRotation(FirebaseVisionImageMetadata.ROTATION_0)\n    .build();\nTask&lt;SparseArray<FirebaseVisionFace>&gt; result =\n    detector.detectInImage(image, metadata)  // or detectInBuffer(buffer, metadata)\n    .addOnSuccessListener(\n        this,\n        new OnSuccessListener&lt;SparseArray<FirebaseVisionFace>&gt;() {\n          @Override\n          public void onSuccess(SparseArray<FirebaseVisionFace> faces) {\n            // Task completed successfully\n            // ...\n          }\n        })\n    .addOnFailureListener(\n        this,\n        new OnFailureListener() {\n          @Override\n          public void onFailure(@NonNull Exception e) {\n            // Task failed with an exception\n            // ...\n          }\n        });\nfor(int i = 0; i &lt; faces.size(); i++) {\n  FirebaseVisionFace face = faces.valueAt(i);</p>\n<p>  Rect bounds = face.getBoundingBox();\n  if (face.hasHeadEulerAngleY()) {\n    float rotY = face.getHeadEulerAngleY();  // Head is rotated to the right rotY degrees\n  }\n  if (face.hasHeadEulerAngleZ()) {\n    float rotZ = face.getHeadEulerAngleZ();  // Head is rotated upward rotZ degrees\n  }</p>\n<p>  // If landmark detection was enabled (mouth, ears, eyes, cheeks, and\n  // nose available):\n  if (face.hasLeftEarPosition()) {\n    PointF leftEarPos = face.getLeftEarPosition();\n  }\n  if (face.hasNoseBasePosition()) {\n    PointF nosePos = face.getNoseBasePosition();\n  }</p>\n<p>  // If classification was enabled:\n  if (face.hasSmilingProbability()) {\n    float smileProb = face.getSmilingProbability();\n  }\n  if (face.hasRightEyeOpenProbability()) {\n    float rightEyeOpenProb = face.getRightEyeOpenProbability();\n  }</p>\n<p>  // If face tracking was enabled:\n  if (face.hasTrackingId()) {\n    int id = face.getTrackingId();\n  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x05",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_6",
            "name" : "tei952",
            "ord" : "05",
            "time" : 1555228371611,
            "title" : "5.0 顔検出",
            "update_at" : 1556488166377
          },
          "x06" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n画像内のバーコードを検出し、その内容を表示します。端末内APIのみ対応。\nFirebaseVisionBarcodeDetectorOptions options =\n    new FirebaseVisionBarcodeDetectorOptions.Builder()\n        .setBarcodeFormats(FirebaseVisionBarcode.FORMAT_QR_CODE,\n                           FirebaseVisionBarcode.FORMAT_AZTEC)\n        .build();\nFirebaseVisionBarcodeDetector detector = FirebaseVision.getInstance()\n    .getVisionBarcodeDetector(options);\nFirebaseVisionImageMetadata metadata = new FirebaseVisionImageMetadata.Builder()\n    .setWidth(1280)\n    .setHeight(720)\n    .setFormat(FirebaseVisionImageMetadata.IMAGE_FORMAT_NV21)\n    .setRotation(FirebaseVisionImageMetadata.ROTATION_0)\n    .build();\nFirebaseVisionImageMetadata metadata = new FirebaseVisionImageMetadata.Builder()\n    .setRotation(FirebaseVisionImageMetadata.ROTATION_0)\n    .build();\nTask&lt;SparseArray<FirebaseVisionBarcode>&gt; result =\n    detector.detectInImage(image, metadata)  // or detectInBuffer(buffer, metadata)\n    .addOnSuccessListener(\n        this,\n        new OnSuccessListener&lt;SparseArray<FirebaseVisionBarcode>&gt;() {\n          @Override\n          public void onSuccess(SparseArray<FirebaseVisionBarcode> barcodes) {\n            // Task completed successfully\n            // ...\n          }\n        })\n    .addOnFailureListener(\n        this,\n        new OnFailureListener() {\n          @Override\n          public void onFailure(@NonNull Exception e) {\n            // Task failed with an exception\n            // ...\n          }\n        });</p>\n<p>for(int i = 0; i &lt; barcodes.size(); i++) {\n  FirebaseVisionBarcode barcode = barcodes.valueAt(i);</p>\n<p>  Rect bounds = barcode.getBoundingBox();\n  Point[] corners = barcode.getCornerPoints();</p>\n<p>  String rawValue = barcode.getRawValue();</p>\n<p>  int valueType = barcode.getValueType();\n  // See API reference for complete list of supported types\n  switch (valueType) {\n    case FirebaseVisionBarcode.TYPE_WIFI:\n      String ssid = barcode.getWifi().getSsid();\n      String password = barcode.getWifi().getPassword();\n      int type = barcode.getWifi().getEncryptionType();\n      break;\n    case FirebaseVisionBarcode.TYPE_URL:\n      String title = barcode.getUrl().getTitle();\n      String url = barcode.getUrl().getUrl();\n      break;\n  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x06",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_6",
            "name" : "tei952",
            "ord" : "06",
            "time" : 1555228371611,
            "title" : "6.0 バーコードスキャン",
            "update_at" : 1556488166377
          },
          "x07" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n画像内のランドマーク（有名な建築物など）を検出します。クラウドAPIのみ\n対応。\nFirebaseVisionCloudDetectorOptions options =\n    new FirebaseVisionCloudDetectorOptions.Builder()\n        .setModelType(FirebaseVisionCloudDetectorOptions.LATEST_MODEL)\n        .setMaxResults(15)\n        .build();\nFirebaseVisionCloudLandmarkDetector detector = FirebaseVision.getInstance()\n    .getVisionCloudLandmarkDetector(options);\nFirebaseVisionImageMetadata metadata = new FirebaseVisionImageMetadata.Builder()\n    .setWidth(1280)\n    .setHeight(720)\n    .setFormat(FirebaseVisionImageMetadata.IMAGE_FORMAT_NV21)\n    .setRotation(FirebaseVisionImageMetadata.ROTATION_0)\n    .build();\nFirebaseVisionImageMetadata metadata = new FirebaseVisionImageMetadata.Builder()\n    .setRotation(FirebaseVisionImageMetadata.ROTATION_0)\n    .build();\nTask&lt;SparseArray<FirebaseVisionCloudLandmark>&gt; result =\n    detector.detectInImage(image, metadata)  // or detectInBuffer(buffer, metadata)\n    .addOnSuccessListener(\n        this,\n        new OnSuccessListener&lt;SparseArray<FirebaseVisionCloudLandmark>&gt;() {\n          @Override\n          public void onSuccess(SparseArray<FirebaseVisionCloudLandmark> landmarks) {\n            // Task completed successfully\n            // ...\n          }\n        })\n    .addOnFailureListener(\n        this,\n        new OnFailureListener() {\n          @Override\n          public void onFailure(@NonNull Exception e) {\n            // Task failed with an exception\n            // ...\n          }\n        });\n   for(int i = 0; i &lt; landmarks.size(); i++) {\n  FirebaseVisionCloudLandmark landmark = landmarks.valueAt(i);</p>\n<p>  Rect bounds = landmark.getBoundingBox();\n  String landmarkName = landmark.getlandmark();\n  String entityId = landmark.getEntityId();\n  float confidence = landmark.getScore();</p>\n<p>  // Multiple locations are possible, e.g., the location of the depicted\n  // landmark and the location the picture was taken.\n  for (FirebaseVisionLatLng loc: landmark.getLocations()) {\n    double latitude = loc.getLatitude();\n    double longitude = loc.getLongitude();\n  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x07",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_6",
            "name" : "tei952",
            "ord" : "07",
            "time" : 1555228371611,
            "title" : "7.0 ランドマーク認識",
            "update_at" : 1556488166377
          },
          "x08" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nBaseAPIの機能以外にも自らで用意したモデルもTensorFlow Liteで読み込め\nる形式であれば使うことが出来ます。\n特徴としては次のようなものがあります。\nFirebase上にモデルを置いておくことができます。アプリ内にバンドルするこ\nともできます。\nFirebase上のモデルを更新すると、アプリ側で自動でダウンロードさせて端末\n内のモデルを更新させることができます。\nFirebase上のモデルと端末内のモデルを使用することができ、Firebase上のモ\nデルが使用できなければ端末内のものを使うということも出来ます。 \n今回はあまりカスタムモデルの実装の仕方については触れません。Codelabsに\n例があるので、そちらを確認して頂ければと思います。\nFirebaseModelDownloadConditions.Builder conditionsBuilder =\n        new FirebaseModelDownloadConditions.Builder().requireWifi();\nif (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.N) {\n    // Enable advanced conditions on Android Nougat and newer.\n    conditionsBuilder = conditionsBuilder\n            .requireCharging()\n            .requireDeviceIdle();\n}\nFirebaseModelDownloadConditions conditions = conditionsBuilder.build();</p>\n<p>// Build a remote model source object by specifying the name you assigned the model\n// when you uploaded it in the Firebase console.\nFirebaseRemoteModel cloudSource = new FirebaseRemoteModel.Builder(&quot;my_cloud_model&quot;)\n        .enableModelUpdates(true)\n        .setInitialDownloadConditions(conditions)\n        .setUpdatesDownloadConditions(conditions)\n        .build();\nFirebaseModelManager.getInstance().registerRemoteModel(cloudSource);\nimport tensorflow as tf</p>\n<p>interpreter = tf.lite.Interpreter(model_path=&quot;my_model.tflite&quot;)\ninterpreter.allocate_tensors()</p>\n<h1 id=\"print-input-shape-and-type\">Print input shape and type</h1>\n<p>print(interpreter.get_input_details()[0][&#39;shape&#39;])  # Example: [1 224 224 3]\nprint(interpreter.get_input_details()[0][&#39;dtype&#39;])  # Example: <class 'numpy.float32'></p>\n<h1 id=\"print-output-shape-and-type\">Print output shape and type</h1>\n<p>print(interpreter.get_output_details()[0][&#39;shape&#39;])  # Example: [1 1000]\nprint(interpreter.get_output_details()[0][&#39;dtype&#39;])  # Example: <class 'numpy.float32'>\nFirebaseModelInputOutputOptions inputOutputOptions =\n        new FirebaseModelInputOutputOptions.Builder()\n                .setInputFormat(0, FirebaseModelDataType.FLOAT32, new int[]{1, 224, 224, 3})\n                .setOutputFormat(0, FirebaseModelDataType.FLOAT32, new int[]{1, 5})\n                .build();\nBitmap bitmap = getYourInputImage();\nbitmap = Bitmap.createScaledBitmap(bitmap, 224, 224, true);</p>\n<p>int batchNum = 0;\nfloat[][][][] input = new float[1][224][224][3];\nfor (int x = 0; x &lt; 224; x++) {\n    for (int y = 0; y &lt; 224; y++) {\n        int pixel = bitmap.getPixel(x, y);\n        // Normalize channel values to [-1.0, 1.0]. This requirement varies by\n        // model. For example, some models might require values to be normalized\n        // to the range [0.0, 1.0] instead.\n        input[batchNum][x][y][0] = (Color.red(pixel) - 127) / 128.0f;\n        input[batchNum][x][y][1] = (Color.green(pixel) - 127) / 128.0f;\n        input[batchNum][x][y][2] = (Color.blue(pixel) - 127) / 128.0f;\n    }\n}\nFirebaseModelInputs inputs = new FirebaseModelInputs.Builder()\n        .add(input)  // add() as many input arrays as your model requires\n        .build();\nfirebaseInterpreter.run(inputs, inputOutputOptions)\n        .addOnSuccessListener(\n                new OnSuccessListener<FirebaseModelOutputs>() {\n                    @Override\n                    public void onSuccess(FirebaseModelOutputs result) {\n                        // ...\n                    }\n                })\n        .addOnFailureListener(\n                new OnFailureListener() {\n                    @Override\n                    public void onFailure(@NonNull Exception e) {\n                        // Task failed with an exception\n                        // ...\n                    }\n                });\nfloat[][] output = result.getOutput(0);\nfloat[] probabilities = output[0];\nBufferedReader reader = new BufferedReader(\n        new InputStreamReader(getAssets().open(&quot;retrained_labels.txt&quot;)));\nfor (int i = 0; i &lt; probabilities.length; i++) {\n    String label = reader.readLine();\n    Log.i(&quot;MLKit&quot;, String.format(&quot;%s: %1.4f&quot;, label, probabilities[i]));\n}</p>\n<pcode>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x08",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_6",
            "name" : "tei952",
            "ord" : "08",
            "time" : 1555228371611,
            "title" : "8.0 カスタムモデル",
            "update_at" : 1556488166377
          },
          "x09" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nTensorFlow LiteはTensorFlowのモバイル向けのライブラリ群です。専用のモ\nデルのフォーマットを使うなどして、TensorFlowをモバイル用に最適化したも\nのです。\n今の所はTensorFlow Liteはデベロッパープレビューとして公開されています。\nなので、事前に検証された機械学習もまだまだ少なく、機能としても少ない状態\nです。しかし、同様のモバイル向けのTensorFlowとして公開されている\nTensorFlow Mobileに比べてより軽量でパフォーマンスの良いアプリケーション\nを開発できると謳われています。なので今の所は、サービスに使うのであれば\nTensorFlow Mobileを使用し、今後の正式リリースに備えてTensorFlow Liteを\n検証して追いかけておく、というのが良さそうです。\nbazel build --cxxopt=&#39;--std=c++11&#39; -c opt        \\\n  --fat_apk_cpu=x86,x86_64,arm64-v8a,armeabi-v7a   \\\n  //tensorflow/lite/java:tensorflow-lite</p>\n<p>  mvn install:install-file -Dfile=bazel-genfiles/tensorflow/lite/java/tensorflow-lite.aar -DgroupId=org.tensorflow \\\n  -DartifactId=tensorflow-lite -Dversion=0.1.100 -Dpackaging=aar\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x09",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_6",
            "name" : "tei952",
            "ord" : "09",
            "time" : 1555228371611,
            "title" : "9.0 TensorFlow Liteとは",
            "update_at" : 1556488166377
          },
          "x10" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>ML Kitのクイックスタートを使って、試してみました。 内容としてはAndroidで\nカメラに表示しているものに対してリアルタイムでBaseAPIの端末内APIを利用し\nた検出を行うLivePreviewActivityと、静止画に対してクラウドAPIを利用した\n検出を行うStillImageActivityがあります。</code></pre>",
              "type" : "Html"
            },
            "id" : "x10",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_6",
            "name" : "tei952",
            "ord" : "10",
            "time" : 1555228371611,
            "title" : "10.0 クイックスタートをやってみた",
            "update_at" : 1556488166377
          },
          "x11" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>Android Studioを事前にインストールしておく必要があります。\ngit clone https://github.com/firebase/quickstart-android.git\nクローンで落としてきたディレクトリの中のmlkitをAndroid Studioで開きます。</code></pre>",
              "type" : "Html"
            },
            "id" : "x11",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_6",
            "name" : "tei952",
            "ord" : "11",
            "time" : 1555228371611,
            "title" : "11.0 前提と準備",
            "update_at" : 1556488166377
          },
          "x12" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "https://cdn-ssl-devio-img.classmethod.jp/wp-content/uploads/2018/08/d9f2249278d042f6b2e6ff6192af078c.png",
              "type" : "Picture"
            },
            "id" : "x12",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_6",
            "name" : "tei952",
            "ord" : "12",
            "time" : 1555228371611,
            "title" : "11.4 Firebase consoleでプロジェクトを作成",
            "update_at" : 1556488166377
          },
          "x13" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>プロジェクトの作成が出来たら、Androidアプリの追加を行います。\napp/build.gradleに記載されているapplicationIdをAndroidパッケージ名とし\nて入力して登録します。</code></pre>",
              "type" : "Html"
            },
            "id" : "x13",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_6",
            "name" : "tei952",
            "ord" : "13",
            "time" : 1555228371611,
            "title" : "12.0 Androidアプリの追加",
            "update_at" : 1556488166377
          },
          "x14" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "https://cdn-ssl-devio-img.classmethod.jp/wp-content/uploads/2018/08/a8444f0f1e08edb548ea1e669e61c559-640x733.png",
              "type" : "Picture"
            },
            "id" : "x14",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_6",
            "name" : "tei952",
            "ord" : "14",
            "time" : 1555228371611,
            "title" : "12.4 Androidアプリの追加操作",
            "update_at" : 1556488166377
          },
          "x15" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "https://cdn-ssl-devio-img.classmethod.jp/wp-content/uploads/2018/08/e065fe3b6ff4136775a23cb818415585-640x664.png",
              "type" : "Picture"
            },
            "id" : "x15",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_6",
            "name" : "tei952",
            "ord" : "15",
            "time" : 1555228371611,
            "title" : "13.4 google-services.jsonダウンロード",
            "update_at" : 1556488166377
          },
          "x16" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "https://cdn-ssl-devio-img.classmethod.jp/wp-content/uploads/2018/08/be268fd4a53299021f09e9fcce715491-640x940.png",
              "type" : "Picture"
            },
            "id" : "x16",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_6",
            "name" : "tei952",
            "ord" : "16",
            "time" : 1555228371611,
            "title" : "14.4 google-services.json移動",
            "update_at" : 1556488166377
          },
          "x17" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "https://cdn-ssl-devio-img.classmethod.jp/wp-content/uploads/2018/08/firebase_plan-640x493.png",
              "type" : "Picture"
            },
            "id" : "x17",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_6",
            "name" : "tei952",
            "ord" : "17",
            "time" : 1555228371611,
            "title" : "15.4 従量課金選択",
            "update_at" : 1556488166377
          },
          "x18" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "https://cdn-ssl-devio-img.classmethod.jp/wp-content/uploads/2018/08/f5c0555ee16525eb9aae426cee8db58f-640x410.png",
              "type" : "Picture"
            },
            "id" : "x18",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_6",
            "name" : "tei952",
            "ord" : "18",
            "time" : 1555228371611,
            "title" : "16.4 CloudVisionAPIを有効化",
            "update_at" : 1556488166377
          },
          "x19" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "https://cdn-ssl-devio-img.classmethod.jp/wp-content/uploads/2018/08/3b3ca3e306e7b59a3d9e05d93e60d84d-640x280.png",
              "type" : "Picture"
            },
            "id" : "x19",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_6",
            "name" : "tei952",
            "ord" : "19",
            "time" : 1555228371611,
            "title" : "17.4 実際に動かしてみる",
            "update_at" : 1556488166377
          },
          "x20" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "certificatePath" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledgecontents%2FiHmcxnnRDWPOJAE38On1nCdq0ir2%2F-LdLtaiBADqiIat-6k_6x20?alt=media&token=a2308dd1-0441-4384-9c08-2181bbdba51f",
              "type" : "Certificate"
            },
            "id" : "x20",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_6",
            "name" : "tei952",
            "ord" : "20",
            "time" : 1555228371611,
            "title" : "18.9 御修了ありがとうございました。",
            "update_at" : 1556488166377
          }
        }
      },
      "-LdLtaiBADqiIat-6k_7" : {
        "contents" : {
          "x01" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>npm install -g @angular/cli\nng new tensorflowApp</code></pre>",
              "type" : "Html"
            },
            "id" : "x01",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_7",
            "name" : "tei952",
            "ord" : "01",
            "time" : 1555228371611,
            "title" : "1.0 Generate an Angular App",
            "update_at" : 1556488166377
          },
          "x02" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\ncd tensorflowApp\nnpm install @tensorflow/tfjs --save</p>\n<p>But instead of using a pre-install, I just hand edited\n<code>node_modules/@angular-devkit/build-angular/src/angular\n-cli-files/models/webpack-configs/browser.js&#39; and \nchanged the lines in that regex:\n// old:\nnode: false,\n// new:\nnode: { crypto: true, stream: true },\n``</code></pre>",
              "type" : "Html"
            },
            "id" : "x02",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_7",
            "name" : "tei952",
            "ord" : "02",
            "time" : 1555228371611,
            "title" : "2.0 Install Tensorflow.js",
            "update_at" : 1556488166377
          },
          "x03" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nIn the following section I will show you how to build,\n train, and make predictions with TensorFlow.js. Our \n ML model is just a simple linear regression that \n takes a 1-dimensional value as its input and attempts\n  to fit a straight line to the dataset.</p>\n<p>After the model is trained, we will show the user a \nform input that will make a new prediction when the \nvalue changes. \n</code></pre>",
              "type" : "Html"
            },
            "id" : "x03",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_7",
            "name" : "tei952",
            "ord" : "03",
            "time" : 1555228371611,
            "title" : "3.0 Train a Basic TensorFlow.js Linear Model",
            "update_at" : 1556488166377
          },
          "x04" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nI will be writing all the code in app.component.ts. \nNotice how we are calling the train() method when the\n component is initialized. \nimport { Component, OnInit } from &#39;@angular/core&#39;;\nimport * as tf from &#39;@tensorflow/tfjs&#39;;</p>\n<p>@Component({...})\nexport class AppComponent implements OnInit {</p>\n<p>  linearModel: tf.Sequential;\n  prediction: any;</p>\n<p>  ngOnInit() {\n    this.train();\n  }</p>\n<p>  async train() {\n    // todo\n  }</p>\n<p>  predict(val) {\n    // todo\n  }\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x04",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_7",
            "name" : "tei952",
            "ord" : "04",
            "time" : 1555228371611,
            "title" : "4.0 Import TensorFlow.js",
            "update_at" : 1556488166377
          },
          "x05" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nMachine learning models are trained by iterating over \nbatches of samples and slowly optimizing the prediction.\n Most neural networks use some variation of gradient \n descent as an optimizer - we’re using Stochastic Gradient \n Descent (SGD) to minimize the Mean Squared Error (MSE). \n This is a highly complex area that could fill an entire\n  book. \nasync train(): Promise<any> {\n    // Define a model for linear regression.\n  this.linearModel = tf.sequential();\n  this.linearModel.add(tf.layers.dense({units: 1, inputShape: [1]}));</p>\n<p>  // Prepare the model for training: Specify the loss and the optimizer.\n  this.linearModel.compile({loss: &#39;meanSquaredError&#39;, optimizer: &#39;sgd&#39;});</p>\n<p>  // Training data, completely random stuff\n  const xs = tf.tensor1d([3.2, 4.4, 5.5]);\n  const ys = tf.tensor1d([1.6, 2.7, 3.5]);</p>\n<p>  // Train\n  await this.linearModel.fit(xs, ys)</p>\n<p>  console.log(&#39;model trained!&#39;)\n}\nWhat the hell is a tensor? There’s no easy explanation, but just think \nTensor === Array. It’s really just an abstraction of a multi-dimensional \narray for doing math in TensorFlow. If you want a detailed physical \nexplanation, watch this professor’s breakdown.\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x05",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_7",
            "name" : "tei952",
            "ord" : "05",
            "time" : 1555228371611,
            "title" : "5.0 Build a Machine Learning Model",
            "update_at" : 1556488166377
          },
          "x06" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nNow that our model is trained, we can feed it values to make \npredictions. TensorFlow runs in the context of a session, so \nwe need to call dataSync on the Tensor value to extract the \ndata out into something usable in JavaScript. \npredict(val: number) {\n  const output = this.linearModel.predict(tf.tensor2d([val], [1, 1])) as any;\n  this.prediction = Array.from(output.dataSync())[0]\n}\nWe can run this method as an event handler when the file of an HTML \nform input changes. \nTensorFlow says {{ prediction }}</p>\n<p><input type=\"number\" (change)=\"predict($event.target.value)\">\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x06",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_7",
            "name" : "tei952",
            "ord" : "06",
            "time" : 1555228371611,
            "title" : "6.0 Make a Prediction with the Model",
            "update_at" : 1556488166377
          },
          "x07" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>Training a model can be extremely CPU and memory intensive - that’s \nwhy most models are trained on high-powered GPUs that can distribute \nbillions of matrix multiplication operations efficiently. \nFortunately, we can use pre-trained models to bypass this step \ncompletely. This means we can skip straight to the fun part - making \npredictions. You can find models for a sorts of different applications \non Kaggle Kernels. \nIn the steps below, we will convert a Keras-based Convolutional Neural\n Network into a model that predicts the value of a handwritten digit \n from the famous MNIST dataset.</code></pre>",
              "type" : "Html"
            },
            "id" : "x07",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_7",
            "name" : "tei952",
            "ord" : "07",
            "time" : 1555228371611,
            "title" : "7.0 How to use Pre-Trained Python Keras Models",
            "update_at" : 1556488166377
          },
          "x08" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>TensorFlow.js has a Python CLI tool that converts an h5 model saved in \nKeras to a set files that can be used on the web. Install it by running:\npip install tensorflowjs\nAt this point, you will need to have a Keras model saved on your local \nsystem. If you clone the project for this lesson, you can run the \nfollowing command to generate your model. \ntensorflowjs_converter --input_format keras \\\n                       keras/cnn.h5 \\\n                       src/assets\nCurrently, I am saving the output in the assets folder of the Angular app,\n but TF can also read from a URL, so you can also save your model files \n in a cloud storage bucket.</code></pre>",
              "type" : "Html"
            },
            "id" : "x08",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_7",
            "name" : "tei952",
            "ord" : "08",
            "time" : 1555228371611,
            "title" : "8.0 Convert a Keras Model to TensorFlow.js",
            "update_at" : 1556488166377
          },
          "x09" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>Now we load the model with a simple one-liner. \nasync loadModel() {\n  this.model = await tf.loadModel(&#39;/assets/model.json&#39;);\n}</code></pre>",
              "type" : "Html"
            },
            "id" : "x09",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_7",
            "name" : "tei952",
            "ord" : "09",
            "time" : 1555228371611,
            "title" : "9.0 Load the Model",
            "update_at" : 1556488166377
          },
          "x10" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nNow that our model is loaded, it is expecting 4-dimensional image data \nin a shape of [any, 28, 28, 1] - that translates into batchsize, width \npixels, height pixels, and color channels. An even simpler way to think \nabout it is just an array of images with a single color channel. \nWe run our predictions inside of tf.tidy to clean up the intermediate \nmemory allocated to the tensors. Basically, we are just trying to avoid \nmemory leaks. \nTensorFlow.js gives us a fromPixels helper to convert an ImageData HTML\n object into a Tensor. You can also use a plain HTMLImageElement or even \n a video. Under the hood it turns the pixels into a 3D matrix of numbers. \nasync predict(imageData: ImageData) {</p>\n<p>  await tf.tidy(() =&gt; {</p>\n<pre><code>// Convert the canvas pixels to a Tensor of the matching shape\nlet img = tf.fromPixels(imageData, 1);\nimg = img.reshape([1, 28, 28, 1]);\nimg = tf.cast(img, &#39;float32&#39;);\n\n// Make and format the predications\nconst output = this.model.predict(img) as any;\n\n// Save predictions on the component\nthis.predictions = Array.from(output.dataSync()); \n</code></pre><p>  });</p>\n<p>}\nThe result of this method is an Array of 10 values that add up to a\n total of 1, which is a prediction function known as softmax. We can\n  use the index with highest probability as the prediction for the digit.\nGiven the prediction below, the model interprets the image drawn on\n the canvas is a value of 2 with 93% confidence.\n[0.02, 0.003, 0.93, ...]\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x10",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_7",
            "name" : "tei952",
            "ord" : "10",
            "time" : 1555228371611,
            "title" : "10.0 Make Predictions from Image Data",
            "update_at" : 1556488166377
          },
          "x11" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>Building and training machine learning models in the browser ushers\n in a whole new set of possibilities for web developers. I’m excited \n to see what people create with TensorFlow.js and hope this guide \n helps kickstart your project. If you want to see more advanced \n TensorFlow content, let me know in the comments or on Slack.</code></pre>",
              "type" : "Html"
            },
            "id" : "x11",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_7",
            "name" : "tei952",
            "ord" : "11",
            "time" : 1555228371611,
            "title" : "11.0 The End",
            "update_at" : 1556488166377
          },
          "x12" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "certificatePath" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledgecontents%2FiHmcxnnRDWPOJAE38On1nCdq0ir2%2F-LdLtaiBADqiIat-6k_7x12?alt=media&token=38038832-9b42-497d-92c7-5521e04a479e",
              "type" : "Certificate"
            },
            "id" : "x12",
            "knowledgeid" : "-LdLtaiBADqiIat-6k_7",
            "name" : "tei952",
            "ord" : "12",
            "time" : 1555228371611,
            "title" : "12.9 御修了ありがとうございました。",
            "update_at" : 1556488166377
          }
        }
      },
      "-LdLuLklhwL7keqLFNmD" : {
        "contents" : {
          "x01" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n基本类型有六种： null，undefined，boolean，number，string，symbol\n对象（Object）是引用类型，在使用过程中会遇到浅拷贝和深拷贝的问题。\nlet a = { name: &#39;FE&#39; }\nlet b = a\nb.name = &#39;EF&#39;\nconsole.log(a.name) // EF</p>\n<p>Typeof\ntypeof 1 // &#39;number&#39;\ntypeof &#39;1&#39; // &#39;string&#39;\ntypeof undefined // &#39;undefined&#39;\ntypeof true // &#39;boolean&#39;\ntypeof Symbol() // &#39;symbol&#39;\ntypeof b // b 没有声明，但是还会显示 undefined\ntypeof [] // &#39;object&#39;\ntypeof {} // &#39;object&#39;\ntypeof console.log // &#39;function&#39;\ntypeof null // &#39;object&#39;\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x01",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "tei952",
            "ord" : "01",
            "time" : 1555228371611,
            "title" : "1.0 内置类型",
            "update_at" : 1556488166377
          },
          "x02" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "answer" : "a",
              "options" : {
                "a" : "symbol",
                "b" : "undefined",
                "c" : "object",
                "d" : "function"
              },
              "title" : "typeof Symbol()的结果是",
              "type" : "Select"
            },
            "id" : "x02",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "tei952",
            "ord" : "02",
            "time" : 1555228371611,
            "title" : "1.1 内置类型选择题",
            "update_at" : 1556488166377
          },
          "x03" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "inputanswer" : "Object",
              "inputcontent" : "对象（）是引用类型，在使用过程中会遇到浅拷贝和深拷贝的问题",
              "title" : "在（）中填入正确文字",
              "type" : "Input"
            },
            "id" : "x03",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "tei952",
            "ord" : "03",
            "time" : 1555228371611,
            "title" : "1.2 内置类型填空题",
            "update_at" : 1556488166377
          },
          "x04" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>在条件判断时，除了 undefined， null， false， NaN， &#39;&#39;， 0， -0，其他所有值都转为 true，包括所有对象。\n对象在转换基本类型时，首先会调用 valueOf 然后调用 toString。并且这两个方法你是可以重写的。\nlet a = {\n  valueOf() {\n    return 0;\n  },\n  toString() {\n    return &#39;1&#39;;\n  },\n  [Symbol.toPrimitive]() {\n    return 2;\n  }\n}\n1 + a // =&gt; 3\n&#39;1&#39; + a // =&gt; &#39;12&#39;</code></pre>",
              "type" : "Html"
            },
            "id" : "x04",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "tei952",
            "ord" : "04",
            "time" : 1555228371611,
            "title" : "2.0 类型转换",
            "update_at" : 1556488166377
          },
          "x05" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "answer" : "d",
              "options" : {
                "a" : "undefined",
                "b" : "null",
                "c" : "false",
                "d" : "&#39;1&#39;"
              },
              "title" : "在条件判断时转化为true的是",
              "type" : "Select"
            },
            "id" : "x05",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "tei952",
            "ord" : "05",
            "time" : 1555228371611,
            "title" : "2.1 类型转换选择题",
            "update_at" : 1556488166377
          },
          "x06" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "inputanswer" : "false",
              "inputcontent" : "在条件判断时-0转化为（）",
              "title" : "在（）中填入正确文字",
              "type" : "Input"
            },
            "id" : "x06",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "tei952",
            "ord" : "06",
            "time" : 1555228371611,
            "title" : "2.2 类型转换填空题",
            "update_at" : 1556488166377
          },
          "x07" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>// [] 转成 true，然后取反变成 false\n[] == false\n// 根据第 8 条得出\n[] == ToNumber(false)\n[] == 0\n// 根据第 10 条得出\nToPrimitive([]) == 0\n// [].toString() -&gt; &#39;&#39;\n&#39;&#39; == 0\n// 根据第 6 条得出\n0 == 0 // -&gt; true</code></pre>",
              "type" : "Html"
            },
            "id" : "x07",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "tei952",
            "ord" : "07",
            "time" : 1555228371611,
            "title" : "3.0 == 操作符",
            "update_at" : 1556488166377
          },
          "x08" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "answer" : "c",
              "options" : {
                "a" : "[] == false",
                "b" : "[] == 0",
                "c" : "ToPrimitive([]) ！== 0",
                "d" : "&#39;&#39; == 0"
              },
              "title" : "下述选择答案为false的是",
              "type" : "Select"
            },
            "id" : "x08",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "tei952",
            "ord" : "08",
            "time" : 1555228371611,
            "title" : "3.1 == 操作符选择题",
            "update_at" : 1556488166377
          },
          "x09" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "inputanswer" : "true",
              "inputcontent" : "0 == 0的结果是（）",
              "title" : "在（）中填入正确文字",
              "type" : "Input"
            },
            "id" : "x09",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "tei952",
            "ord" : "09",
            "time" : 1555228371611,
            "title" : "3.2 == 操作符填空题",
            "update_at" : 1556488166377
          },
          "x10" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n每个函数都有 prototype 属性，除了 Function.prototype.bind()，该属性指向原型。\n每个对象都有 <strong>proto</strong> 属性，指向了创建该对象的构造函数的原型。其实这个属性指向了 [[prototype]]，但是 [[prototype]] 是内部属性，我们并不能访问到，所以使用 <em>proto</em> 来访问。\n对象可以通过 <strong>proto</strong> 来寻找不属于该对象的属性，<strong>proto</strong> 将对象连接起来组成了原型链。\nnew\nfunction create() {\n    // 创建一个空的对象\n    let obj = new Object()\n    // 获得构造函数\n    let Con = [].shift.call(arguments)\n    // 链接到原型\n    obj.<strong>proto</strong> = Con.prototype\n    // 绑定 this，执行构造函数\n    let result = Con.apply(obj, arguments)\n    // 确保 new 出来的是个对象\n    return typeof result === &#39;object&#39; ? result : obj\n}</p>\n<p>function Foo() {\n    return this;\n}\nFoo.getName = function () {\n    console.log(&#39;1&#39;);\n};\nFoo.prototype.getName = function () {\n    console.log(&#39;2&#39;);\n};</p>\n<p>new Foo.getName();   // -&gt; 1\nnew Foo().getName(); // -&gt; 2<br></code></pre>",
              "type" : "Html"
            },
            "id" : "x10",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "tei952",
            "ord" : "10",
            "time" : 1555228371611,
            "title" : "4.0 prototype",
            "update_at" : 1556488166377
          },
          "x11" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>function instanceof(left, right) {\n    // 获得类型的原型\n    let prototype = right.prototype\n    // 获得对象的原型\n    left = left.__proto__\n    // 判断对象的类型是否等于类型的原型\n    while (true) {\n        if (left === null)\n            return false\n        if (prototype === left)\n            return true\n        left = left.__proto__\n    }\n}</code></pre>",
              "type" : "Html"
            },
            "id" : "x11",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "tei952",
            "ord" : "11",
            "time" : 1555228371611,
            "title" : "5.0 instanceof",
            "update_at" : 1556488166377
          },
          "x12" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nfunction foo() {\n    console.log(this.a)\n}\nvar a = 1\nfoo()</p>\n<p>var obj = {\n    a: 2,\n    foo: foo\n}\nobj.foo()\n// 以上两者情况 this 只依赖于调用函数前的对象，优先级是第二个情况大于第一个情况\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x12",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "tei952",
            "ord" : "12",
            "time" : 1555228371611,
            "title" : "6.0 this",
            "update_at" : 1556488166377
          },
          "x13" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n全局执行上下文\n函数执行上下文\neval 执行上下文\nvar foo = 1\n(function foo() {\n    foo = 10\n    console.log(foo)\n}()) // -&gt; ƒ foo() { foo = 10 ; console.log(foo) }</p>\n<p>var 会产生很多错误，所以在 ES6中引入了 let。let 不能在声明前使用，但是这并不是常说的 let 不会提升，let 提升了声明但没有赋值，因为临时死区导致了并不能在声明前使用。\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x13",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "tei952",
            "ord" : "13",
            "time" : 1555228371611,
            "title" : "7.0 执行上下文",
            "update_at" : 1556488166377
          },
          "x14" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n函数 A 返回了一个函数 B，并且函数 B 中使用了函数 A 的变量，函数 B 就被称为闭包。\nfor ( var i=1; i&lt;=5; i++) {\n    setTimeout( function timer() {\n        console.log( i );\n    }, i*1000 );\n}</p>\n<p>for (var i = 1; i &lt;= 5; i++) {\n  (function(j) {\n    setTimeout(function timer() {\n      console.log(j);\n    }, j * 1000);\n  })(i);\n}</p>\n<p>for ( var i=1; i&lt;=5; i++) {\n    setTimeout( function timer(j) {\n        console.log( j );\n    }, i*1000, i);\n}</p>\n<p>for ( let i=1; i&lt;=5; i++) {\n    setTimeout( function timer() {\n        console.log( i );\n    }, i*1000 );\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x14",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "tei952",
            "ord" : "14",
            "time" : 1555228371611,
            "title" : "8.0 闭包:",
            "update_at" : 1556488166377
          },
          "x15" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nlet a = {\n    age: 1\n}\nlet b = a\na.age = 2\nconsole.log(b.age) // 2</p>\n<p>let a = {\n    age: 1\n}\nlet b = Object.assign({}, a)\na.age = 2\nconsole.log(b.age) // 1\nlet a = {\n    age: 1\n}\nlet b = {...a}//展开运算符（…）\na.age = 2\nconsole.log(b.age) // 1\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x15",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "tei952",
            "ord" : "15",
            "time" : 1555228371611,
            "title" : "9.0 浅拷贝",
            "update_at" : 1556488166377
          },
          "x16" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nlet a = {\n    age: 1,\n    jobs: {\n        first: &#39;FE&#39;\n    }\n}\nlet b = {...a}\na.jobs.first = &#39;native&#39;\nconsole.log(b.jobs.first) // native</p>\n<p>let a = {\n    age: 1,\n    jobs: {\n        first: &#39;FE&#39;\n    }\n}\nlet b = JSON.parse(JSON.stringify(a))\na.jobs.first = &#39;native&#39;\nconsole.log(b.jobs.first) // FE</p>\n<p>但是在通常情况下，复杂数据都是可以序列化的，所以这个函数可以解决大部分问题，并且该函数是内置函数中处理深拷贝性能最快的。当然如果你的数据中含有以上三种情况下，可以使用 lodash 的深拷贝函数。\nfunction structuralClone(obj) {\n  return new Promise(resolve =&gt; {\n    const {port1, port2} = new MessageChannel();\n    port2.onmessage = ev =&gt; resolve(ev.data);\n    port1.postMessage(obj);\n  });\n}</p>\n<p>var obj = {a: 1, b: {\n    c: b\n}}\n// 注意该方法是异步的\n// 可以处理 undefined 和循环引用对象\n(async () =&gt; {\n  const clone = await structuralClone(obj)\n})()</p>\n<p>在有 Babel 的情况下，我们可以直接使用 ES6 的模块化</p>\n<p>// file a.js\nexport function a() {}\nexport function b() {}\n// file b.js\nexport default function() {}</p>\n<p>import {a, b} from &#39;./a.js&#39;\nimport XXX from &#39;./b.js&#39;</p>\n<p>CommonJS\nCommonJs 是 Node 独有的规范，浏览器中使用就需要用到 Browserify 解析了。\n// a.js\nmodule.exports = {\n    a: 1\n}\n// or\nexports.a = 1</p>\n<p>// b.js\nvar module = require(&#39;./a.js&#39;)\nmodule.a // -&gt; log 1</p>\n<p>var module = require(&#39;./a.js&#39;)\nmodule.a\n// 这里其实就是包装了一层立即执行函数，这样就不会污染全局变量了，\n// 重要的是 module 这里，module 是 Node 独有的一个变量\nmodule.exports = {\n    a: 1\n}\n// 基本实现\nvar module = {\n  exports: {} // exports 就是个空对象\n}\n// 这个是为什么 exports 和 module.exports 用法相似的原因\nvar exports = module.exports\nvar load = function (module) {\n    // 导出的东西\n    var a = 1\n    module.exports = a\n    return module.exports\n};\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x16",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "tei952",
            "ord" : "16",
            "time" : 1555228371611,
            "title" : "10.0 深拷贝",
            "update_at" : 1556488166377
          },
          "x17" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>// AMD\ndefine([&#39;./a&#39;, &#39;./b&#39;], function(a, b) {\n    a.do()\n    b.do()\n})\ndefine(function(require, exports, module) {   \n    var a = require(&#39;./a&#39;)  \n    a.doSomething()   \n    var b = require(&#39;./b&#39;)\n    b.doSomething()\n})</code></pre>",
              "type" : "Html"
            },
            "id" : "x17",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "tei952",
            "ord" : "17",
            "time" : 1555228371611,
            "title" : "11.0 AMD:AMD 是由 RequireJS 提出的",
            "update_at" : 1556488166377
          },
          "x18" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n// func是用户传入需要防抖的函数\n// wait是等待时间\nconst debounce = (func, wait = 50) =&gt; {\n  // 缓存一个定时器id\n  let timer = 0\n  // 这里返回的函数是每次用户实际调用的防抖函数\n  // 如果已经设定过定时器了就清空上一次的定时器\n  // 开始一个新的定时器，延迟执行用户传入的方法\n  return function(...args) {\n    if (timer) clearTimeout(timer)\n    timer = setTimeout(() =&gt; {\n      func.apply(this, args)\n    }, wait)\n  }\n}\n// 不难看出如果用户调用该函数的间隔小于wait的情况下，上一次的时间还未到就被清除了，并不会执行函数</p>\n<p>// 这个是用来获取当前时间戳的\nfunction now() {\n  return +new Date()\n}\n/*<em>\n </em> 防抖函数，返回函数连续调用时，空闲时间必须大于或等于 wait，func 才会执行\n <em>\n </em> @param  {function} func        回调函数\n <em> @param  {number}   wait        表示时间窗口的间隔\n </em> @param  {boolean}  immediate   设置为ture时，是否立即调用函数\n <em> @return {function}             返回客户调用函数\n </em>/\nfunction debounce (func, wait = 50, immediate = true) {\n  let timer, context, args</p>\n<p>  // 延迟执行函数\n  const later = () =&gt; setTimeout(() =&gt; {\n    // 延迟函数执行完毕，清空缓存的定时器序号\n    timer = null\n    // 延迟执行的情况下，函数会在延迟函数中执行\n    // 使用到之前缓存的参数和上下文\n    if (!immediate) {\n      func.apply(context, args)\n      context = args = null\n    }\n  }, wait)</p>\n<p>  // 这里返回的函数是每次实际调用的函数\n  return function(...params) {\n    // 如果没有创建延迟执行函数（later），就创建一个\n    if (!timer) {\n      timer = later()\n      // 如果是立即执行，调用函数\n      // 否则缓存参数和调用上下文\n      if (immediate) {\n        func.apply(this, params)\n      } else {\n        context = this\n        args = params\n      }\n    // 如果已有延迟执行函数（later），调用的时候清除原来的并重新设定一个\n    // 这样做延迟函数会重新计时\n    } else {\n      clearTimeout(timer)\n      timer = later()\n    }\n  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x18",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "tei952",
            "ord" : "18",
            "time" : 1555228371611,
            "title" : "12.0 防抖",
            "update_at" : 1556488166377
          },
          "x19" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>/**\n * underscore 节流函数，返回函数连续调用时，func 执行频率限定为 次 / wait\n *\n * @param  {function}   func      回调函数\n * @param  {number}     wait      表示时间窗口的间隔\n * @param  {object}     options   如果想忽略开始函数的的调用，传入{leading: false}。\n *                                如果想忽略结尾函数的调用，传入{trailing: false}\n *                                两者不能共存，否则函数不能执行\n * @return {function}             返回客户调用函数   \n */\n_.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    // 之前的时间戳\n    var previous = 0;\n    // 如果 options 没传则设为空对象\n    if (!options) options = {};\n    // 定时器回调函数\n    var later = function() {\n      // 如果设置了 leading，就将 previous 设为 0\n      // 用于下面函数的第一个 if 判断\n      previous = options.leading === false ? 0 : _.now();\n      // 置空一是为了防止内存泄漏，二是为了下面的定时器判断\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      // 获得当前时间戳\n      var now = _.now();\n      // 首次进入前者肯定为 true\n      // 如果需要第一次不执行函数\n      // 就将上次时间戳设为当前的\n      // 这样在接下来计算 remaining 的值时会大于0\n      if (!previous &amp;&amp; options.leading === false) previous = now;\n      // 计算剩余时间\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      // 如果当前调用已经大于上次调用时间 + wait\n      // 或者用户手动调了时间\n       // 如果设置了 trailing，只会进入这个条件\n      // 如果没有设置 leading，那么第一次会进入这个条件\n      // 还有一点，你可能会觉得开启了定时器那么应该不会进入这个 if 条件了\n      // 其实还是会进入的，因为定时器的延时\n      // 并不是准确的时间，很可能你设置了2秒\n      // 但是他需要2.2秒才触发，这时候就会进入这个条件\n      if (remaining &lt;= 0 || remaining &gt; wait) {\n        // 如果存在定时器就清理掉否则会调用二次回调\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout &amp;&amp; options.trailing !== false) {\n        // 判断是否设置了定时器和 trailing\n        // 没有的话就开启一个定时器\n        // 并且不能不能同时设置 leading 和 trailing\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };</code></pre>",
              "type" : "Html"
            },
            "id" : "x19",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "tei952",
            "ord" : "19",
            "time" : 1555228371611,
            "title" : "13.0 节流",
            "update_at" : 1556488166377
          },
          "x20" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n在 ES5 中，我们可以使用如下方式解决继承的问题\nfunction Super() {}\nSuper.prototype.getNumber = function() {\n  return 1\n}</p>\n<p>function Sub() {}\nlet s = new Sub()\nSub.prototype = Object.create(Super.prototype, {\n  constructor: {\n    value: Sub,\n    enumerable: false,\n    writable: true,\n    configurable: true\n  }\n})</p>\n<p>在 ES6 中，我们可以通过 class 语法轻松解决这个问题</p>\n<p>class MyDate extends Date {\n  test() {\n    return this.getTime()\n  }\n}\nlet myDate = new MyDate()\nmyDate.test()</p>\n<p>call, apply, bind 区别\nlet a = {\n    value: 1\n}\nfunction getValue(name, age) {\n    console.log(name)\n    console.log(age)\n    console.log(this.value)\n}\ngetValue.call(a, &#39;yck&#39;, &#39;24&#39;)\ngetValue.apply(a, [&#39;yck&#39;, &#39;24&#39;])</p>\n<p>call, apply, bind 区别\nall 和 apply 都是为了解决改变 this 的指向。作用都是相同的，只是传参的方式不同。\nlet a = {\n    value: 1\n}\nfunction getValue(name, age) {\n    console.log(name)\n    console.log(age)\n    console.log(this.value)\n}\ngetValue.call(a, &#39;yck&#39;, &#39;24&#39;)\ngetValue.apply(a, [&#39;yck&#39;, &#39;24&#39;])</p>\n<p>Function.prototype.myCall = function (context) {\n  var context = context || window\n  // 给 context 添加一个属性\n  // getValue.call(a, &#39;yck&#39;, &#39;24&#39;) =&gt; a.fn = getValue\n  context.fn = this\n  // 将 context 后面的参数取出来\n  var args = [...arguments].slice(1)\n  // getValue.call(a, &#39;yck&#39;, &#39;24&#39;) =&gt; a.fn(&#39;yck&#39;, &#39;24&#39;)\n  var result = context.fn(...args)\n  // 删除 fn\n  delete context.fn\n  return result\n}</p>\n<p>Function.prototype.myApply = function (context) {\n  var context = context || window\n  context.fn = this</p>\n<p>  var result\n  // 需要判断是否存储第二个参数\n  // 如果存在，就将第二个参数展开\n  if (arguments[1]) {\n    result = context.fn(...arguments[1])\n  } else {\n    result = context.fn()\n  }</p>\n<p>  delete context.fn\n  return result\n}</p>\n<p>Function.prototype.myBind = function (context) {\n  if (typeof this !== &#39;function&#39;) {\n    throw new TypeError(&#39;Error&#39;)\n  }\n  var _this = this\n  var args = [...arguments].slice(1)\n  // 返回一个函数\n  return function F() {\n    // 因为返回了一个函数，我们可以 new F()，所以需要判断\n    if (this instanceof F) {\n      return new _this(...args, ...arguments)\n    }\n    return _this.apply(context, args.concat(...arguments))\n  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x20",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "tei952",
            "ord" : "20",
            "time" : 1555228371611,
            "title" : "14.0 继承",
            "update_at" : 1556488166377
          },
          "x21" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nPromise 是 ES6 新增的语法，解决了回调地狱的问题。\n// 三种状态\nconst PENDING = &quot;pending&quot;;\nconst RESOLVED = &quot;resolved&quot;;\nconst REJECTED = &quot;rejected&quot;;\n// promise 接收一个函数参数，该函数会立即执行\nfunction MyPromise(fn) {\n  let _this = this;\n  _this.currentState = PENDING;\n  _this.value = undefined;\n  // 用于保存 then 中的回调，只有当 promise\n  // 状态为 pending 时才会缓存，并且每个实例至多缓存一个\n  _this.resolvedCallbacks = [];\n  _this.rejectedCallbacks = [];</p>\n<p>  _this.resolve = function (value) {\n    if (value instanceof MyPromise) {\n      // 如果 value 是个 Promise，递归执行\n      return value.then(_this.resolve, _this.reject)\n    }\n    setTimeout(() =&gt; { // 异步执行，保证执行顺序\n      if (_this.currentState === PENDING) {\n        _this.currentState = RESOLVED;\n        _this.value = value;\n        _this.resolvedCallbacks.forEach(cb =&gt; cb());\n      }\n    })\n  };</p>\n<p>  _this.reject = function (reason) {\n    setTimeout(() =&gt; { // 异步执行，保证执行顺序\n      if (_this.currentState === PENDING) {\n        _this.currentState = REJECTED;\n        _this.value = reason;\n        _this.rejectedCallbacks.forEach(cb =&gt; cb());\n      }\n    })\n  }\n  // 用于解决以下问题\n  // new Promise(() =&gt; throw Error(&#39;error))\n  try {\n    fn(_this.resolve, _this.reject);\n  } catch (e) {\n    _this.reject(e);\n  }\n}</p>\n<p>MyPromise.prototype.then = function (onResolved, onRejected) {\n  var self = this;\n  // 规范 2.2.7，then 必须返回一个新的 promise\n  var promise2;\n  // 规范 2.2.onResolved 和 onRejected 都为可选参数\n  // 如果类型不是函数需要忽略，同时也实现了透传\n  // Promise.resolve(4).then().then((value) =&gt; console.log(value))\n  onResolved = typeof onResolved === &#39;function&#39; ? onResolved : v =&gt; v;\n  onRejected = typeof onRejected === &#39;function&#39; ? onRejected : r =&gt; throw r;</p>\n<p>  if (self.currentState === RESOLVED) {\n    return (promise2 = new MyPromise(function (resolve, reject) {\n      // 规范 2.2.4，保证 onFulfilled，onRjected 异步执行\n      // 所以用了 setTimeout 包裹下\n      setTimeout(function () {\n        try {\n          var x = onResolved(self.value);\n          resolutionProcedure(promise2, x, resolve, reject);\n        } catch (reason) {\n          reject(reason);\n        }\n      });\n    }));\n  }</p>\n<p>  if (self.currentState === REJECTED) {\n    return (promise2 = new MyPromise(function (resolve, reject) {\n      setTimeout(function () {\n        // 异步执行onRejected\n        try {\n          var x = onRejected(self.value);\n          resolutionProcedure(promise2, x, resolve, reject);\n        } catch (reason) {\n          reject(reason);\n        }\n      });\n    }));\n  }</p>\n<p>  if (self.currentState === PENDING) {\n    return (promise2 = new MyPromise(function (resolve, reject) {\n      self.resolvedCallbacks.push(function () {\n        // 考虑到可能会有报错，所以使用 try/catch 包裹\n        try {\n          var x = onResolved(self.value);\n          resolutionProcedure(promise2, x, resolve, reject);\n        } catch (r) {\n          reject(r);\n        }\n      });</p>\n<pre><code>  self.rejectedCallbacks.push(function () {\n    try {\n      var x = onRejected(self.value);\n      resolutionProcedure(promise2, x, resolve, reject);\n    } catch (r) {\n      reject(r);\n    }\n  });\n}));\n</code></pre><p>  }\n};\n// 规范 2.3\nfunction resolutionProcedure(promise2, x, resolve, reject) {\n  // 规范 2.3.1，x 不能和 promise2 相同，避免循环引用\n  if (promise2 === x) {\n    return reject(new TypeError(&quot;Error&quot;));\n  }\n  // 规范 2.3.2\n  // 如果 x 为 Promise，状态为 pending 需要继续等待否则执行\n  if (x instanceof MyPromise) {\n    if (x.currentState === PENDING) {\n      x.then(function (value) {\n        // 再次调用该函数是为了确认 x resolve 的\n        // 参数是什么类型，如果是基本类型就再次 resolve\n        // 把值传给下个 then\n        resolutionProcedure(promise2, value, resolve, reject);\n      }, reject);\n    } else {\n      x.then(resolve, reject);\n    }\n    return;\n  }\n  // 规范 2.3.3.3.3\n  // reject 或者 resolve 其中一个执行过得话，忽略其他的\n  let called = false;\n  // 规范 2.3.3，判断 x 是否为对象或者函数\n  if (x !== null &amp;&amp; (typeof x === &quot;object&quot; || typeof x === &quot;function&quot;)) {\n    // 规范 2.3.3.2，如果不能取出 then，就 reject\n    try {\n      // 规范 2.3.3.1\n      let then = x.then;\n      // 如果 then 是函数，调用 x.then\n      if (typeof then === &quot;function&quot;) {\n        // 规范 2.3.3.3\n        then.call(\n          x,\n          y =&gt; {\n            if (called) return;\n            called = true;\n            // 规范 2.3.3.3.1\n            resolutionProcedure(promise2, y, resolve, reject);\n          },\n          e =&gt; {\n            if (called) return;\n            called = true;\n            reject(e);\n          }\n        );\n      } else {\n        // 规范 2.3.3.4\n        resolve(x);\n      }\n    } catch (e) {\n      if (called) return;\n      called = true;\n      reject(e);\n    }\n  } else {\n    // 规范 2.3.4，x 为基本类型\n    resolve(x);\n  }\n}</p>\n<p>Generator 实现\nGenerator 是 ES6 中新增的语法，和 Promise 一样，都可以用来异步编程\n// 使用 <em> 表示这是一个 Generator 函数\n// 内部可以通过 yield 暂停代码\n// 通过调用 next 恢复执行\nfunction</em> test() {\n  let a = 1 + 2;\n  yield 2;\n  yield 3;\n}\nlet b = test();\nconsole.log(b.next()); // &gt;  { value: 2, done: false }\nconsole.log(b.next()); // &gt;  { value: 3, done: false }\nconsole.log(b.next()); // &gt;  { value: undefined, done: true }</p>\n<p>// cb 也就是编译过的 test 函数\nfunction generator(cb) {\n  return (function() {\n    var object = {\n      next: 0,\n      stop: function() {}\n    };</p>\n<pre><code>return {\n  next: function() {\n    var ret = cb(object);\n    if (ret === undefined) return { value: undefined, done: true };\n    return {\n      value: ret,\n      done: false\n    };\n  }\n};\n</code></pre><p>  })();\n}\n// 如果你使用 babel 编译后可以发现 test 函数变成了这样\nfunction test() {\n  var a;\n  return generator(function(_context) {\n    while (1) {\n      switch ((_context.prev = _context.next)) {\n        // 可以发现通过 yield 将代码分割成几块\n        // 每次执行 next 函数就执行一块代码\n        // 并且表明下次需要执行哪块代码\n        case 0:\n          a = 1 + 2;\n          _context.next = 4;\n          return 2;\n        case 4:\n          _context.next = 6;\n          return 3;\n        // 执行完毕\n        case 6:\n        case &quot;end&quot;:\n          return _context.stop();\n      }\n    }\n  });\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x21",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "tei952",
            "ord" : "21",
            "time" : 1555228371611,
            "title" : "15.0 Promise 实现",
            "update_at" : 1556488166377
          },
          "x22" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n[1, 2, 3].map((v) =&gt; v + 1)\n// -&gt; [2, 3, 4]</p>\n<p>[&#39;1&#39;,&#39;2&#39;,&#39;3&#39;].map(parseInt)\n//  parseInt(&#39;1&#39;, 0) -&gt; 1\n//  parseInt(&#39;2&#39;, 1) -&gt; NaN\n//  parseInt(&#39;3&#39;, 2) -&gt; NaN</p>\n<p>[1, [2], 3].flatMap((v) =&gt; v + 1)\n// -&gt; [2, 3, 4]\n如果想将一个多维数组彻底的降维，可以这样实现\nconst flattenDeep = (arr) =&gt; Array.isArray(arr)\n  ? arr.reduce( (a, b) =&gt; [...a, ...flattenDeep(b)] , [])\n  : [arr]</p>\n<p>flattenDeep([1, [[2], [3, [4]], 5]])</p>\n<p>Reduce 作用是数组中的值组合起来，最终得到一个值\nfunction a() {\n    console.log(1);\n}</p>\n<p>function b() {\n    console.log(2);\n}</p>\n<p>[a, b].reduce((a, b) =&gt; a(b()))\n// -&gt; 2 1\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x22",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "tei952",
            "ord" : "22",
            "time" : 1555228371611,
            "title" : "16.0 Map、FlatMap 和 Reduce",
            "update_at" : 1556488166377
          },
          "x23" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n一个函数如果加上 async ，那么该函数就会返回一个 Promise\nasync function test() {\n  return &quot;1&quot;;\n}\nconsole.log(test()); // -&gt; Promise {<resolved>: &quot;1&quot;}</p>\n<p>await 只能在 async 函数中使用\nfunction sleep() {\n  return new Promise(resolve =&gt; {\n    setTimeout(() =&gt; {\n      console.log(&#39;finish&#39;)\n      resolve(&quot;sleep&quot;);\n    }, 2000);\n  });\n}\nasync function test() {\n  let value = await sleep();\n  console.log(&quot;object&quot;);\n}\ntest()\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x23",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "tei952",
            "ord" : "23",
            "time" : 1555228371611,
            "title" : "17.0 async 和 await",
            "update_at" : 1556488166377
          },
          "x24" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nProxy 是 ES6 中新增的功能，可以用来自定义对象中的操作\nlet p = new Proxy(target, handler);\n// target 代表需要添加代理的对象\n// handler 用来自定义对象中的操作</p>\n<p>可以很方便的使用 Proxy 来实现一个数据绑定和监听\nlet onWatch = (obj, setBind, getLogger) =&gt; {\n  let handler = {\n    get(target, property, receiver) {\n      getLogger(target, property)\n      return Reflect.get(target, property, receiver);\n    },\n    set(target, property, value, receiver) {\n      setBind(value);\n      return Reflect.set(target, property, value);\n    }\n  };\n  return new Proxy(obj, handler);\n};</p>\n<p>let obj = { a: 1 }\nlet value\nlet p = onWatch(obj, (v) =&gt; {\n  value = v\n}, (target, property) =&gt; {\n  console.log(Get &#39;${property}&#39; = ${target[property]});\n})\np.a = 2 // bind value to 2\np.a // -&gt; Get &#39;a&#39; = 2\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x24",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "tei952",
            "ord" : "24",
            "time" : 1555228371611,
            "title" : "18.0 Proxy",
            "update_at" : 1556488166377
          },
          "x25" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "certificatePath" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledgecontents%2FiHmcxnnRDWPOJAE38On1nCdq0ir2%2F-LdLuLklhwL7keqLFNmDx25?alt=media&token=633b163a-b613-44a4-bef9-1df86a737939",
              "type" : "Certificate"
            },
            "id" : "x25",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "tei952",
            "ord" : "25",
            "time" : 1555228371611,
            "title" : "19.9 学習終了頂きまして、おめでとうございます！",
            "update_at" : 1556488166377
          }
        }
      },
      "-LdLuU-AHWwvMHDT-QpQ" : {
        "contents" : {
          "x01" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nnextTick 可以让我们在下次 DOM 更新循环结束之后执行延迟回调，用于获得更新后的 DOM。</p>\n<p>在 Vue 2.4 之前都是使用的 microtasks，但是 microtasks 的优先级过高，在某些情况下可能会出现比事件冒泡更快的情况，但如果都使用 macrotasks 又可能会出现渲染的性能问题。所以在新版本中，会默认使用 microtasks，但在特殊情况下会使用 macrotasks，比如 v-on。</p>\n<p>对于实现 macrotasks ，会先判断是否能使用 setImmediate ，不能的话降级为 MessageChannel ，以上都不行的话就使用 setTimeout </p>\n<p>js\nif (typeof setImmediate !== &#39;undefined&#39; &amp;&amp; isNative(setImmediate)) {\n  macroTimerFunc = () =&gt; {\n    setImmediate(flushCallbacks)\n  }\n} else if (\n  typeof MessageChannel !== &#39;undefined&#39; &amp;&amp;\n  (isNative(MessageChannel) ||\n    // PhantomJS\n    MessageChannel.toString() === &#39;[object MessageChannelConstructor]&#39;)\n) {\n  const channel = new MessageChannel()\n  const port = channel.port2\n  channel.port1.onmessage = flushCallbacks\n  macroTimerFunc = () =&gt; {\n    port.postMessage(1)\n  }\n} else {\n  /<em> istanbul ignore next </em>/\n  macroTimerFunc = () =&gt; {\n    setTimeout(flushCallbacks, 0)\n  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x01",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "01",
            "time" : 1555228371611,
            "title" : "1.0 NextTick 原理分析",
            "update_at" : 1556488166377
          },
          "x02" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>js\nexport function nextTick(cb?: Function, ctx?: Object) {\n  let _resolve\n  // 将回调函数整合进一个数组中\n  callbacks.push(() =&gt; {\n    if (cb) {\n      try {\n        cb.call(ctx)\n      } catch (e) {\n        handleError(e, ctx, &#39;nextTick&#39;)\n      }\n    } else if (_resolve) {\n      _resolve(ctx)\n    }\n  })\n  if (!pending) {\n    pending = true\n    if (useMacroTask) {\n      macroTimerFunc()\n    } else {\n      microTimerFunc()\n    }\n  }\n  // 判断是否可以使用 Promise \n  // 可以的话给 _resolve 赋值\n  // 这样回调函数就能以 promise 的方式调用\n  if (!cb &amp;&amp; typeof Promise !== &#39;undefined&#39;) {\n    return new Promise(resolve =&gt; {\n      _resolve = resolve\n    })\n  }\n}</code></pre>",
              "type" : "Html"
            },
            "id" : "x02",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "02",
            "time" : 1555228371611,
            "title" : "2.0 nextTick 同时也支持 Promise 的使用，会判断是否实现了 Promise",
            "update_at" : 1556488166377
          },
          "x03" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n生命周期函数就是组件在初始化或者数据更新时会触发的钩子函数。</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/7/12/1648d9df78201f07?w=1200&amp;h=3039&amp;f=png&amp;s=50021\" alt=\"\"></p>\n<p>在初始化时，会调用以下代码，生命周期就是通过 callHook 调用的</p>\n<p>js\nVue.prototype._init = function(options) {\n    initLifecycle(vm)\n    initEvents(vm)\n    initRender(vm)\n    callHook(vm, &#39;beforeCreate&#39;) // 拿不到 props data\n    initInjections(vm) \n    initState(vm)\n    initProvide(vm)\n    callHook(vm, &#39;created&#39;)\n}</p>\n<p>可以发现在以上代码中，beforeCreate 调用的时候，是获取不到 props 或者 data 中的数据的，因为这些数据的初始化都在 initState 中。\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x03",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "03",
            "time" : 1555228371611,
            "title" : "3.0 生命周期分析",
            "update_at" : 1556488166377
          },
          "x04" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n接下来会执行挂载函数</p>\n<p>js\nexport function mountComponent {\n    callHook(vm, &#39;beforeMount&#39;)\n    // ...\n    if (vm.$vnode == null) {\n        vm._isMounted = true\n        callHook(vm, &#39;mounted&#39;)\n    }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x04",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "04",
            "time" : 1555228371611,
            "title" : "4.0 挂载函数",
            "update_at" : 1556488166377
          },
          "x05" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n接下来是数据更新时会调用的钩子函数</p>\n<p>js\nfunction flushSchedulerQueue() {\n  // ...\n  for (index = 0; index &lt; queue.length; index++) {\n    watcher = queue[index]\n    if (watcher.before) {\n      watcher.before() // 调用 beforeUpdate\n    }\n    id = watcher.id\n    has[id] = null\n    watcher.run()\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== &#39;production&#39; &amp;&amp; has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1\n      if (circular[id] &gt; MAX_UPDATE_COUNT) {\n        warn(\n          &#39;You may have an infinite update loop &#39; +\n            (watcher.user\n              ? in watcher with expression &quot;${watcher.expression}&quot;\n              : in a component render function.),\n          watcher.vm\n        )\n        break\n      }\n    }\n  }\n  callUpdatedHooks(updatedQueue)\n}</p>\n<p>function callUpdatedHooks(queue) {\n  let i = queue.length\n  while (i--) {\n    const watcher = queue[i]\n    const vm = watcher.vm\n    if (vm._watcher === watcher &amp;&amp; vm._isMounted) {\n      callHook(vm, &#39;updated&#39;)\n    }\n  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x05",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "05",
            "time" : 1555228371611,
            "title" : "5.0 钩子函数",
            "update_at" : 1556488166377
          },
          "x06" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n上图还有两个生命周期没有说，分别为 activated 和 deactivated ，这两个钩子函数是 keep-alive 组件独有的。用 keep-alive 包裹的组件在切换时不会进行销毁，而是缓存到内存中并执行 deactivated 钩子函数，命中缓存渲染后会执行 actived 钩子函数。</p>\n<p>最后就是销毁组件的钩子函数了</p>\n<p>js\nVue.prototype.$destroy = function() {\n  // ...\n  callHook(vm, &#39;beforeDestroy&#39;)\n  vm._isBeingDestroyed = true\n  // remove self from parent\n  const parent = vm.$parent\n  if (parent &amp;&amp; !parent._isBeingDestroyed &amp;&amp; !vm.$options.abstract) {\n    remove(parent.$children, vm)\n  }\n  // teardown watchers\n  if (vm._watcher) {\n    vm._watcher.teardown()\n  }\n  let i = vm._watchers.length\n  while (i--) {\n    vm._watchers[i].teardown()\n  }\n  // remove reference from data ob\n  // frozen object may not have observer.\n  if (vm._data.<strong>ob</strong>) {\n    vm._data.<strong>ob</strong>.vmCount--\n  }\n  // call the last hook...\n  vm._isDestroyed = true\n  // invoke destroy hooks on current rendered tree\n  vm.<strong>patch</strong>(vm._vnode, null)\n  // fire destroyed hook\n  callHook(vm, &#39;destroyed&#39;)\n  // turn off all instance listeners.\n  vm.$off()\n  // remove <strong>vue</strong> reference\n  if (vm.$el) {\n    vm.$el.<strong>vue</strong> = null\n  }\n  // release circular reference (#6759)\n  if (vm.$vnode) {\n    vm.$vnode.parent = null\n  }\n}</p>\n<p>在执行销毁操作前会调用 beforeDestroy 钩子函数，然后进行一系列的销毁操作，如果有子组件的话，也会递归销毁子组件，所有子组件都销毁完毕后才会执行根组件的 destroyed 钩子函数。\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x06",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "06",
            "time" : 1555228371611,
            "title" : "6.0 销毁组件的钩子函数",
            "update_at" : 1556488166377
          },
          "x07" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>以下思维导图罗列了源码中重要的一些函数\n![](https://user-gold-cdn.xitu.io/2018/7/27/164da511aeec01c9?w=3000&amp;h=1345&amp;f=png&amp;s=1424682)</code></pre>",
              "type" : "Html"
            },
            "id" : "x07",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "07",
            "time" : 1555228371611,
            "title" : "7.0 重要函数思维导图",
            "update_at" : 1556488166377
          },
          "x08" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n在开始之前，推荐大家 clone 一份源码对照着看。因为篇幅较长，函数间的跳转也很多。</p>\n<p>使用路由之前，需要调用 Vue.use(VueRouter)，这是因为让插件可以使用 Vue \njs\nexport function initUse (Vue: GlobalAPI) {\n  Vue.use = function (plugin: Function | Object) {\n    // 判断重复安装插件\n    const installedPlugins = (this._installedPlugins || (this._installedPlugins = []))\n    if (installedPlugins.indexOf(plugin) &gt; -1) {\n      return this\n    }\n    const args = toArray(arguments, 1)\n    // 插入 Vue\n    args.unshift(this)\n    // 一般插件都会有一个 install 函数\n    // 通过该函数让插件可以使用 Vue\n    if (typeof plugin.install === &#39;function&#39;) {\n      plugin.install.apply(plugin, args)\n    } else if (typeof plugin === &#39;function&#39;) {\n      plugin.apply(null, args)\n    }\n    installedPlugins.push(plugin)\n    return this\n  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x08",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "08",
            "time" : 1555228371611,
            "title" : "8.0 路由注册",
            "update_at" : 1556488166377
          },
          "x09" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\njs\nexport function install (Vue) {\n  // 确保 install 调用一次\n  if (install.installed &amp;&amp; _Vue === Vue) return\n  install.installed = true\n  // 把 Vue 赋值给全局变量\n  _Vue = Vue\n  const registerInstance = (vm, callVal) =&gt; {\n    let i = vm.$options._parentVnode\n    if (isDef(i) &amp;&amp; isDef(i = i.data) &amp;&amp; isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal)\n    }\n  }\n  // 给每个组件的钩子函数混入实现\n  // 可以发现在 beforeCreate 钩子执行时\n  // 会初始化路由\n  Vue.mixin({\n    beforeCreate () {\n      // 判断组件是否存在 router 对象，该对象只在根组件上有\n      if (isDef(this.$options.router)) {\n        // 根路由设置为自己\n        this._routerRoot = this\n        this._router = this.$options.router\n        // 初始化路由\n        this._router.init(this)\n        // 很重要，为 _route 属性实现双向绑定\n        // 触发组件渲染\n        Vue.util.defineReactive(this, &#39;_route&#39;, this._router.history.current)\n      } else {\n        // 用于 router-view 层级判断\n        this._routerRoot = (this.$parent &amp;&amp; this.$parent._routerRoot) || this\n      }\n      registerInstance(this, this)\n    },\n    destroyed () {\n      registerInstance(this)\n    }\n  })\n  // 全局注册组件 router-link 和 router-view\n  Vue.component(&#39;RouterView&#39;, View)\n  Vue.component(&#39;RouterLink&#39;, Link)\n}</p>\n<p>对于路由注册来说，核心就是调用 Vue.use(VueRouter)，使得 VueRouter 可以使用 Vue。然后通过 Vue 来调用 VueRouter 的 install 函数。在该函数中，核心就是给组件混入钩子函数和全局注册两个路由组件。\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x09",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "09",
            "time" : 1555228371611,
            "title" : "9.0 接下来看下 install 函数的部分实现",
            "update_at" : 1556488166377
          },
          "x10" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n在安装插件后，对 VueRouter 进行实例化。\njs\nconst Home = { template: &#39;<div>home</div>&#39; }\nconst Foo = { template: &#39;<div>foo</div>&#39; }\nconst Bar = { template: &#39;<div>bar</div>&#39; }</p>\n<p>// 3. Create the router\nconst router = new VueRouter({\n  mode: &#39;hash&#39;,\n  base: __dirname,\n  routes: [\n    { path: &#39;/&#39;, component: Home }, // all paths are defined without the hash.\n    { path: &#39;/foo&#39;, component: Foo },\n    { path: &#39;/bar&#39;, component: Bar }\n  ]\n})\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x10",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "10",
            "time" : 1555228371611,
            "title" : "10.0 VueRouter 实例化",
            "update_at" : 1556488166377
          },
          "x11" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\njs\nconstructor(options: RouterOptions = {}) {\n    // ...\n    // 路由匹配对象\n    this.matcher = createMatcher(options.routes || [], this)</p>\n<pre><code>// 根据 mode 采取不同的路由方式\nlet mode = options.mode || &#39;hash&#39;\nthis.fallback =\n  mode === &#39;history&#39; &amp;&amp; !supportsPushState &amp;&amp; options.fallback !== false\nif (this.fallback) {\n  mode = &#39;hash&#39;\n}\nif (!inBrowser) {\n  mode = &#39;abstract&#39;\n}\nthis.mode = mode\n\nswitch (mode) {\n  case &#39;history&#39;:\n    this.history = new HTML5History(this, options.base)\n    break\n  case &#39;hash&#39;:\n    this.history = new HashHistory(this, options.base, this.fallback)\n    break\n  case &#39;abstract&#39;:\n    this.history = new AbstractHistory(this, options.base)\n    break\n  default:\n    if (process.env.NODE_ENV !== &#39;production&#39;) {\n      assert(false, invalid mode: ${mode})\n    }\n}\n</code></pre><p>  }\n在实例化 VueRouter 的过程中，核心是创建一个路由匹配对象，并且根据 mode 来采取不同的路由方式。\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x11",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "11",
            "time" : 1555228371611,
            "title" : "11.0 来看一下 VueRouter 的构造函数",
            "update_at" : 1556488166377
          },
          "x12" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\njs\nexport function createMatcher (\n  routes: Array<RouteConfig>,\n  router: VueRouter\n): Matcher {\n    // 创建路由映射表\n  const { pathList, pathMap, nameMap } = createRouteMap(routes)</p>\n<p>  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap)\n  }\n  // 路由匹配\n  function match (\n    raw: RawLocation,\n    currentRoute?: Route,\n    redirectedFrom?: Location\n  ): Route {\n    //...\n  }</p>\n<p>  return {\n    match,\n    addRoutes\n  }\n}\ncreateMatcher 函数的作用就是创建路由映射表，然后通过闭包的方式让 addRoutes 和 match 函数能够使用路由映射表的几个对象，最后返回一个 Matcher 对象。\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x12",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "12",
            "time" : 1555228371611,
            "title" : "12.0 创建路由匹配对象",
            "update_at" : 1556488166377
          },
          "x13" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n接下来看 createMatcher 函数时如何创建映射表的\njs\nexport function createRouteMap (\n  routes: Array<RouteConfig>,\n  oldPathList?: Array<string>,\n  oldPathMap?: Dictionary<RouteRecord>,\n  oldNameMap?: Dictionary<RouteRecord>\n): {\n  pathList: Array<string>;\n  pathMap: Dictionary<RouteRecord>;\n  nameMap: Dictionary<RouteRecord>;\n} {\n  // 创建映射表\n  const pathList: Array<string> = oldPathList || []\n  const pathMap: Dictionary<RouteRecord> = oldPathMap || Object.create(null)\n  const nameMap: Dictionary<RouteRecord> = oldNameMap || Object.create(null)\n  // 遍历路由配置，为每个配置添加路由记录\n  routes.forEach(route =&gt; {\n    addRouteRecord(pathList, pathMap, nameMap, route)\n  })\n  // 确保通配符在最后\n  for (let i = 0, l = pathList.length; i &lt; l; i++) {\n    if (pathList[i] === &#39;*&#39;) {\n      pathList.push(pathList.splice(i, 1)[0])\n      l--\n      i--\n    }\n  }\n  return {\n    pathList,\n    pathMap,\n    nameMap\n  }\n}\n// 添加路由记录\nfunction addRouteRecord (\n  pathList: Array<string>,\n  pathMap: Dictionary<RouteRecord>,\n  nameMap: Dictionary<RouteRecord>,\n  route: RouteConfig,\n  parent?: RouteRecord,\n  matchAs?: string\n) {\n  // 获得路由配置下的属性\n  const { path, name } = route\n  const pathToRegexpOptions: PathToRegexpOptions = route.pathToRegexpOptions || {}\n  // 格式化 url，替换 / \n  const normalizedPath = normalizePath(\n    path,\n    parent,\n    pathToRegexpOptions.strict\n  )\n  // 生成记录对象\n  const record: RouteRecord = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name,\n    parent,\n    matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  }</p>\n<p>  if (route.children) {\n    // 递归路由配置的 children 属性，添加路由记录\n    route.children.forEach(child =&gt; {\n      const childMatchAs = matchAs\n        ? cleanPath(${matchAs}/${child.path})\n        : undefined\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs)\n    })\n  }\n  // 如果路由有别名的话\n  // 给别名也添加路由记录\n  if (route.alias !== undefined) {\n    const aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias]</p>\n<pre><code>aliases.forEach(alias =&gt; {\n  const aliasRoute = {\n    path: alias,\n    children: route.children\n  }\n  addRouteRecord(\n    pathList,\n    pathMap,\n    nameMap,\n    aliasRoute,\n    parent,\n    record.path || &#39;/&#39; // matchAs\n  )\n})\n</code></pre><p>  }\n  // 更新映射表\n  if (!pathMap[record.path]) {\n    pathList.push(record.path)\n    pathMap[record.path] = record\n  }\n  // 命名路由添加记录\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record\n    } else if (process.env.NODE_ENV !== &#39;production&#39; &amp;&amp; !matchAs) {\n      warn(\n        false,\n        Duplicate named routes definition:  +\n        { name: &quot;${name}&quot;, path: &quot;${record.path}&quot; }\n      )\n    }\n  }\n}\n以上就是创建路由匹配对象的全过程，通过用户配置的路由规则来创建对应的路由映射表。\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x13",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "13",
            "time" : 1555228371611,
            "title" : "13.0 创建映射表",
            "update_at" : 1556488166377
          },
          "x14" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n当根组件调用 beforeCreate 钩子函数时，会执行以下代码\njs\nbeforeCreate () {\n// 只有根组件有 router 属性，所以根组件初始化时会初始化路由\n  if (isDef(this.$options.router)) {\n    this._routerRoot = this\n    this._router = this.$options.router\n    this._router.init(this)\n    Vue.util.defineReactive(this, &#39;_route&#39;, this._router.history.current)\n  } else {\n    this._routerRoot = (this.$parent &amp;&amp; this.$parent._routerRoot) || this\n  }\n  registerInstance(this, this)\n}</p>\n<p>接下来看下路由初始化会做些什么\njs\ninit(app: any /<em> Vue component instance </em>/) {\n    // 保存组件实例\n    this.apps.push(app)\n    // 如果根组件已经有了就返回\n    if (this.app) {\n      return\n    }\n    this.app = app\n    // 赋值路由模式\n    const history = this.history\n    // 判断路由模式，以哈希模式为例\n    if (history instanceof HTML5History) {\n      history.transitionTo(history.getCurrentLocation())\n    } else if (history instanceof HashHistory) {\n      // 添加 hashchange 监听\n      const setupHashListener = () =&gt; {\n        history.setupListeners()\n      }\n      // 路由跳转\n      history.transitionTo(\n        history.getCurrentLocation(),\n        setupHashListener,\n        setupHashListener\n      )\n    }\n    // 该回调会在 transitionTo 中调用\n    // 对组件的 _route 属性进行赋值，触发组件渲染\n    history.listen(route =&gt; {\n      this.apps.forEach(app =&gt; {\n        app._route = route\n      })\n    })\n  }\n在路由初始化时，核心就是进行路由的跳转，改变 URL 然后渲染对应的组件。接下来来看一下路由是如何进行跳转的。\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x14",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "14",
            "time" : 1555228371611,
            "title" : "14.0 路由初始化",
            "update_at" : 1556488166377
          },
          "x15" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>js\ntransitionTo (location: RawLocation, onComplete?: Function, onAbort?: Function) {\n  // 获取匹配的路由信息\n  const route = this.router.match(location, this.current)\n  // 确认切换路由\n  this.confirmTransition(route, () =&gt; {\n    // 以下为切换路由成功或失败的回调\n    // 更新路由信息，对组件的 _route 属性进行赋值，触发组件渲染\n    // 调用 afterHooks 中的钩子函数\n    this.updateRoute(route)\n    // 添加 hashchange 监听\n    onComplete &amp;&amp; onComplete(route)\n    // 更新 URL\n    this.ensureURL()\n    // 只执行一次 ready 回调\n    if (!this.ready) {\n      this.ready = true\n      this.readyCbs.forEach(cb =&gt; { cb(route) })\n    }\n  }, err =&gt; {\n  // 错误处理\n    if (onAbort) {\n      onAbort(err)\n    }\n    if (err &amp;&amp; !this.ready) {\n      this.ready = true\n      this.readyErrorCbs.forEach(cb =&gt; { cb(err) })\n    }\n  })\n}</code></pre>",
              "type" : "Html"
            },
            "id" : "x15",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "15",
            "time" : 1555228371611,
            "title" : "15.0 路由跳转",
            "update_at" : 1556488166377
          },
          "x16" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>在路由跳转中，需要先获取匹配的路由信息，所以先来看下如何获取匹配的路由信息\njs\nfunction match (\n  raw: RawLocation,\n  currentRoute?: Route,\n  redirectedFrom?: Location\n): Route {\n  // 序列化 url\n  // 比如对于该 url 来说 /abc?foo=bar&amp;baz=qux#hello\n  // 会序列化路径为 /abc\n  // 哈希为 #hello\n  // 参数为 foo: &#39;bar&#39;, baz: &#39;qux&#39;\n  const location = normalizeLocation(raw, currentRoute, false, router)\n  const { name } = location\n  // 如果是命名路由，就判断记录中是否有该命名路由配置\n  if (name) {\n    const record = nameMap[name]\n    // 没找到表示没有匹配的路由\n    if (!record) return _createRoute(null, location)\n    const paramNames = record.regex.keys\n      .filter(key =&gt; !key.optional)\n      .map(key =&gt; key.name)\n    // 参数处理\n    if (typeof location.params !== &#39;object&#39;) {\n      location.params = {}\n    }\n    if (currentRoute &amp;&amp; typeof currentRoute.params === &#39;object&#39;) {\n      for (const key in currentRoute.params) {\n        if (!(key in location.params) &amp;&amp; paramNames.indexOf(key) &gt; -1) {\n          location.params[key] = currentRoute.params[key]\n        }\n      }\n    }\n    if (record) {\n      location.path = fillParams(record.path, location.params, named route &quot;${name}&quot;)\n      return _createRoute(record, location, redirectedFrom)\n    }\n  } else if (location.path) {\n    // 非命名路由处理\n    location.params = {}\n    for (let i = 0; i &lt; pathList.length; i++) {\n     // 查找记录\n      const path = pathList[i]\n      const record = pathMap[path]\n      // 如果匹配路由，则创建路由\n      if (matchRoute(record.regex, location.path, location.params)) {\n        return _createRoute(record, location, redirectedFrom)\n      }\n    }\n  }\n  // 没有匹配的路由\n  return _createRoute(null, location)\n}</code></pre>",
              "type" : "Html"
            },
            "id" : "x16",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "16",
            "time" : 1555228371611,
            "title" : "16.0 获取匹配的路由信息",
            "update_at" : 1556488166377
          },
          "x17" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n接下来看看如何创建路由\njs\n// 根据条件创建不同的路由\nfunction _createRoute(\n  record: ?RouteRecord,\n  location: Location,\n  redirectedFrom?: Location\n): Route {\n  if (record &amp;&amp; record.redirect) {\n    return redirect(record, redirectedFrom || location)\n  }\n  if (record &amp;&amp; record.matchAs) {\n    return alias(record, location, record.matchAs)\n  }\n  return createRoute(record, location, redirectedFrom, router)\n}</p>\n<p>export function createRoute (\n  record: ?RouteRecord,\n  location: Location,\n  redirectedFrom?: ?Location,\n  router?: VueRouter\n): Route {\n  const stringifyQuery = router &amp;&amp; router.options.stringifyQuery\n  // 克隆参数\n  let query: any = location.query || {}\n  try {\n    query = clone(query)\n  } catch (e) {}\n  // 创建路由对象\n  const route: Route = {\n    name: location.name || (record &amp;&amp; record.name),\n    meta: (record &amp;&amp; record.meta) || {},\n    path: location.path || &#39;/&#39;,\n    hash: location.hash || &#39;&#39;,\n    query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery),\n    matched: record ? formatMatch(record) : []\n  }\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery)\n  }\n  // 让路由对象不可修改\n  return Object.freeze(route)\n}\n// 获得包含当前路由的所有嵌套路径片段的路由记录\n// 包含从根路由到当前路由的匹配记录，从上至下\nfunction formatMatch(record: ?RouteRecord): Array<RouteRecord> {\n  const res = []\n  while (record) {\n    res.unshift(record)\n    record = record.parent\n  }\n  return res\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x17",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "17",
            "time" : 1555228371611,
            "title" : "17.0 如何创建路由",
            "update_at" : 1556488166377
          },
          "x18" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n至此匹配路由已经完成，我们回到 transitionTo 函数中，接下来执行 confirmTransition \njs\ntransitionTo (location: RawLocation, onComplete?: Function, onAbort?: Function) {\n  // 确认切换路由\n  this.confirmTransition(route, () =&gt; {}\n}\nconfirmTransition(route: Route, onComplete: Function, onAbort?: Function) {\n  const current = this.current\n  // 中断跳转路由函数\n  const abort = err =&gt; {\n    if (isError(err)) {\n      if (this.errorCbs.length) {\n        this.errorCbs.forEach(cb =&gt; {\n          cb(err)\n        })\n      } else {\n        warn(false, &#39;uncaught error during route navigation:&#39;)\n        console.error(err)\n      }\n    }\n    onAbort &amp;&amp; onAbort(err)\n  }\n  // 如果是相同的路由就不跳转\n  if (\n    isSameRoute(route, current) &amp;&amp;\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL()\n    return abort()\n  }\n  // 通过对比路由解析出可复用的组件，需要渲染的组件，失活的组件\n  const { updated, deactivated, activated } = resolveQueue(\n    this.current.matched,\n    route.matched\n  )</p>\n<p>  function resolveQueue(\n      current: Array<RouteRecord>,\n      next: Array<RouteRecord>\n    ): {\n      updated: Array<RouteRecord>,\n      activated: Array<RouteRecord>,\n      deactivated: Array<RouteRecord>\n    } {\n      let i\n      const max = Math.max(current.length, next.length)\n      for (i = 0; i &lt; max; i++) {\n        // 当前路由路径和跳转路由路径不同时跳出遍历\n        if (current[i] !== next[i]) {\n          break\n        }\n      }\n      return {\n        // 可复用的组件对应路由\n        updated: next.slice(0, i),\n        // 需要渲染的组件对应路由\n        activated: next.slice(i),\n        // 失活的组件对应路由\n        deactivated: current.slice(i)\n      }\n  }\n  // 导航守卫数组\n  const queue: Array&lt;?NavigationGuard&gt; = [].concat(\n    // 失活的组件钩子\n    extractLeaveGuards(deactivated),\n    // 全局 beforeEach 钩子\n    this.router.beforeHooks,\n    // 在当前路由改变，但是该组件被复用时调用\n    extractUpdateHooks(updated),\n    // 需要渲染组件 enter 守卫钩子\n    activated.map(m =&gt; m.beforeEnter),\n    // 解析异步路由组件\n    resolveAsyncComponents(activated)\n  )\n  // 保存路由\n  this.pending = route\n  // 迭代器，用于执行 queue 中的导航守卫钩子\n  const iterator = (hook: NavigationGuard, next) =&gt; {\n  // 路由不相等就不跳转路由\n    if (this.pending !== route) {\n      return abort()\n    }\n    try {\n    // 执行钩子\n      hook(route, current, (to: any) =&gt; {\n        // 只有执行了钩子函数中的 next，才会继续执行下一个钩子函数\n        // 否则会暂停跳转\n        // 以下逻辑是在判断 next() 中的传参\n        if (to === false || isError(to)) {\n          // next(false) \n          this.ensureURL(true)\n          abort(to)\n        } else if (\n          typeof to === &#39;string&#39; ||\n          (typeof to === &#39;object&#39; &amp;&amp;\n            (typeof to.path === &#39;string&#39; || typeof to.name === &#39;string&#39;))\n        ) {\n        // next(&#39;/&#39;) 或者 next({ path: &#39;/&#39; }) -&gt; 重定向\n          abort()\n          if (typeof to === &#39;object&#39; &amp;&amp; to.replace) {\n            this.replace(to)\n          } else {\n            this.push(to)\n          }\n        } else {\n        // 这里执行 next\n        // 也就是执行下面函数 runQueue 中的 step(index + 1)\n          next(to)\n        }\n      })\n    } catch (e) {\n      abort(e)\n    }\n  }\n  // 经典的同步执行异步函数\n  runQueue(queue, iterator, () =&gt; {\n    const postEnterCbs = []\n    const isValid = () =&gt; this.current === route\n    // 当所有异步组件加载完成后，会执行这里的回调，也就是 runQueue 中的 cb()\n    // 接下来执行 需要渲染组件的导航守卫钩子\n    const enterGuards = extractEnterGuards(activated, postEnterCbs, isValid)\n    const queue = enterGuards.concat(this.router.resolveHooks)\n    runQueue(queue, iterator, () =&gt; {\n    // 跳转完成\n      if (this.pending !== route) {\n        return abort()\n      }\n      this.pending = null\n      onComplete(route)\n      if (this.router.app) {\n        this.router.app.$nextTick(() =&gt; {\n          postEnterCbs.forEach(cb =&gt; {\n            cb()\n          })\n        })\n      }\n    })\n  })\n}\nexport function runQueue (queue: Array&lt;?NavigationGuard&gt;, fn: Function, cb: Function) {\n  const step = index =&gt; {\n  // 队列中的函数都执行完毕，就执行回调函数\n    if (index &gt;= queue.length) {\n      cb()\n    } else {\n      if (queue[index]) {\n      // 执行迭代器，用户在钩子函数中执行 next() 回调\n      // 回调中判断传参，没有问题就执行 next()，也就是 fn 函数中的第二个参数\n        fn(queue[index], () =&gt; {\n          step(index + 1)\n        })\n      } else {\n        step(index + 1)\n      }\n    }\n  }\n  // 取出队列中第一个钩子函数\n  step(0)\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x18",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "18",
            "time" : 1555228371611,
            "title" : "18.0 Transition",
            "update_at" : 1556488166377
          },
          "x19" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>接下来介绍导航守卫\njs\nconst queue: Array&lt;?NavigationGuard&gt; = [].concat(\n    // 失活的组件钩子\n    extractLeaveGuards(deactivated),\n    // 全局 beforeEach 钩子\n    this.router.beforeHooks,\n    // 在当前路由改变，但是该组件被复用时调用\n    extractUpdateHooks(updated),\n    // 需要渲染组件 enter 守卫钩子\n    activated.map(m =&gt; m.beforeEnter),\n    // 解析异步路由组件\n    resolveAsyncComponents(activated)\n)</code></pre>",
              "type" : "Html"
            },
            "id" : "x19",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "19",
            "time" : 1555228371611,
            "title" : "19.0 导航守卫",
            "update_at" : 1556488166377
          },
          "x20" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>第一步是先执行失活组件的钩子函数\njs\nfunction extractLeaveGuards(deactivated: Array&lt;RouteRecord&gt;): Array&lt;?Function&gt; {\n// 传入需要执行的钩子函数名\n  return extractGuards(deactivated, &#39;beforeRouteLeave&#39;, bindGuard, true)\n}\nfunction extractGuards(\n  records: Array&lt;RouteRecord&gt;,\n  name: string,\n  bind: Function,\n  reverse?: boolean\n): Array&lt;?Function&gt; {\n  const guards = flatMapComponents(records, (def, instance, match, key) =&gt; {\n   // 找出组件中对应的钩子函数\n    const guard = extractGuard(def, name)\n    if (guard) {\n    // 给每个钩子函数添加上下文对象为组件自身\n      return Array.isArray(guard)\n        ? guard.map(guard =&gt; bind(guard, instance, match, key))\n        : bind(guard, instance, match, key)\n    }\n  })\n  // 数组降维，并且判断是否需要翻转数组\n  // 因为某些钩子函数需要从子执行到父\n  return flatten(reverse ? guards.reverse() : guards)\n}\nexport function flatMapComponents (\n  matched: Array&lt;RouteRecord&gt;,\n  fn: Function\n): Array&lt;?Function&gt; {\n// 数组降维\n  return flatten(matched.map(m =&gt; {\n  // 将组件中的对象传入回调函数中，获得钩子函数数组\n    return Object.keys(m.components).map(key =&gt; fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ))\n  }))\n}</code></pre>",
              "type" : "Html"
            },
            "id" : "x20",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "20",
            "time" : 1555228371611,
            "title" : "20.0 执行失活组件的钩子函数",
            "update_at" : 1556488166377
          },
          "x21" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>第二步执行全局 beforeEach 钩子函数\njs\nbeforeEach(fn: Function): Function {\n    return registerHook(this.beforeHooks, fn)\n}\nfunction registerHook(list: Array&lt;any&gt;, fn: Function): Function {\n  list.push(fn)\n  return () =&gt; {\n    const i = list.indexOf(fn)\n    if (i &gt; -1) list.splice(i, 1)\n  }\n}\n在 VueRouter 类中有以上代码，每当给 VueRouter 实例添加 beforeEach 函数时就会将函数 push 进 beforeHooks 中。</code></pre>",
              "type" : "Html"
            },
            "id" : "x21",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "21",
            "time" : 1555228371611,
            "title" : "21.0 全局 beforeEach 钩子函数",
            "update_at" : 1556488166377
          },
          "x22" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>第三步执行 beforeRouteUpdate 钩子函数，调用方式和第一步相同，只是传入的函数名不同，在该函数中可以访问到 this 对象。</code></pre>",
              "type" : "Html"
            },
            "id" : "x22",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "22",
            "time" : 1555228371611,
            "title" : "22.0 beforeRouteUpdate",
            "update_at" : 1556488166377
          },
          "x23" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>第四步执行 beforeEnter 钩子函数，该函数是路由独享的钩子函数。</code></pre>",
              "type" : "Html"
            },
            "id" : "x23",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "23",
            "time" : 1555228371611,
            "title" : "23.0 beforeEnter",
            "update_at" : 1556488166377
          },
          "x24" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>第五步是解析异步组件。\njs\nexport function resolveAsyncComponents (matched: Array&lt;RouteRecord&gt;): Function {\n  return (to, from, next) =&gt; {\n    let hasAsync = false\n    let pending = 0\n    let error = null\n    // 该函数作用之前已经介绍过了\n    flatMapComponents(matched, (def, _, match, key) =&gt; {\n    // 判断是否是异步组件\n      if (typeof def === &#39;function&#39; &amp;&amp; def.cid === undefined) {\n        hasAsync = true\n        pending++\n        // 成功回调\n        // once 函数确保异步组件只加载一次\n        const resolve = once(resolvedDef =&gt; {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default\n          }\n          // 判断是否是构造函数\n          // 不是的话通过 Vue 来生成组件构造函数\n          def.resolved = typeof resolvedDef === &#39;function&#39;\n            ? resolvedDef\n            : _Vue.extend(resolvedDef)\n        // 赋值组件\n        // 如果组件全部解析完毕，继续下一步\n          match.components[key] = resolvedDef\n          pending--\n          if (pending &lt;= 0) {\n            next()\n          }\n        })\n        // 失败回调\n        const reject = once(reason =&gt; {\n          const msg = Failed to resolve async component ${key}: ${reason}\n          process.env.NODE_ENV !== &#39;production&#39; &amp;&amp; warn(false, msg)\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg)\n            next(error)\n          }\n        })\n        let res\n        try {\n        // 执行异步组件函数\n          res = def(resolve, reject)\n        } catch (e) {\n          reject(e)\n        }\n        if (res) {\n        // 下载完成执行回调\n          if (typeof res.then === &#39;function&#39;) {\n            res.then(resolve, reject)\n          } else {\n            const comp = res.component\n            if (comp &amp;&amp; typeof comp.then === &#39;function&#39;) {\n              comp.then(resolve, reject)\n            }\n          }\n        }\n      }\n    })\n    // 不是异步组件直接下一步\n    if (!hasAsync) next()\n  }\n}</code></pre>",
              "type" : "Html"
            },
            "id" : "x24",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "24",
            "time" : 1555228371611,
            "title" : "24.0 解析异步组件",
            "update_at" : 1556488166377
          },
          "x25" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>以上就是第一个 runQueue 中的逻辑，第五步完成后会执行第一个 runQueue 中回调函数\njs\n// 该回调用于保存 beforeRouteEnter 钩子中的回调函数\nconst postEnterCbs = []\nconst isValid = () =&gt; this.current === route\n// beforeRouteEnter 导航守卫钩子\nconst enterGuards = extractEnterGuards(activated, postEnterCbs, isValid)\n// beforeResolve 导航守卫钩子\nconst queue = enterGuards.concat(this.router.resolveHooks)\nrunQueue(queue, iterator, () =&gt; {\n  if (this.pending !== route) {\n    return abort()\n  }\n  this.pending = null\n  // 这里会执行 afterEach 导航守卫钩子\n  onComplete(route)\n  if (this.router.app) {\n    this.router.app.$nextTick(() =&gt; {\n      postEnterCbs.forEach(cb =&gt; {\n        cb()\n      })\n    })\n  }\n})</code></pre>",
              "type" : "Html"
            },
            "id" : "x25",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "25",
            "time" : 1555228371611,
            "title" : "25.0 保存 beforeRouteEnter 钩子中的回调函数",
            "update_at" : 1556488166377
          },
          "x26" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n第六步是执行 beforeRouteEnter 导航守卫钩子，beforeRouteEnter 钩子不能访问 this 对象，因为钩子在导航确认前被调用，需要渲染的组件还没被创建。但是该钩子函数是唯一一个支持在回调中获取 this 对象的函数，回调会在路由确认执行。\njs\nbeforeRouteEnter (to, from, next) {\n  next(vm =&gt; {\n    // 通过 vm 访问组件实例\n  })\n}</p>\n<p>下面来看看是如何支持在回调中拿到 this 对象的\njs\nfunction extractEnterGuards(\n  activated: Array<RouteRecord>,\n  cbs: Array<Function>,\n  isValid: () =&gt; boolean\n): Array&lt;?Function&gt; {\n// 这里和之前调用导航守卫基本一致\n  return extractGuards(\n    activated,\n    &#39;beforeRouteEnter&#39;,\n    (guard, _, match, key) =&gt; {\n      return bindEnterGuard(guard, match, key, cbs, isValid)\n    }\n  )\n}\nfunction bindEnterGuard(\n  guard: NavigationGuard,\n  match: RouteRecord,\n  key: string,\n  cbs: Array<Function>,\n  isValid: () =&gt; boolean\n): NavigationGuard {\n  return function routeEnterGuard(to, from, next) {\n    return guard(to, from, cb =&gt; {\n    // 判断 cb 是否是函数\n    // 是的话就 push 进 postEnterCbs\n      next(cb)\n      if (typeof cb === &#39;function&#39;) {\n        cbs.push(() =&gt; {\n          // 循环直到拿到组件实例\n          poll(cb, match.instances, key, isValid)\n        })\n      }\n    })\n  }\n}\n// 该函数是为了解决 issus #750\n// 当 router-view 外面包裹了 mode 为 out-in 的 transition 组件 \n// 会在组件初次导航到时获得不到组件实例对象\nfunction poll(\n  cb: any, // somehow flow cannot infer this is a function\n  instances: Object,\n  key: string,\n  isValid: () =&gt; boolean\n) {\n  if (\n    instances[key] &amp;&amp;\n    !instances[key]._isBeingDestroyed // do not reuse being destroyed instance\n  ) {\n    cb(instances[key])\n  } else if (isValid()) {\n  // setTimeout 16ms 作用和 nextTick 基本相同\n    setTimeout(() =&gt; {\n      poll(cb, instances, key, isValid)\n    }, 16)\n  }\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x26",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "26",
            "time" : 1555228371611,
            "title" : "26.0 beforeRouteEnter 导航守卫钩子",
            "update_at" : 1556488166377
          },
          "x27" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>第七步是执行 beforeResolve 导航守卫钩子，如果注册了全局 beforeResolve 钩子就会在这里执行。</code></pre>",
              "type" : "Html"
            },
            "id" : "x27",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "27",
            "time" : 1555228371611,
            "title" : "27.0 beforeResolve 导航守卫钩子",
            "update_at" : 1556488166377
          },
          "x28" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>第八步就是导航确认，调用 afterEach 导航守卫钩子了。</code></pre>",
              "type" : "Html"
            },
            "id" : "x28",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "28",
            "time" : 1555228371611,
            "title" : "28.0 调用 afterEach 导航守卫钩子",
            "update_at" : 1556488166377
          },
          "x29" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>以上都执行完成后，会触发组件的渲染\njs\nhistory.listen(route =&gt; {\n      this.apps.forEach(app =&gt; {\n        app._route = route\n      })\n})</code></pre>",
              "type" : "Html"
            },
            "id" : "x29",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "29",
            "time" : 1555228371611,
            "title" : "29.0 触发组件的渲染",
            "update_at" : 1556488166377
          },
          "x30" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n以上回调会在 updateRoute 中调用\njs\nupdateRoute(route: Route) {\n    const prev = this.current\n    this.current = route\n    this.cb &amp;&amp; this.cb(route)\n    this.router.afterHooks.forEach(hook =&gt; {\n      hook &amp;&amp; hook(route, prev)\n    })\n}</p>\n<p>至此，路由跳转已经全部分析完毕。核心就是判断需要跳转的路由是否存在于记录中，然后执行各种导航守卫函数，最后完成 URL 的改变和组件的渲染。\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x30",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "30",
            "time" : 1555228371611,
            "title" : "30.0 updateRoute",
            "update_at" : 1556488166377
          },
          "x31" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "certificatePath" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledgecontents%2FiHmcxnnRDWPOJAE38On1nCdq0ir2%2F-LdLuU-AHWwvMHDT-QpQx31?alt=media&token=506545c4-e8a3-4929-beea-f7a61a90db92",
              "type" : "Certificate"
            },
            "id" : "x31",
            "knowledgeid" : "-LdLuU-AHWwvMHDT-QpQ",
            "name" : "tei952",
            "ord" : "31",
            "time" : 1555228371611,
            "title" : "31.9 御修了ありがとうございました。",
            "update_at" : 1556488166377
          }
        }
      },
      "-LdLubY6J4gW1t94t63x" : {
        "contents" : {
          "x01" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片1.PNG",
              "type" : "Picture"
            },
            "id" : "x01",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "01",
            "time" : 1555228371611,
            "title" : "1.4 課程紹介",
            "update_at" : 1556488166377
          },
          "x02" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片2.PNG",
              "type" : "Picture"
            },
            "id" : "x02",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "02",
            "time" : 1555228371611,
            "title" : "2.4 目録",
            "update_at" : 1556488166377
          },
          "x03" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片3.PNG",
              "type" : "Picture"
            },
            "id" : "x03",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "03",
            "time" : 1555228371611,
            "title" : "3.4 前書",
            "update_at" : 1556488166377
          },
          "x04" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片4.PNG",
              "type" : "Picture"
            },
            "id" : "x04",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "04",
            "time" : 1555228371611,
            "title" : "4.4 紹介",
            "update_at" : 1556488166377
          },
          "x05" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片5.PNG",
              "type" : "Picture"
            },
            "id" : "x05",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "05",
            "time" : 1555228371611,
            "title" : "5.4 開発環境構築",
            "update_at" : 1556488166377
          },
          "x06" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片6.PNG",
              "type" : "Picture"
            },
            "id" : "x06",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "06",
            "time" : 1555228371611,
            "title" : "6.4 HelloWord!",
            "update_at" : 1556488166377
          },
          "x07" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片7.PNG",
              "type" : "Picture"
            },
            "id" : "x07",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "07",
            "time" : 1555228371611,
            "title" : "7.4 基礎語彙",
            "update_at" : 1556488166377
          },
          "x08" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片8.PNG",
              "type" : "Picture"
            },
            "id" : "x08",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "08",
            "time" : 1555228371611,
            "title" : "8.4 変数タイプ",
            "update_at" : 1556488166377
          },
          "x09" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片9.PNG",
              "type" : "Picture"
            },
            "id" : "x09",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "09",
            "time" : 1555228371611,
            "title" : "9.4 オペレーター",
            "update_at" : 1556488166377
          },
          "x10" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片10.PNG",
              "type" : "Picture"
            },
            "id" : "x10",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "10",
            "time" : 1555228371611,
            "title" : "10.4 条件分岐",
            "update_at" : 1556488166377
          },
          "x11" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片11.PNG",
              "type" : "Picture"
            },
            "id" : "x11",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "11",
            "time" : 1555228371611,
            "title" : "11.4 ループ",
            "update_at" : 1556488166377
          },
          "x12" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片12.PNG",
              "type" : "Picture"
            },
            "id" : "x12",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "12",
            "time" : 1555228371611,
            "title" : "12.4 Whileループ",
            "update_at" : 1556488166377
          },
          "x13" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片13.PNG",
              "type" : "Picture"
            },
            "id" : "x13",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "13",
            "time" : 1555228371611,
            "title" : "13.4 Forループ",
            "update_at" : 1556488166377
          },
          "x14" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片14.PNG",
              "type" : "Picture"
            },
            "id" : "x14",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "14",
            "time" : 1555228371611,
            "title" : "14.4 ネストループ",
            "update_at" : 1556488166377
          },
          "x15" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片15.PNG",
              "type" : "Picture"
            },
            "id" : "x15",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "15",
            "time" : 1555228371611,
            "title" : "15.4 Break",
            "update_at" : 1556488166377
          },
          "x16" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片16.PNG",
              "type" : "Picture"
            },
            "id" : "x16",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "16",
            "time" : 1555228371611,
            "title" : "16.4 Continue",
            "update_at" : 1556488166377
          },
          "x17" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片17.PNG",
              "type" : "Picture"
            },
            "id" : "x17",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "17",
            "time" : 1555228371611,
            "title" : "17.4 Pass",
            "update_at" : 1556488166377
          },
          "x18" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片18.PNG",
              "type" : "Picture"
            },
            "id" : "x18",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "18",
            "time" : 1555228371611,
            "title" : "18.4 Number",
            "update_at" : 1556488166377
          },
          "x19" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片19.PNG",
              "type" : "Picture"
            },
            "id" : "x19",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "19",
            "time" : 1555228371611,
            "title" : "19.4 データ変換",
            "update_at" : 1556488166377
          },
          "x20" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片20.PNG",
              "type" : "Picture"
            },
            "id" : "x20",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "20",
            "time" : 1555228371611,
            "title" : "20.4 数学関数",
            "update_at" : 1556488166377
          },
          "x21" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片21.PNG",
              "type" : "Picture"
            },
            "id" : "x21",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "21",
            "time" : 1555228371611,
            "title" : "21.4 ストリング",
            "update_at" : 1556488166377
          },
          "x22" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片22.PNG",
              "type" : "Picture"
            },
            "id" : "x22",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "22",
            "time" : 1555228371611,
            "title" : "22.4 ストリングエスケープ",
            "update_at" : 1556488166377
          },
          "x23" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片23.PNG",
              "type" : "Picture"
            },
            "id" : "x23",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "23",
            "time" : 1555228371611,
            "title" : "23.4 ストリングオペレーター",
            "update_at" : 1556488166377
          },
          "x24" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片24.PNG",
              "type" : "Picture"
            },
            "id" : "x24",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "24",
            "time" : 1555228371611,
            "title" : "24.4 ストリングフォーマット",
            "update_at" : 1556488166377
          },
          "x25" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片25.PNG",
              "type" : "Picture"
            },
            "id" : "x25",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "25",
            "time" : 1555228371611,
            "title" : "25.4 リスト（初期化、追加、削除）",
            "update_at" : 1556488166377
          },
          "x26" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片26.PNG",
              "type" : "Picture"
            },
            "id" : "x26",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "26",
            "time" : 1555228371611,
            "title" : "26.4 リスト（オペレーター）",
            "update_at" : 1556488166377
          },
          "x27" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片27.PNG",
              "type" : "Picture"
            },
            "id" : "x27",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "27",
            "time" : 1555228371611,
            "title" : "27.4 リスト（関数）",
            "update_at" : 1556488166377
          },
          "x28" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片28.PNG",
              "type" : "Picture"
            },
            "id" : "x28",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "28",
            "time" : 1555228371611,
            "title" : "28.4 リスト（メソッド）",
            "update_at" : 1556488166377
          },
          "x29" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片29.PNG",
              "type" : "Picture"
            },
            "id" : "x29",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "29",
            "time" : 1555228371611,
            "title" : "29.4 Tuple（初期化、追加、削除）",
            "update_at" : 1556488166377
          },
          "x30" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片30.PNG",
              "type" : "Picture"
            },
            "id" : "x30",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "30",
            "time" : 1555228371611,
            "title" : "30.4 Tuple（オペレーター）",
            "update_at" : 1556488166377
          },
          "x31" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片31.PNG",
              "type" : "Picture"
            },
            "id" : "x31",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "31",
            "time" : 1555228371611,
            "title" : "31.4 Tuple（関数）",
            "update_at" : 1556488166377
          },
          "x32" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片32.PNG",
              "type" : "Picture"
            },
            "id" : "x32",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "32",
            "time" : 1555228371611,
            "title" : "32.4 Dictionary（初期化、追加、削除）",
            "update_at" : 1556488166377
          },
          "x33" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片33.PNG",
              "type" : "Picture"
            },
            "id" : "x33",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "33",
            "time" : 1555228371611,
            "title" : "33.4 Dictionary（関数）",
            "update_at" : 1556488166377
          },
          "x34" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片34.PNG",
              "type" : "Picture"
            },
            "id" : "x34",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "34",
            "time" : 1555228371611,
            "title" : "34.4 Dictionary（メソッド）",
            "update_at" : 1556488166377
          },
          "x35" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片35.PNG",
              "type" : "Picture"
            },
            "id" : "x35",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "35",
            "time" : 1555228371611,
            "title" : "35.4 DateTime",
            "update_at" : 1556488166377
          },
          "x36" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片36.PNG",
              "type" : "Picture"
            },
            "id" : "x36",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "36",
            "time" : 1555228371611,
            "title" : "36.4 関数(基本)",
            "update_at" : 1556488166377
          },
          "x37" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片37.PNG",
              "type" : "Picture"
            },
            "id" : "x37",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "37",
            "time" : 1555228371611,
            "title" : "37.4 関数（変更不可パラメータ）",
            "update_at" : 1556488166377
          },
          "x38" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片38.PNG",
              "type" : "Picture"
            },
            "id" : "x38",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "38",
            "time" : 1555228371611,
            "title" : "38.4 関数（変更可能パラメータ）",
            "update_at" : 1556488166377
          },
          "x39" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片39.PNG",
              "type" : "Picture"
            },
            "id" : "x39",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "39",
            "time" : 1555228371611,
            "title" : "39.4 モジュール",
            "update_at" : 1556488166377
          },
          "x40" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片40.PNG",
              "type" : "Picture"
            },
            "id" : "x40",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "40",
            "time" : 1555228371611,
            "title" : "40.4 モジュール（関数一覧）",
            "update_at" : 1556488166377
          },
          "x41" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片41.PNG",
              "type" : "Picture"
            },
            "id" : "x41",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "41",
            "time" : 1555228371611,
            "title" : "41.4 モジュール（Package）",
            "update_at" : 1556488166377
          },
          "x42" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片42.PNG",
              "type" : "Picture"
            },
            "id" : "x42",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "42",
            "time" : 1555228371611,
            "title" : "42.4 ファイルI/O",
            "update_at" : 1556488166377
          },
          "x43" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片43.PNG",
              "type" : "Picture"
            },
            "id" : "x43",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "43",
            "time" : 1555228371611,
            "title" : "43.4 ファイル読む",
            "update_at" : 1556488166377
          },
          "x44" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片44.PNG",
              "type" : "Picture"
            },
            "id" : "x44",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "44",
            "time" : 1555228371611,
            "title" : "44.4 ファイル書く",
            "update_at" : 1556488166377
          },
          "x45" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片45.PNG",
              "type" : "Picture"
            },
            "id" : "x45",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "45",
            "time" : 1555228371611,
            "title" : "45.4 異常処理",
            "update_at" : 1556488166377
          },
          "x46" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片46.PNG",
              "type" : "Picture"
            },
            "id" : "x46",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "46",
            "time" : 1555228371611,
            "title" : "46.4 Directory",
            "update_at" : 1556488166377
          },
          "x47" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片47.PNG",
              "type" : "Picture"
            },
            "id" : "x47",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "47",
            "time" : 1555228371611,
            "title" : "47.4 内部関数",
            "update_at" : 1556488166377
          },
          "x48" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片48.PNG",
              "type" : "Picture"
            },
            "id" : "x48",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "48",
            "time" : 1555228371611,
            "title" : "48.4 Object",
            "update_at" : 1556488166377
          },
          "x49" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片49.PNG",
              "type" : "Picture"
            },
            "id" : "x49",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "49",
            "time" : 1555228371611,
            "title" : "49.4 Object使う",
            "update_at" : 1556488166377
          },
          "x50" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片50.PNG",
              "type" : "Picture"
            },
            "id" : "x50",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "50",
            "time" : 1555228371611,
            "title" : "50.4 正規表現",
            "update_at" : 1556488166377
          },
          "x51" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片51.PNG",
              "type" : "Picture"
            },
            "id" : "x51",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "51",
            "time" : 1555228371611,
            "title" : "51.4 DBアクセス（データ検索）",
            "update_at" : 1556488166377
          },
          "x52" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片52.PNG",
              "type" : "Picture"
            },
            "id" : "x52",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "52",
            "time" : 1555228371611,
            "title" : "52.4 DBアクセス（テーブル作成）",
            "update_at" : 1556488166377
          },
          "x53" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片53.PNG",
              "type" : "Picture"
            },
            "id" : "x53",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "53",
            "time" : 1555228371611,
            "title" : "53.4 DBアクセス（データインサート）",
            "update_at" : 1556488166377
          },
          "x54" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片54.PNG",
              "type" : "Picture"
            },
            "id" : "x54",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "54",
            "time" : 1555228371611,
            "title" : "54.4 ネットワーク（サーバ）",
            "update_at" : 1556488166377
          },
          "x55" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片55.PNG",
              "type" : "Picture"
            },
            "id" : "x55",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "55",
            "time" : 1555228371611,
            "title" : "55.4 ネットワーク（クライアント）",
            "update_at" : 1556488166377
          },
          "x56" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片56.PNG",
              "type" : "Picture"
            },
            "id" : "x56",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "56",
            "time" : 1555228371611,
            "title" : "56.4 SMTP",
            "update_at" : 1556488166377
          },
          "x57" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片57.PNG",
              "type" : "Picture"
            },
            "id" : "x57",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "57",
            "time" : 1555228371611,
            "title" : "57.4 Multithread",
            "update_at" : 1556488166377
          },
          "x58" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片58.PNG",
              "type" : "Picture"
            },
            "id" : "x58",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "58",
            "time" : 1555228371611,
            "title" : "58.4 Multithread（Class）",
            "update_at" : 1556488166377
          },
          "x59" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片59.PNG",
              "type" : "Picture"
            },
            "id" : "x59",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "59",
            "time" : 1555228371611,
            "title" : "59.4 XML処理（XMLファイル）",
            "update_at" : 1556488166377
          },
          "x60" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片60.PNG",
              "type" : "Picture"
            },
            "id" : "x60",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "60",
            "time" : 1555228371611,
            "title" : "60.4 XML処理（SAX）\u000B",
            "update_at" : 1556488166377
          },
          "x61" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片61.PNG",
              "type" : "Picture"
            },
            "id" : "x61",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "61",
            "time" : 1555228371611,
            "title" : "61.4 GUI処理",
            "update_at" : 1556488166377
          },
          "x62" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片62.PNG",
              "type" : "Picture"
            },
            "id" : "x62",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "62",
            "time" : 1555228371611,
            "title" : "62.4 GUI処理（ Tkinter ）",
            "update_at" : 1556488166377
          },
          "x63" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片63.PNG",
              "type" : "Picture"
            },
            "id" : "x63",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "63",
            "time" : 1555228371611,
            "title" : "63.4 GUI処理（ Tkinterコンポーネント）\u000B",
            "update_at" : 1556488166377
          },
          "x64" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片64.PNG",
              "type" : "Picture"
            },
            "id" : "x64",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "64",
            "time" : 1555228371611,
            "title" : "64.4 オンライン環境",
            "update_at" : 1556488166377
          },
          "x65" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片65.PNG",
              "type" : "Picture"
            },
            "id" : "x65",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "65",
            "time" : 1555228371611,
            "title" : "65.4 IDE",
            "update_at" : 1556488166377
          },
          "x66" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片66.PNG",
              "type" : "Picture"
            },
            "id" : "x66",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "66",
            "time" : 1555228371611,
            "title" : "66.4 TensorFlow",
            "update_at" : 1556488166377
          },
          "x67" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片67.PNG",
              "type" : "Picture"
            },
            "id" : "x67",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "67",
            "time" : 1555228371611,
            "title" : "67.4 Package",
            "update_at" : 1556488166377
          },
          "x68" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "picturePath" : "http://jp.highwayns.com/study_1/pythonintro/幻灯片68.PNG",
              "type" : "Picture"
            },
            "id" : "x68",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "68",
            "time" : 1555228371611,
            "title" : "68.4 PyIndex",
            "update_at" : 1556488166377
          },
          "x69" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "certificatePath" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledgecontents%2FiHmcxnnRDWPOJAE38On1nCdq0ir2%2F-LdLubY6J4gW1t94t63xx69?alt=media&token=ae8fedde-367c-4a1e-b35f-333f5b83551b",
              "type" : "Certificate"
            },
            "id" : "x69",
            "knowledgeid" : "-LdLubY6J4gW1t94t63x",
            "name" : "tei952",
            "ord" : "69",
            "time" : 1555228371611,
            "title" : "69.9 御修了ありがとうございました。",
            "update_at" : 1556488166377
          }
        }
      },
      "-LdLv2K4G35jI5thkNgR" : {
        "contents" : {
          "x01" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>Spring Frameworkの開発元（米Pivotal）では、Spring \nFrameworkを利用した開発のための専用ツールを用意しています。\n「Spring Tool Suite（STS）」と呼ばれるもので、Eclipseを\nベースに専用のプラグインを組み合わせて作られています。\nhttp://spring.io/tools/sts</code></pre>",
              "type" : "Html"
            },
            "id" : "x01",
            "knowledgeid" : "-LdLv2K4G35jI5thkNgR",
            "name" : "tei952",
            "ord" : "01",
            "time" : 1555228371611,
            "title" : "1.0 Springプロジェクトの作成",
            "update_at" : 1556488166377
          },
          "x02" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nSpring利用プロジェクトの作成について説明しましょう。まずは、\nMavenを利用している場合の作成方法です。コマンドプロンプトある\nいはターミナルを起動し、プロジェクトを作成する場所にcdコマンド\nで移動してから、以下のように実行して下さい。\nmvn archetype:generate</p>\n<p>実行すると、利用可能なリポジトリがずらっと表示されます。\nChoose a number or apply filter (format: [groupId:]artifactId, \ncase sensitive contains): 618:</p>\n<p>これはそのままEnterしてOKです。\nChoose org.apache.maven.archetypes:maven-archetype-quickstart version:</p>\n<p>最新バージョンがデフォルトで指定されていますので、そのまま\nEnterすればOKです。\nDefine value for property &#39;groupId&#39;: :</p>\n<p>グループIDを指定します。ここでは、「com.tuyano.libro」として\nおきました。\nDefine value for property &#39;artifactId&#39;: :</p>\n<p>アーティファクトIDの指定です。ここでは、「MySpringApp」として\nおきました。\nDefine value for property &#39;version&#39;:  1.0-SNAPSHOT: :</p>\n<p>versionプロパティの設定です。defaultのままでいいので、そのま\nまEnterします。\nDefine value for property &#39;package&#39;:  com.tuyano.libro: :</p>\n<p>プログラムのパッケージを指定します。これはグループIDが指定され\nていますのでそのままEnterすればいいでしょう。</p>\n<p>ここまで設定した内容がずらっとまとめて表示されるので、間違いが\nなければそのままEnterします。間違いがあったら、「N」とタイプし\nてEnterし、再度入力をします。これでプロジェクトが生成されます\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x02",
            "knowledgeid" : "-LdLv2K4G35jI5thkNgR",
            "name" : "tei952",
            "ord" : "02",
            "time" : 1555228371611,
            "title" : "2.0 Mavenによるプロジェクトの作成",
            "update_at" : 1556488166377
          },
          "x03" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n作成されたプロジェクトのフォルダ（ここでは「MySpringApp」フォ\nルダ）の中には、「src」フォルダと「pom.xml」というファイルが\n作成されています。</p>\n<p>「src」フォルダは、プロジェクトのファイル類がまとめられている\nところです。この中には以下のフォルダがあります。</p>\n<p>「main」フォルダ――プログラムで使用するファイル類がまとめられま\nす。\n「test」フォルダ――プログラムで使うユニットテストのソースコード\nがまとめられます。</p>\n<p>「main」フォルダ内には「java」フォルダがあり、その中にパッケ\nージのフォルダ構成が用意され、そこに「App.java」というソース\nコードファイルが作成されます。これは、サンプルとして作成された\nソースコードファイルで、中身はSpring Frameworkとは全然関係の\nない、ただのシンプルなJavaアプリケーションです。</p>\n<p>もう１つの「pom.xml」ファイルが、Mavenプロジェクトのキモとな\nるものです。これは、プロジェクトに必要なライブラリなどの情報を\n記述したものです。Mavenでは、このファイルの情報を元に必要なフ\nァイル類をダウンロードしプロジェクトを生成していきます。つま\nり、このpom.xmlをきっちりと書いておかないと、プロジェクトはう\nまく作成できないのです。</p>\n<p>下に、デフォルトで記述されているpom.xmlの内容をあげておきま\nす。pom.xmlは、<project>というタグの中に、ざっと以下のような\nタグを記述して構成されています。</p>\n<p><groupId>　――グループIDです。</p>\n<p><artifactId>　――アーティファクトIDです。</p>\n<version>　――バージョンを示すテキストです。\n<packaging>　――パッケージの種類です。\n<name>　――プロジェクト名です。\n<url>　――URLです。\n\n<properties>　――各種のプロパティが記述されます。ここでは、&lt;project.build.sourceEncoding&gt;というものが用意されています。これはプロジェクトのデフォルトエンコーディングを指定するも\nのです。\n\n<dependencies>　――この中に<dependency>というタグを使って、\n必要なライブラリの情報を記述します。デフォルトでは、JUnitのラ\nイブラリに関する情報が記述されています。\n\n――これらのタグを記述して必要なライブライを構成していくのが、\nMavenによるプロジェクト作成の基本なのです。\n<code>## 4.0 pom.xml</code>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 \nhttp://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.tuyano.libro</groupId>\n    <artifactId>MySpringApp</artifactId>\n    <version>1.0-SNAPSHOT</version>\n    <packaging>jar</packaging>\n\n    <name>MySpringApp</name>\n    <url>http://maven.apache.org</url>\n\n    <properties>\n    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;\n    </properties>\n\n    <dependencies>\n    <dependency>\n        <groupId>junit</groupId>\n        <artifactId>junit</artifactId>\n        <version>3.8.1</version>\n        <scope>test</scope>\n    </dependency>\n    </dependencies>\n</project>\n<code>## 5.0 pom.xmlにSpringのコアライブラリを追記する</code>\n下に掲載したのが、修正したpom.xmlです。ここでは、<dependencies>タグの中に、以下のようなタグが追加されています\nね。\n<dependency>\n  <groupId>org.springframework</groupId>\n  <artifactId>spring-context</artifactId>\n  <version>4.1.7.RELEASE</version>\n</dependency>\n\n記述したら、「cd MySpringApp」でプロジェクトのフォルダ内に移\n動し、以下のように実行して下さい。\nmvn install\n<code>## 6.0 プログラム実行</code>\nこれで、必要なライブラリなどをダウンロードし、プロジェクトをビ\nルドしてJarファイルを作成します。「target」フォルダというもの\nが作成されるので、この中を見てみましょう。すると、「MySpringApp-0.0.1-SNAPSHOT.jar」というファイルが作成され\nているはずです。これがビルドされたJarファイルです。\n\nでは、これを実行してみましょう。コマンドラインから「cd \ntarget」を実行して「target」フォルダ内に移動し、以下のように\n実行をします。\njava -classpath .;MySpringApp-0.0.1-SNAPSHOT.jar com.tuyano.libro.App\n\nクラスパスにMySpringApp-0.0.1-SNAPSHOT.jarを指定して、\ncom.tuyano.libro.Appを実行します。これで、Appクラスのmainメ\nソッドが実行され、「Hello World!」とテキストが表示されます。\n<code>## 7.0 STSでSpringプロジェクトを作成する</code>\nSTSを起動し、＜File＞メニューの＜New＞メニュー内から、\n＜Spring Project＞メニューを選びます。\n\n現れたダイアログで、以下のように設定を行います。\n\nProject name――プロジェクト名です。先ほどMavenで作成したのと\n同じものを作るならば、「MySpringApp」と入力しておけばいいでし\nょう。\n\nTemplate――「Simple Project」内にある「Simple Spring \nMaven」を選択します。\n\nWorking sets――ここでは特に使わないのでチェックはOFFにしてお\nきます。\n\nこれで「Finish」ボタンを押せば、プロジェクトが作成されます。た\nだし、この段階では、特にJavaのソースコードファイルは用意されて\nいませんので、後で必要に応じてクラスを作成していくことになるで\nしょう。\n<code>## 8.0 DIは「依存性」を切り離すこと</code>\nSpring Frameworkは、「DIコンテナ」と呼ばれるフレームワークと\nしてスタートしました。DIとは、「依存性注入」と呼ばれる機能で\nす。\n\nプログラムでは、さまざまな機能をコンポーネント化して利用するこ\nとが多いものです。コンポーネントに各種のプロパティなどを設定し\nて利用するわけですね。このとき、細々とした設定をすべてコードと\nして記述しておくと、後々変更やテストなどが非常に面倒になりま\nす。\n\nこのコンポーネントの設定などのように、特定の状況などで設定され\nるものを「依存性」と呼びます。この依存性があるために、コードが\n特定の状況でしか使えない形になってしまっているのですね。\n\nそこで、コンポーネントの設定情報などの依存性をコードから切り離\nし、外部から注入するようにしよう、というのが「依存性注入」の基\n本的な考え方です。これは、いくつかのやり方があるのですが、基本\nは「Beanと設定ファイル」でプログラムを作ること、と考えておくと\nわかりやすいでしょう。\n\nBeanは、さまざまな値などをプロパティとして持っているシンプルな\nクラスですね。通常は、Beanはインスタンスを作成して、各種のプロ\nパティなどを設定して利用します。が、この設定処理（依存性の部\n分）をコードから切り離してしまうことができれば、コードもシンプ\nルになるしテストもしやすくなりますね。\n\nSpring Frameworkでは、依存性の部分をXMLファイルとして用意\nし、これを読み込むことで自動的にBeanインスタンスを生成すること\nができます。他にもアノテーションを利用する方法などもあるのです\nが、Beanの設定ファイルを利用する方法が一番基本として覚えておく\nとよいでしょう。\n\n<code>## 9.0 インターフェイスとBeanクラスの作成</code>\nSampleBeanInterfaceインターフェイス\npackage com.tuyano.libro;\n\npublic interface SampleBeanInterface {\n    public String getMessage();\n    public void setMessage(String message);\n}\n\nSampleBeanクラス\n\npackage com.tuyano.libro;\n\npublic class SampleBean implements SampleBeanInterface {\n    private String message;\n\n    public SampleBean() {\n        message = &quot;(no message)&quot;;\n    }\n\n    public SampleBean(String message) {\n        this.message = message;\n    }\n\n    public String getMessage() {\n        return message;\n    }\n\n    public void setMessage(String message) {\n        this.message = message;\n    }\n\n    @Override\n    public String toString() {\n        return &quot;SampleBean [message=&quot; + message + &quot;]&quot;;\n    }\n}\n<code>## 10.0 Bean設定ファイルの作成</code>\nこのBeanを利用するための設定ファイルを作成しましょう。プロジェ\nクトの「src」フォルダ内にある「main」フォルダの中に、\n「resources」というフォルダを用意して下さい。この中に、Bean設\n定ファイルを作成します。\n\n下のリスト欄に掲載したのが、そのサンプルです。これを記述し、\n「bean.xml」というファイル名で「resources」フォルダ内に保存\nしましょう。\n\nこのBean設定ファイルは、<beans>というタグの中に、<bean>タグ\nを使ってBeanの情報を記述していきます。これは以下のように記述し\nます。\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://www.springframework.org/schema/beans \n    http://www.springframework.org/schema/beans/spring-beans.xsd\">\n\n\n    <bean id=\"bean1\" class=\"com.tuyano.libro.SampleBean\">\n        <property name=\"message\" value=\"Hello, this is Bean Sample!!\" />\n    </bean>\n\n</beans>\n<code>## 11.0 アプリケーションからBeanを利用する</code>\npackage com.tuyano.libro;\n\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n\npublic class App {\n\n    public static void main(String[] args) {\n        ApplicationContext app = new ClassPathXmlApplicationContext(&quot;bean.xml&quot;);\n        SampleBeanInterface bean1 = (SampleBeanInterface)app.getBean(&quot;bean1&quot;);\n        System.out.println(bean1);\n    }\n\n}\n<code>## 12.0 別のBeanを追加する</code>\nクラスの用意ができたら、bean.xmlを開き、先に記述した<bean>タ\nグの部分を下のように書き換えてみてください。\n<bean id=\"bean1\" class=\"com.tuyano.libro.SomeBean\">\n    <property name=\"message\" value=\"2015/7/24\" />\n</bean>\n\n\npackage com.tuyano.libro;\n\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Calendar;\nimport java.util.Date;\n\npublic class SomeBean \n     implements SampleBeanInterface {\n    private Date date;\n    private SimpleDateFormat format;\n\n    public SomeBean() {\n        date = Calendar.getInstance().getTime();\n        format = new SimpleDateFormat(&quot;yyyy/MM/dd&quot;);\n    }\n\n    public String getMessage() {\n        return format.format(date);\n    }\n\n    public void setMessage(String message) {\n        try {\n            date = format.parse(message);\n        } catch (ParseException e) {\n            e.printStackTrace();\n            date = null;\n        }\n    }\n\n    @Override\n    public String toString() {\n        return &quot;SomeBean [date=&quot; + format.format(date) + &quot;]&quot;;\n    }\n}\n<code>## 13.0 アノテーションによるBean操作とは？</code>\nアノテーションとは、クラスやメソッド、フィールドなどの宣言文の\n上に書かれる、「＠記号で始まるテキスト」のことです。例えば、あ\nるクラスのサブクラスを作ったとき、メソッドのオーバーライドを明\n示的にするために、「@Override」といったアノテーションを書いた\nことぐらいはあるでしょう。\n\nアノテーションは、クラス内には影響を与えません。また、修正すれ\nば再ビルドなどは必要になりますが、メソッドやクラスにシンプルな\n単語を書くだけで必要な操作を行えるためわかりやすく、多くのフレ\nームワークが設定ファイルに別れを告げてアノテーション方式に切り\n替えています。\n\nSpring Frameworkでも、設定ファイル方式とアノテーション方式の\nいずれのやり方もサポートしています。前回、Bean設定ファイルを使\nった基本について説明しましたから、今回はアノテーション方式につ\nいて説明しましょう。\n\n<code>## 14.0 Bean設定クラスを作成する</code>\nアノテーション方式は、Bean設定ファイルを使わず、Javaのクラス\nで全てを作成するというやり方です。ということは、Bean設定ファイ\nルに相当するクラスを用意する必要があります。\n\nでは、Bean設定クラスを作成してみましょう。前回、利用した\nMySpringAppプロジェクトをそのまま利用します。今回は、\ncom.tuyano.libroパッケージ内に「SampleBeanConfig」というク\nラスを作成しましょう。下にソースコードを掲載しておきましたの\nで、それを参考に記述下さい。\n\nBean設定クラスも、見ればわかるようにシンプルなPOJOクラスとし\nて定義されます。ただし、２つのアノテーションが記述されています\nね。\n\n@Configuration\nこれは、クラス宣言の前に記述します。このアノテーションは、この\nクラスがBeanの設定を行うものであることを示します。Bean設定ク\nラスには常にこれをつけます。\n\n@Bean\nBeanを作成するメソッドの前に記述します。これを記述すると、その\nメソッドをBeanインスタンス作成のためのものと認識します。これを\nつけるメソッドは、必ずBeanインスタンスを返値として指定しておき\nます。\n\n今回は、SampleBeanInterfaceインスタンスをBeanとして生成する\nための設定クラスを定義していた、というわけですね。\npackage com.tuyano.libro;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\npublic class SampleBeanConfig {\n\n    @Bean\n    public SampleBeanInterface sampleBean() {\n        return new SampleBean(&quot;設定クラスで作ったインスタンスです。&quot;);\n    }\n\n}\n<code>## 15.0 Appクラスを修正する</code>\n今回は、bean.xmlを利用した場合とはちょっと違ったやり方をして\nいます。簡単にまとめましょう。\n\nApplicationContextを取得する\nApplicationContext app = new \n    AnnotationConfigApplicationContext(SampleBeanConfig.class);\nまず、ApplicationContextインスタンスを作成します。これは同じ\nですが、よく見ると使っているクラスが違っていますね。今回は\n「AnnotationConfigApplicationContext」というクラスのインス\nタンスを作成しています。\n\nこれは、Bean設定クラスを利用してApplicationConfigを作成する\nためのものです。引数には、設定クラスのClass値を指定します。こ\nれで、その設定クラスからBeanを管理するApplicationContextが作\n成されます。\n\nBeanを取得する\nSampleBeanInterface bean1 = \n    (SampleBeanInterface)app.getBean(SampleBeanInterface.class);\n\n\nBeanの取得は、これまでとまったく同じです。「getBean」メソッド\nを使い、引数に取り出すBeanのClassを指定するだけです。これでそ\nのBeanのインスタンスが得られます。\n\n引数には、取得するBeanクラスのClass値を指定します。これで、指\n定クラスのBeanが得られます。\npackage com.tuyano.libro;\n\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.annotation.AnnotationConfigApplicationContext;\n\npublic class App {\n\n    public static void main(String[] args) {\n        ApplicationContext app = new\n            AnnotationConfigApplicationContext(SampleBeanConfig.class);\n        SampleBeanInterface bean1 = \n            (SampleBeanInterface)app.getBean(SampleBeanInterface.class);\n        System.out.println(bean1);\n    }\n}\n<code>## 16.0 コンポーネントを作成しよう</code>\nアノテーションによるBean利用は、いろいろと応用ができます。基本\nがわかったら、続いてBeanを利用する「コンポーネント」を使ってみ\nましょう。\n\nSpring Frameworkでは、高度な機能を持ったクラスをコンポーネン\nトとして定義し、Beanと同じような感覚で利用できます。簡単なサン\nプルとして、「BeanHolder」というコンポーネントクラスを作って\nみましょう。\n\ncom.tuyano.libroパッケージに、BeanHolderクラスを作成し、下の\n掲載するようにソースコードを記述して下さい。\n\nこのBeanHolderは、ごくシンプルなコンポーネントです。このコン\nポーネント内では、先ほどのBean設定クラスで用意したBeanをフィ\nールドに保管しており、それを利用したメソッドが用意されていま\nす。ポイントを整理していきましょう。\n\n「@Component」アノテーション\nクラスの宣言の手前には、@Componentというアノテーションがつけ\nられています。これは、そのクラスがコンポーネントであることを示\nすためのものです。コンポーネントクラスには必ずこれを付けておき\nます。\n\n「@Autowired」アノテーション\nこのクラスには、SampleBeanInterfaceをフィールドに保管してい\nます。このフィールドには、@Autowiredというアノテーションがつ\nけられています。これは、Bean設定クラス（あるいはファイル）によ\nって自動生成されたBeanインスタンスを自動的にバインドするための\nものです。\n\nこれをつけることで、生成されたBean群の中から\nSampleBeanInterfaceインスタンスのものを探してこのbeanフィー\nルドに自動的に代入するのです。この@Autowairedは、コンポーネン\nトに限らず、さまざまなBean利用シーンで用いられます。\n\n<code>## 17.0 BeanHolder</code>\npackage com.tuyano.libro;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class BeanHolder {\n\n    @Autowired\n    private SampleBeanInterface bean;\n\n    public void showMessage() {\n        System.out.println(&quot;<em>print by BeanHolder</em>&quot;);\n        System.out.println(bean);\n        System.out.println(&quot;<em>end</em>&quot;);\n    }\n\n}\n<code>## 18.0 コンポーネントを利用する</code>\nコンポーネントを実際に利用しましょう。App.javaを開き、下のソ\nースコードのように書き換えてください。そして実行してみましょ\nう。\n\n「<em>print by BeanHolder</em>」という表示の下に、SampleBeanの出力\nがされます。BeanHolderが取得され、その中でSampleBeanを使って\n処理を実行しているのがよくわかりますね。\n\nここでは、AnnotationConfigApplicationContextインスタンスを\n作成した後、getBeanで「BeanHolder.class」を引数に指定して\nBeanHolderインスタンスを取得しています。BeanHolderは、Bean設\n定クラス（SampleBeanConfig）には記述されていません。が、ちゃ\nんとgetBeanで取り出せるのです。\n\nこれは、Bean設定ファイルの@ComponentScanにより、@Component\nを指定されたクラスが検索され、そのインスタンスが\nApplicationContextに登録されているからです。またその内部で\nは、@Autowiredにより、SampleBeanが自動的にフィールドに設定さ\nれていたので、その値がshowMessageで出力されていた、というわけ\nです。\n\nこのように、アノテーションを使うと、必要なBeanやコンポーネント\n類がすべて自動的に用意され使えるようになります。Spring \nFrameworkのBean利用の基本的な仕組みが、これでだいぶわかってき\nたのではないでしょうか。\n\nDIによるBeanの利用は、Spring Frameworkの中核をなす技術です。\nSpring Frameworkにはさまざまなライブラリが用意されています\nが、それらはすべて、このBean技術を使って必要な機能をBean化\nし、利用しています。Bean利用がわからないと、Spring Framework\nの基本的な使い方が理解できないのです。これらは「Spring \nFrameworkの基本中の基本」として、しっかり理解しておきましょ\nう。\npackage com.tuyano.libro;\n\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.annotation.AnnotationConfigApplicationContext;\n\npublic class App {\n\n    public static void main(String[] args) {\n        ApplicationContext app = new\n            AnnotationConfigApplicationContext(SampleBeanConfig.class);\n        BeanHolder holder = app.getBean(BeanHolder.class);\n        holder.showMessage();\n    }\n}\n<code>## 19.0 AOPの利用</code>\nAOPは、「Aspect Oriented Programming（アスペクト指向プログ\nラミング）」の略です。アスペクトというのは、一般に「横断的関心\n事」と呼ばれるものです。\n\nオブジェクト指向では、プログラムは「クラス」を単位として作成さ\nれます。それぞれのクラスごとに、そのクラスに必要な機能をメソッ\nドとして実装してくわけですね。この手法は、考え方としてはよくで\nきていますが、逆に「クラスごとに完結している」ということが面倒\nになってしまうこともあります。\n\n例えば、プログラムの開発中、動作状況をチェックするために、あち\nこちにSystem.out.println文を書いて値を出力させている、なんて\n人はいませんか？　誰しもよくやる方法ですね。これ、考えてみると\nものすごく面倒くさいやり方です。多数のクラスがあったら、それぞ\nれのクラスのそれぞれのメソッドにprintlnを書いていかないといけ\nません。更に、そうやってプログラムが完成したら、すべての\nprintlnを削除しないといけないのです。\n\nこういう「多数のクラスにわたって共通して必要となる処理」が、横\n断的関心事です。もしも、さまざまなクラスの中にあるメソッドに、\nprintln文を自動的に挿入できる機能があったら、これはかなり便利\nじゃありませんか？　そして必要がなくなったらすべて自動的に削除\nできるとしたら？　これこそが、AOPの考え方なのです。\n\nDIが「依存性（値）の注入」なら、AOPは「処理の注入」といってよ\nいでしょう。外部から、クラス内の特定のところに、あらかじめ用意\nしておいた処理を挿入したり取り除いたりする。これがAOPで実現さ\nれることです。\n<code>## 20.0 pom.xmlの準備</code>\n<dependency>\n    <groupId>org.springframework</groupId>\n    <artifactId>spring-aop</artifactId>\n    <version>4.1.7.RELEASE</version>\n</dependency>\n<code>## 21.0 AOPを利用するBeanクラスを用意する</code>\nAOPを利用してみましょう。AOPは、特定の処理を外部からクラス内に\n挿入する働きをします。これを実現するためには以下のようなものを\n用意する必要があります。\n\nAOPの対象となるクラス。ごく一般的なBeanクラスを用意してお\nく。\nAOPで挿入する処理を用意したクラス。ここに挿入する処理を用意す\nる\nAOPに関する設定情報。これはBean設定ファイルか、設定クラスを使\nって用意する。\n\nまずは、AOP対象となるクラスを用意しましょう。今回は、\ncom.tuyano.libro.aopというパッケージを用意して、この中に必要\nなクラス類をまとめることにします。「SampleAopBean」というクラ\nスを下のリストのように作成しておくことにしましょう。\n\nこれは、先に作ったSampleBeanとほとんど同じものです。メッセー\nジを保管するmessageプロパティと、コンストラクタ、そして\nprintMessageというメソッドを用意しておきました。このように、\n使用するBean自体は、ごくごくシンプルなPOJOクラスであるのが\nSpring Frameworkの特徴でしょう。\n<code>## 22.0 SampleAopBean</code>\npackage com.tuyano.libro.aop;\n\npublic class SampleAopBean {\n    private String message;\n\n    public SampleAopBean() {\n        super();\n    }\n    public SampleAopBean(String message) {\n        this.message = message;\n    }\n\n    public String getMessage() {\n        return message;\n    }\n\n    public void setMessage(String message) {\n        this.message = message;\n    }\n\n    public void printMessage() {\n        System.out.println(&quot;message:[&quot; + message + &quot;]&quot;);\n    }\n}\n<code>## 23.0 MethodBeforeAdviceクラスの作成</code>\nこのSampleAopBeanにAOPで挿入する処理を用意しましょう。これ\nも、もちろんJavaのクラスとして定義します。\n\ncom.tuyano.libro.aopパッケージ内に、「SampleMethodAdvice」\nという名前でクラスを作成しましょう。そして下のリスト欄のように\nコードを記述して下さい。\n\n今回作成したSampleMethodAdviceは、２つのインターフェイスを実\n装しています。このインターフェイスにより、処理の挿入に関するメ\nソッドを追加します。それぞれ簡単に整理しましょう。\n\n●MethodBeforeAdvice\nこれは、メソッドの実行前に処理を挿入するためのインターフェイス\nです。これは「before」というメソッドを１つ持っており、以下のよ\nうに定義されています。\npublic void before(Method method, Object[] args, Object target) \n    throws Throwable \n\nMethodは対象となるメソッド、argsはその引数、targetは対象とな\nるオブジェクト（インスタンス）がそれぞれ渡されます。これらの引\n数により、どのインスタンスのどのメソッドが呼び出される前にこの\n処理が実行されたかを知ることができます。\n\n●AfterReturningAdvice\nこれは、メソッドの実行が終わり、呼び出し元に戻される際に挿入す\nる処理のインターフェイスです。「AfterReturningAdvice」という\nメソッドが用意されています。これは以下のように定義されていま\nす。\npublic void afterReturning(Object returnValue, Method method, \n    Object[] args, Object target) throws Throwable\n\nメソッドの返値、メソッド、メソッドに渡された引数、ターゲットの\nインスタンスといったものが引数に渡されます。返値以外は上の\nbeforeと同じなので、ほぼ同じ感覚で扱うことができるでしょう。\n\n――ここでは、それぞれメソッドとターゲットをSystem.out.println[で出力しているだけです。AOPは、「処理を挿入する」といいました[が、どこでもいいから好き勝手に挿入するというわけではありませ[ん。「このタイミングで挿入する」ということがあらかじめいくつ[か用意されているのです。\n\nとりあえず、この２つのインターフェイスを覚えれば、「メソッドの[呼び出し前と呼び出し後」に処理を挿入できるようになります。AOP[の基本を覚えるには十分でしょう\n<code>## 24.0 SampleMethodAdvice</code>\npackage com.tuyano.libro.aop;\n\nimport java.lang.reflect.Method;\n\nimport org.springframework.aop.AfterReturningAdvice;\nimport org.springframework.aop.MethodBeforeAdvice;\n\npublic class SampleMethodAdvice \n        implements MethodBeforeAdvice, AfterReturningAdvice {\n\n    @Override\n    public void before(Method method, Object[] args, \n            Object target) throws Throwable {\n        System.out.println(&quot;<em>before: &quot; + method.getName() + &quot;[&quot; + target + &quot;]&quot;);\n    }\n\n    @Override\n    public void afterReturning(Object returnValue, Method method, \n            Object[] args, Object target) throws Throwable {\n        System.out.println(&quot;</em>after: &quot; + method.getName() + &quot;[&quot; + target + &quot;]&quot;);\n    }\n\n}\n<code>## 25.0 bean.xmlを作成する</code>\n\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n<beans\n    xmlns=\"http://www.springframework.org/schema/beans\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://www.springframework.org/schema/beans \n    http://www.springframework.org/schema/beans/spring-beans.xsd\">\n\n    <!-- aop bean... -->\n    <bean id=\"sampleAopBean\" class=\"com.tuyano.libro.aop.SampleAopBean\">\n        <property name=\"message\" value=\"this is AOP bean!\" />\n    </bean>\n    <bean id=\"sampleMethodAdvice\"\n        class=\"com.tuyano.libro.aop.SampleMethodAdvice\" />\n\n    <bean id=\"proxyFactoryBean\"\n            class=\"org.springframework.aop.framework.ProxyFactoryBean\">\n        <property name=\"target\" ref=\"sampleAopBean\"></property>\n        <property name=\"interceptorNames\">\n            <list>\n                <value>sampleMethodAdvice</value>\n            </list>\n        </property>\n    </bean>\n\n</beans>\n<code>## 26.0 AOPを実行しよう</code>\npackage com.tuyano.libro.aop;\n\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n\npublic class App {\n\n    public static void main(String[] args) {\n        ApplicationContext app = new ClassPathXmlApplicationContext(&quot;bean.xml&quot;);\n\n        SampleAopBean bean1 = (SampleAopBean) app.getBean(&quot;sampleAopBean&quot;);\n        bean1.printMessage();\n\n        System.out.println(&quot;--------------------&quot;);\n\n        SampleAopBean bean2 = (SampleAopBean) app.getBean(&quot;proxyFactoryBean&quot;);\n        bean2.printMessage();\n    }\n\n}\n<code>## 27.0 アノテーションでAOP設定クラスを作る</code>\npackage com.tuyano.libro.aop;\n\nimport org.springframework.aop.framework.ProxyFactoryBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\npublic class SampleAopConfig {\n    private SampleAopBean sampleAopBean = \n        new SampleAopBean(&quot;this is message bean.&quot;);\n    private SampleMethodAdvice sampleMethodAdvice = \n        new SampleMethodAdvice();\n\n    @Bean\n    SampleAopBean sampleAopBean() {\n        return sampleAopBean;\n    }\n\n    @Bean\n    SampleMethodAdvice sampleMethodAdvice() {\n        return sampleMethodAdvice;\n    }\n\n    @Bean\n    ProxyFactoryBean proxyFactoryBean() {\n        ProxyFactoryBean bean = new ProxyFactoryBean();\n        bean.setTarget(sampleAopBean);\n        bean.setInterceptorNames(&quot;sampleMethodAdvice&quot;);\n        return bean;\n    }\n\n\n}\n<code>## 28.0 AspectJを利用する</code>\nAOPについて調べてみると、おそらく「AspectJ」というソフトウェ\nアについてたくさん見つかることでしょう。AspectJは、JavaのAOP\nソフトウェアのデファクトスタンダードといっていいほどに広く使わ\nれているソフトです。\n\nSpring AOPでも、このAspectJを利用してAOPの実装をするための機\n能が用意されています。前回使ったSpring AOPとはまた違った形で\nAOPを実装できるので、こちらの使い方も覚えておきたいところで\nす。\n\nでは、まずAspectJを利用するための準備をしましょう。pom.xmlを\n開き、<dependencies>タグ内に下のリスト欄の内容を追記して下さ\nい（既に書いてあるspring-coreやspring-aopのタグは削除しない\nように！）。\n\n例によって、ここではSpring Framework 4.1.7に合わせてバージョ\nンを指定してますので、他のバージョンを使っている場合はそれにあ\nわせて<version>を調整して下さい。\n\nここでは２つのライブラリを追加しています。「AspectJ RT」は、\nAspectJのランタイムプログラムです。これが入っていれば、\nAspectJの機能を利用できるようになります。また「AspectJ \nWeaver」は、アスペクトの情報を元にアスペクトを組み込んだコード\nを生成するのに必要なユーティリティプログラムです。Spring AOP\nからAspectJを利用する際には、この２つをセットで用意して下さ\nい。\n<dependency>\n    <groupId>org.aspectj</groupId>\n    <artifactId>aspectjrt</artifactId>\n    <version>1.8.6</version>\n</dependency>\n<dependency>\n    <groupId>org.aspectj</groupId>\n    <artifactId>aspectjweaver</artifactId>\n    <version>1.8.6</version>\n</dependency>\n<code>## 29.0 アスペクト・クラスを作成する</code>\nアスペクトで挿入する処理となるクラスを作成しましょう。今回は、\nAspectJを利用するため、前回とは違った形になります。\n\n下のリストが、作成するサンプルです。com.tuyano.libro.aopパッ\nケージに、「SampleAspect」というクラス名で作成をしましょう。\n\n見ればわかるように、これはごく一般的なPOJOクラスです。何のイン\nターフェイスも実装していませんし、何のクラスも継承していませ\nん。違うのは、アノテーションが付けられていることだけです。\n\n@Aspect\nこれがアスペクト・クラスであることを示します。AspectJで利用す\nるためのクラスは、このアノテーションをつけておきます。\n\n@Before\nこれはメソッドの手前に付けます。メソッドの実行前に挿入される処\n理であることを示すアノテーションです。Spring AOPにあった\n「before」と同様のものと考えてよいでしょう。\n\n@After\nこれもメソッドの手前に付けます。こちらはメソッドの実行後に挿入\nされる処理であることを示すアノテーションです。Spring AOPにあ\nった「afterRunning」に相当するものと考えるとよいでしょう。\n\n\n――アノテーションそのものはシンプルです。わかりにくいのは、\n@Beforeと@Afterの後にある()内の記述でしょう。これは以下のよう\nに記述されています。\n(&quot;execution(……割り当てるメソッドの指定……)&quot;)\n\nexecutionの後の()に、どのメソッドにこのメソッド挿入を行うかを\n指定します。これはパッケージ名からきっちりと正確にメソッドを指\n定する必要があります。ただし、すべての名前を記述しなければいけ\nないわけではありません。\n\nここではワイルドカード（<em>）が利用できるので、それを利用して特\n定パッケージやクラス内のすべてのメソッドなどを指定できます。ま\nた指定するメソッドの引数にも、「..」という記号で不特定の引数を\n指定できます。\n\nここでの記述を見ると、以下のようになっていますね。\n</em> com.tuyano.libro.aop.SampleAopBean.<em>(..)\n\nわかりやすく、「不特定の値」を○○と記述すると、こんな具合に書か\nれていることがわかります。\n○○ com.tuyano.libro.aop.SampleAopBean.○○(○○)\n\n一番最初にある○○は、publicとかprivateといったものが指定された\n場合を考えてつけています。またSampleAopBeanの後の○○は、このク\nラス内にあるどんなメソッドも全て対象に指定するものです。また\n(○○)は、引数がどんな形であっても対象とするためのものです。\n\nこのexecutionの書き方がある程度わかれば、思い通りにAOP処理の\n対象となるメソッドを指定できるようになるでしょう。\n\n<code>## 30.0 SampleAspect</code>\npackage com.tuyano.libro.aop;\n\nimport org.aspectj.lang.annotation.After;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.aspectj.lang.annotation.Before;\n\n@Aspect\npublic class SampleAspect {\n\n    @Before(&quot;execution(</em> com.tuyano.libro.aop.SampleAopBean.<em>(..))&quot;)\n    public void before() {\n        System.out.println(&quot;before:&quot;);\n    }\n\n    @After(&quot;execution(</em> com.tuyano.libro.aop.SampleAopBean.*(..))&quot;)\n    public void after() {\n        System.out.println(&quot;after:&quot;);\n    }\n}\n<code>## 31.0 aopbean.xmlの作成</code>\nBean設定ファイルを用意しましょう。今回は、「aopbean.xml」と\nいうファイルを新たに追加しておくことにします。\n\n「resources」フォルダ内に「aopbean.xml」ファイルを作成し、\n下のリスト欄のように内容を記述して下さい。\n\n今回は、これまで使ってきたbean.xmlに比べて、いろいろと記述が\n増えています。以下に整理しましょう。\n\n●<beans>タグの属性\nまず、<beans>タグの部分を見て下さい。以下の属性が追加されて\nいますね。\nxmlns:aop=&quot;http://www.springframework.org/schema/aop&quot;\n\nそして、このスキーマロケーションを示す値が、\nxsi:schemaLocationの値に追加されています。具体的には以下の\n部分です。\nhttp://www.springframework.org/schema/aop \nhttp://www.springframework.org/schema/aop/spring-aop.xsd\n\nこれらは、リストで使われている&lt;aop:aspectj-autoproxy /&gt;を使\nえるようにするためのものです。多少長くなりますが、必ず追記し\nておいて下さい。\n\n●Beanの登録\n<bean id=\"sampleAspect\" class=\"com.tuyano.libro.aop.SampleAspect\" />\n<bean id=\"sampleAopBean\" class=\"com.tuyano.libro.aop.SampleAopBean\">\n    <property name=\"message\" value=\"this is AOP bean!\" />\n</bean>\nこれは、既に何度もやりましたね。Beanの登録用のタグです。SampleAspectクラスとSampleAopBeanクラスをそれぞれBeanとし\nて登録します。\n\n●AspectJオートプロキシー\n&lt;aop:aspectj-autoproxy /&gt;\nこれは、AspectJのためのタグです。これは、先にSpring AOPのと\nきに利用したProxyFactoryBeanに相当するものを自動生成するた\nめのタグです。これを記述することで、ProxyFactoryBeanで用意\nされた機能が自動的に組み込まれます。\n\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns:aop=\"http://www.springframework.org/schema/aop\"\n    xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n    http://www.springframework.org/schema/beans/spring-beans.xsd \n    http://www.springframework.org/schema/aop \n    http://www.springframework.org/schema/aop/spring-aop.xsd\">\n\n    <bean id=\"sampleAspect\" class=\"com.tuyano.libro.aop.SampleAspect\" />\n    <bean id=\"sampleAopBean\" class=\"com.tuyano.libro.aop.SampleAopBean\">\n        <property name=\"message\" value=\"this is AOP bean!\" />\n    </bean>\n\n    &lt;aop:aspectj-autoproxy /&gt;\n\n</beans>\n<code>## 32.0 プログラムを実行する</code>\npackage com.tuyano.libro.aop;\n\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n\npublic class App {\n\n    public static void main(String[] args) {\n        ApplicationContext app = new ClassPathXmlApplicationContext(&quot;aopbean.xml&quot;);\n\n        SampleAopBean bean = (SampleAopBean) app.getBean(&quot;sampleAopBean&quot;);\n        String msg = bean.getMessage();\n        bean.setMessage(&quot;&lt;&lt;&quot; + msg + &quot;&gt;&gt;&quot;);\n        bean.printMessage();\n    }\n\n}\n<code>## 33.0 Bean設定クラスを利用する</code>\nこれでAspectJの基本的な利用の仕方はわかりました。が、Spring \nFrameworkでは、Beanは設定ファイルでなく、クラスを使って定義\nすることもできましたね。AspectJでも、この「定義クラスを使っ\nた利用」を行ってみましょう。\n\ncom.tuyano.libro.aopパッケージ内に、\n「SampleAspectConfig」というクラスを作成して下さい。そして\n下のリスト欄のようにコードを記述しましょう。これがAspectJの\n設定クラスになります。記述したら、App.javaを開き、以下の一文\nを修正しましょう。\n\n※Appの修正\nApplicationContext app = \n    new ClassPathXmlApplicationContext(&quot;aopbean.xml&quot;);\n    ↓\nApplicationContext app = \n    new AnnotationConfigApplicationContext(SampleAspectConfig.class);\n\nこれで実行すれば、先程と同様にAspectJによるメソッドの挿入が\n行われ、メソッドの呼び出し前後に処理が実行されるようになりま\nす。このクラスでは、設定クラスであることを示す@Configuration\nの他に、\n@EnableAspectJAutoProxy\nこのようなアノテーションがクラスに追加されています。これは、\nBean定義ファイルに用意した&lt;aop:aspectj-autoproxy /&gt;タグに\n相当するものです。これを記述することで、AspectJのオートプロ\nキシー機能がONになり、自動的にアスペクト・クラスのメソッド挿\n入が行われるようになります。\n\nBeanの定義はこれまでと変わりはありません。ただ、\n@EnableAspectJAutoProxyを追加するだけでAspectJの機能がONに\nなるわけですね。設定クラスに変えても、AspectJ利用の簡単さは\n変わらないことがわかるでしょう\npackage com.tuyano.libro.aop;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.EnableAspectJAutoProxy;\n\n@Configuration\n@EnableAspectJAutoProxy\npublic class SampleAspectConfig {\n\n    @Bean\n    SampleAopBean sampleAopBean() {\n        return new SampleAopBean(&quot;this is AspectJ bean.&quot;);\n    }\n\n    @Bean\n    SampleAspect sampleAspect() {\n        return new SampleAspect();\n    }\n\n}\n<code>## 34.0 Spring Data JPAの利用</code>\nデータベース関連は、各種のライブラリやフレームワークがもっと\nも多く用意されている分野でしょう。HibernateなどのORM\n（Object Relational Mapping）は、SQLなどを使うデータベース\nのアクセスと、JavaのObjectiveなコードとの整合性をとるための\n技術として広く使われています。\n\nそうしたORM関連の技術の中でも、Javaの純正技術として浸透して\nいるのが「JPA（Java Persistence API）」でしょう。まぁ、JPA\n自体は、ORMのための技術というより、SQLをJavaなりに使いやすく\nするものという感じですが、データベースとJavaオブジェクトの橋\n渡しをするための基本的な技術として多くのフレームワークでも使\nわれています。\n\nSpring Frameworkでも、JPAを利用してデータベースアクセスを行\nう「Spring Data JPA」というライブラリが用意されています。こ\nれは「Spring Data」と呼ばれるデータベースアクセス関連ライブ\nラリの一つです。この他に、非SQLであるMongoDBを利用する\n「Spring Data MongoDB」や、Hadoop利用のための「Spring \nData Hadoop」などといったものが用意されています。Spring \nData JPAは、一般的なSQLによるリレーショナルデータベース全般\nを利用するためのもので、Spring Dataの基本となるライブラリと\nいっていいでしょう。\n\nでは、このSpring Data JPAを利用してみることにしましょう。ま\nずは、pom.xmlへのライブラリの追加です。下のリスト欄のように\nソースコードを書き換えて下さい。例によって、Spring \nFramework 4.1.7に合わせたバージョン構成になっています。\n\n今回は、計３つの<dependency>タグを新たに追加してあります。そ\nれぞれ簡単に説明しておきましょう。\n\n●H2\nグループIDに「com.h2database」、アーティファクトIDに「h2」\nを指定してあります。H2は、JavaのSQLデータベースエンジンで\nす。直接データベースファイルにアクセスしてデータを保存できま\nす。データベースというとMySQLやPostgreSQLといったものが思い\n浮かぶでしょうが、Javaのライブラリとして実装されているH2のよ\nうなデータベースエンジンは、データベースサーバーのセットアッ\nプなど面倒なことをする必要がなく、気軽に利用できるので、学習\n用としては最適です。そこで今回は、H2をデータベースに利用して\nSpring Data JPAを使うことにします。\n\n●Hibernate EntityManager\nJPAでは、「エンティティ」と呼ばれる形でデータベースのデータを\nオブジェクト化します。このエンティティの管理を行うのが、エン\nティティマネージャです。これはさまざまなものが出回っていて、\n自分で使いやすいものを選んで組み込み利用できるようになってい\nます。今回は、Hibernateが作成しているエンティティマネージャ\nを使っています。グループID「org.hibernate」、アーティファク\nトID「hibernate-entitymanager」で指定します。\n\n●Spring Data JPA\nこれが、Spring Data JPAの本体ライブラリです。グループIDに\n「org.springframework.data」、アーティファクトIDに\n「spring-data-jpa」をそれぞれ指定します。\n\n\n――以上の３つのライブラリをpom.xmlに追記することで、Spring \nData JPAが使えるようになります。最初のH2は、他のデータベース\nサーバーを利用する場合はもちろん不要です。\n<project\n    xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 \n    http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>org.springframework.samples</groupId>\n    <artifactId>MySpringApp</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n\n<pre><code>&lt;properties&gt;\n    &lt;java.version&gt;1.6&lt;/java.version&gt;\n    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;\n&lt;/properties&gt;\n\n&lt;dependencies&gt;\n\n    &lt;!-- Spring --&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-context&lt;/artifactId&gt;\n        &lt;version&gt;4.1.7.RELEASE&lt;/version&gt;\n    &lt;/dependency&gt;\n\n    &lt;!-- Database (H2) --&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;com.h2database&lt;/groupId&gt;\n        &lt;artifactId&gt;h2&lt;/artifactId&gt;\n        &lt;version&gt;1.4.187&lt;/version&gt;\n    &lt;/dependency&gt;\n\n    &lt;!-- JPA Provider (Hibernate) --&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.hibernate&lt;/groupId&gt;\n        &lt;artifactId&gt;hibernate-entitymanager&lt;/artifactId&gt;\n        &lt;version&gt;4.3.10.Final&lt;/version&gt;\n    &lt;/dependency&gt;\n\n    &lt;!-- Spring Data JPA --&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.springframework.data&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-data-jpa&lt;/artifactId&gt;\n        &lt;version&gt;1.8.1.RELEASE&lt;/version&gt;\n    &lt;/dependency&gt;\n\n&lt;/dependencies&gt;\n</code></pre><p></project>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x03",
            "knowledgeid" : "-LdLv2K4G35jI5thkNgR",
            "name" : "tei952",
            "ord" : "03",
            "time" : 1555228371611,
            "title" : "3.0 プロジェクトとpom.xmlについて",
            "update_at" : 1556488166377
          },
          "x04" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</p>\n<persistence\n    xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence.xsd\">\n\n<pre><code>&lt;persistence-unit name=&quot;persistence-unit&quot;\n    transaction-type=&quot;RESOURCE_LOCAL&quot;&gt;\n    &lt;provider&gt;org.hibernate.ejb.HibernatePersistence&lt;/provider&gt;\n    &lt;properties&gt;\n        &lt;property name=&quot;hibernate.diarect&quot; value=&quot;${hibernate.dialect}&quot; /&gt;\n        &lt;property name=&quot;hibernate.hbm2ddl.auto&quot; value=&quot;${hibernate.hbm2ddl.auto}&quot; /&gt;\n        &lt;property name=&quot;javax.persistence.jdbc.driver&quot; value=&quot;${db.driver}&quot; /&gt;\n        &lt;property name=&quot;javax.persistence.jdbc.url&quot; value=&quot;${db.url}&quot; /&gt;\n        &lt;property name=&quot;javax.persistence.jdbc.user&quot; value=&quot;${db.user}&quot; /&gt;\n        &lt;property name=&quot;javax.persistence.jdbc.password&quot; value=&quot;${db.password}&quot; /&gt;\n    &lt;/properties&gt;\n&lt;/persistence-unit&gt;\n</code></pre><p></persistence>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x04",
            "knowledgeid" : "-LdLv2K4G35jI5thkNgR",
            "name" : "tei952",
            "ord" : "04",
            "time" : 1555228371611,
            "title" : "35.0 persistence.xmlを作成する",
            "update_at" : 1556488166377
          },
          "x05" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x05",
            "knowledgeid" : "-LdLv2K4G35jI5thkNgR",
            "name" : "tei952",
            "ord" : "05",
            "time" : 1555228371611,
            "title" : "36.0 application.propertiesに追記する",
            "update_at" : 1556488166377
          },
          "x06" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</p>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns:jpa=\"http://www.springframework.org/schema/data/jpa\"\n    xmlns:jdbc=\"http://www.springframework.org/schema/jdbc\"\n    xsi:schemaLocation=\"http://www.springframework.org/schema/beans \n        http://www.springframework.org/schema/beans/spring-beans.xsd \n        http://www.springframework.org/schema/jdbc \n        http://www.springframework.org/schema/jdbc/spring-jdbc.xsd  \n        http://www.springframework.org/schema/data/jpa \n        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd\">\n\n<pre><code>&lt;jdbc:embedded-database id=&quot;dataSource&quot; type=&quot;H2&quot; /&gt;\n\n&lt;bean id=&quot;entityManagerFactory&quot; class=&quot;org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean&quot;&gt;\n    &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;/&gt;\n    &lt;property name=&quot;jpaVendorAdapter&quot;&gt;\n        &lt;bean class=&quot;org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter&quot;&gt;\n            &lt;property name=&quot;generateDdl&quot; value=&quot;true&quot; /&gt;\n        &lt;/bean&gt;\n    &lt;/property&gt;\n&lt;/bean&gt;\n</code></pre><p></beans>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x06",
            "knowledgeid" : "-LdLv2K4G35jI5thkNgR",
            "name" : "tei952",
            "ord" : "06",
            "time" : 1555228371611,
            "title" : "37.0 Bean設定ファイルを用意する",
            "update_at" : 1556488166377
          },
          "x07" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\npackage com.tuyano.libro.db;</p>\n<p>import javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;\nimport javax.persistence.Id;</p>\n<p>@Entity\npublic class SampleEntity {</p>\n<pre><code>@Id\n@Column\n@GeneratedValue(strategy=GenerationType.AUTO)\nprivate long id;\n\n@Column(length=50, nullable=false)\nprivate String name;\n\n@Column(length=100, nullable=true)\nprivate String mail;\n\npublic String getName() {\n    return name;\n}\n\npublic void setName(String name) {\n    this.name = name;\n}\n\npublic String getMail() {\n    return mail;\n}\n\npublic void setMail(String mail) {\n    this.mail = mail;\n}\n\npublic long getId() {\n    return id;\n}\n\npublic SampleEntity() {\n    super();\n}\n\npublic SampleEntity(String name, String mail) {\n    this();\n    this.name = name;\n    this.mail = mail;\n}\n\npublic String toString() {\n    return &quot;SampleEntity [id=&quot; + id + &quot;, name=&quot; + name + &quot;, mail=&quot; + mail + &quot;]&quot;;\n}\n</code></pre><p>}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x07",
            "knowledgeid" : "-LdLv2K4G35jI5thkNgR",
            "name" : "tei952",
            "ord" : "07",
            "time" : 1555228371611,
            "title" : "38.0 エンティティクラスを作成する",
            "update_at" : 1556488166377
          },
          "x08" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n実際にデータベースを利用してみることにしましょう。\ncom.tuyano.libro.dbパッケージに「App」クラスを作成し、下の\nリスト欄のようにソースコードを記述して下さい。</p>\n<p>完成したら、実際にAppクラスを実行してみましょう。すると、以下\nのようにテキストが出力されることがわかるでしょう。</p>\n<p>SampleEntity [id=1, name=tuyano, mail=syoda@tuyano.com]\nSampleEntity [id=2, name=hanako, mail=hanako@flower]\nSampleEntity [id=3, name=taro, mail=taro@yamada]\nSampleEntity [id=4, name=sachiko, mail=sachico@happy]\n...ok.</p>\n<p>これは、ダミーとして用意したエンティティをデータベースから取\n得し表示しているのです。ここでは、ダミーデータを作成するため\nのmakeDummyDataメソッドと、取得したリストの内容を出力する\nprintListメソッドを用意しておきました。では、簡単に整理しま\nしょう。</p>\n<ol>\n<li>ApplicationContextの作成\nApplicationContext app = \n new ClassPathXmlApplicationContext(&quot;dbbean.xml&quot;);\nまずは、いつものようにApplicationContextインスタンスを用意\nします。ここでは、dbbean.xmlをファイル指定しておきます。</li>\n</ol>\n<ol start=\"2\">\n<li>EntityManagerFactoryインスタンスの取得\nEntityManagerFactory factory = app.getBean(EntityManagerFactory.class);\nBean設定ファイルに用意しておいた、エンティティマネージャファ\nクトリーのBeanを取得します。これは、EntityManagerFactoryク\nラスのclass値として引数を指定しおきます。</li>\n</ol>\n<ol start=\"3\">\n<li>EntityManagerの作成\nEntityManager manager = factory.createEntityManager();\n用意したEntityManagerFactoryから、EntityManagerを取得しま\nす。これはcreateEntityManagerというメソッドを呼び出すだけで\nす。</li>\n</ol>\n<p>――これで、EntityManagerが用意できました。後は、これを使っ\nて、ダミーデータを保存したり、あるいは全エンティティをリスト\nとして取り出したりしています。</p>\n<p>とりあえず、今回は「データベース利用の基本」ということで、肝\n心のEntityManagerを取り出すところまでわかればOK、としましょ\nう。具体的なデータベースアクセスは次回に説明する予定です\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x08",
            "knowledgeid" : "-LdLv2K4G35jI5thkNgR",
            "name" : "tei952",
            "ord" : "08",
            "time" : 1555228371611,
            "title" : "39.0 データベースを利用してみる",
            "update_at" : 1556488166377
          },
          "x09" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\npackage com.tuyano.libro.db;</p>\n<p>import java.util.List;</p>\n<p>import javax.persistence.EntityManager;\nimport javax.persistence.EntityManagerFactory;\nimport javax.persistence.EntityTransaction;\nimport javax.persistence.Query;</p>\n<p>import org.springframework.context.ApplicationContext;\nimport org.springframework.context.support.ClassPathXmlApplicationContext;</p>\n<p>public class App {</p>\n<pre><code>public static void main(String[] args) {\n    ApplicationContext app = new ClassPathXmlApplicationContext(&quot;dbbean.xml&quot;);\n\n    EntityManagerFactory factory = app.getBean(EntityManagerFactory.class);\n    EntityManager manager = factory.createEntityManager();\n\n    makeDummyData(manager);\n\n    // get list\n    Query query = manager.createQuery(&quot;from SampleEntity&quot;);\n    List list = query.getResultList();\n    printList(list);\n\n    System.out.println(&quot;...ok.&quot;);\n}\n\n// create dummy entity data.\npublic static void makeDummyData(EntityManager manager) {\n    EntityTransaction transaction = manager.getTransaction();\n    transaction.begin();\n    manager.persist(new SampleEntity(&quot;tuyano&quot;, &quot;syoda@tuyano.com&quot;));\n    manager.persist(new SampleEntity(&quot;hanako&quot;, &quot;hanako@flower&quot;));\n    manager.persist(new SampleEntity(&quot;taro&quot;, &quot;taro@yamada&quot;));\n    manager.persist(new SampleEntity(&quot;sachiko&quot;, &quot;sachico@happy&quot;));\n    manager.flush();\n    transaction.commit();\n}\n\n// print all entity.\npublic static void printList(List list) {\n    for (Object item : list) {\n        System.out.println(item);\n    }\n}\n</code></pre><p>}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x09",
            "knowledgeid" : "-LdLv2K4G35jI5thkNgR",
            "name" : "tei952",
            "ord" : "09",
            "time" : 1555228371611,
            "title" : "40.0 App修正",
            "update_at" : 1556488166377
          },
          "x10" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\npackage com.tuyano.libro.db;</p>\n<p>import javax.persistence.EntityManagerFactory;\nimport javax.sql.DataSource;</p>\n<p>import org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder;\nimport org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType;\nimport org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;\nimport org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter;</p>\n<p>@Configuration\nclass SampleEntityConfig {</p>\n<pre><code>@Bean\npublic DataSource dataSource() {\n    EmbeddedDatabaseBuilder builder = \n        new EmbeddedDatabaseBuilder();\n    return builder.setType(EmbeddedDatabaseType.H2).build();\n}\n\n@Bean\npublic EntityManagerFactory entityManagerFactory() {\n    HibernateJpaVendorAdapter vendorAdapter = \n        new HibernateJpaVendorAdapter();\n    vendorAdapter.setGenerateDdl(true);\n\n    LocalContainerEntityManagerFactoryBean factory = \n        new LocalContainerEntityManagerFactoryBean();\n    factory.setJpaVendorAdapter(vendorAdapter);\n    factory.setPackagesToScan(&quot;com.tuyano.libro.db&quot;);\n    factory.setDataSource(dataSource());\n    factory.afterPropertiesSet();\n    return factory.getObject();\n}\n</code></pre><p>}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x10",
            "knowledgeid" : "-LdLv2K4G35jI5thkNgR",
            "name" : "tei952",
            "ord" : "10",
            "time" : 1555228371611,
            "title" : "41.0 Bean設定クラスを利用する",
            "update_at" : 1556488166377
          },
          "x11" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\npackage com.tuyano.libro.db;</p>\n<p>import java.util.List;</p>\n<p>import javax.persistence.EntityManager;\nimport javax.persistence.EntityManagerFactory;\nimport javax.persistence.EntityTransaction;\nimport javax.persistence.Query;</p>\n<p>import org.springframework.context.ApplicationContext;\nimport org.springframework.context.annotation.AnnotationConfigApplicationContext;</p>\n<p>public class App {</p>\n<pre><code>public static void main(String[] args) {\n    ApplicationContext app = new\n        AnnotationConfigApplicationContext(SampleEntityConfig.class);\n\n    EntityManagerFactory factory = app.getBean(EntityManagerFactory.class);\n    EntityManager manager = factory.createEntityManager();\n\n    makeDummyData(manager);\n\n    // get list\n    Query query = manager.createQuery(&quot;from SampleEntity&quot;);\n    List list = query.getResultList();\n    printList(list);\n\n    System.out.println(&quot;...ok.&quot;);\n}\n\npublic static void makeDummyData(EntityManager manager) { 略 }\n\npublic static void printList(List list) { 略 }\n</code></pre><p>}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x11",
            "knowledgeid" : "-LdLv2K4G35jI5thkNgR",
            "name" : "tei952",
            "ord" : "11",
            "time" : 1555228371611,
            "title" : "42.0 Queryによるデータの一覧取得",
            "update_at" : 1556488166377
          },
          "x12" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\npackage com.tuyano.libro.db;</p>\n<p>import java.util.List;</p>\n<p>import javax.persistence.EntityManager;\nimport javax.persistence.EntityManagerFactory;\nimport javax.persistence.EntityTransaction;\nimport javax.persistence.Query;</p>\n<p>import org.springframework.context.ApplicationContext;\nimport org.springframework.context.annotation.AnnotationConfigApplicationContext;</p>\n<p>public class App {</p>\n<pre><code>public static void main(String[] args) {\n    ApplicationContext app = new\n        AnnotationConfigApplicationContext(SampleEntityConfig.class);\n\n    EntityManagerFactory factory = app.getBean(EntityManagerFactory.class);\n    EntityManager manager = factory.createEntityManager();\n\n    makeDummyData(manager);\n\n    // get list\n    Query query = manager.createQuery(&quot;from SampleEntity&quot;);\n    List list = query.getResultList();\n    printList(list);\n\n    System.out.println(&quot;...ok.&quot;);\n}\n\n// create dummy entity data.\npublic static void makeDummyData(EntityManager manager) {\n    EntityTransaction transaction = manager.getTransaction();\n    transaction.begin();\n    manager.persist(new SampleEntity(&quot;tuyano&quot;, &quot;syoda@tuyano.com&quot;));\n    manager.persist(new SampleEntity(&quot;hanako&quot;, &quot;hanako@flower&quot;));\n    manager.persist(new SampleEntity(&quot;taro&quot;, &quot;taro@yamada&quot;));\n    manager.persist(new SampleEntity(&quot;sachiko&quot;, &quot;sachico@happy&quot;));\n    manager.flush();\n    transaction.commit();\n}\n\npublic static void printList(List list) { 略 }\n</code></pre><p>}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x12",
            "knowledgeid" : "-LdLv2K4G35jI5thkNgR",
            "name" : "tei952",
            "ord" : "12",
            "time" : 1555228371611,
            "title" : "43.0 新しいエンティティの保存",
            "update_at" : 1556488166377
          },
          "x13" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\npackage com.tuyano.libro.db;</p>\n<p>import java.util.List;</p>\n<p>import javax.persistence.EntityManager;\nimport javax.persistence.EntityManagerFactory;\nimport javax.persistence.EntityTransaction;\nimport javax.persistence.Query;</p>\n<p>import org.springframework.context.ApplicationContext;\nimport org.springframework.context.annotation.AnnotationConfigApplicationContext;</p>\n<p>public class App {\n    private static EntityManager manager;</p>\n<pre><code>public static void main(String[] args) {\n    ApplicationContext app = new\n        AnnotationConfigApplicationContext(SampleEntityConfig.class);\n\n    EntityManagerFactory factory = app.getBean(EntityManagerFactory.class);\n    manager = factory.createEntityManager();\n\n    // make dummy\n    makeDummyData();\n\n    // update entity\n    updateEntity(1L);\n    updateEntity(3L);\n\n    // get list\n    Query query = manager.createQuery(&quot;from SampleEntity&quot;);\n    List list = query.getResultList();\n    printList(list);\n\n    System.out.println(&quot;...ok.&quot;);\n}\n\npublic static void makeDummyData() { 略 }\npublic static void printList(List list) { 略 }\n\n// update entity\npublic static void updateEntity(long id) {\n    SampleEntity entity = manager.find(SampleEntity.class, id);\n    entity.setName(&quot;**update name**&quot;);\n    entity.setMail(&quot;**update@mail**&quot;);\n    EntityTransaction transaction = manager.getTransaction();\n    transaction.begin();\n    manager.merge(entity);\n    manager.flush();\n    transaction.commit();\n}\n</code></pre><p>}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x13",
            "knowledgeid" : "-LdLv2K4G35jI5thkNgR",
            "name" : "tei952",
            "ord" : "13",
            "time" : 1555228371611,
            "title" : "44.0 エンティティの更新",
            "update_at" : 1556488166377
          },
          "x14" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\npackage com.tuyano.libro.db;</p>\n<p>import java.util.List;</p>\n<p>import javax.persistence.EntityManager;\nimport javax.persistence.EntityManagerFactory;\nimport javax.persistence.EntityTransaction;\nimport javax.persistence.Query;</p>\n<p>import org.springframework.context.ApplicationContext;\nimport org.springframework.context.annotation.AnnotationConfigApplicationContext;</p>\n<p>public class App {\n    private static EntityManager manager;</p>\n<pre><code>public static void main(String[] args) {\n    ApplicationContext app = new\n        AnnotationConfigApplicationContext(SampleEntityConfig.class);\n\n    EntityManagerFactory factory = app.getBean(EntityManagerFactory.class);\n    manager = factory.createEntityManager();\n\n    // make dummy\n    makeDummyData();\n\n    // delete entity\n    deleteEntity(1L);\n    deleteEntity(3L);\n\n    // get list\n    Query query = manager.createQuery(&quot;from SampleEntity&quot;);\n    List list = query.getResultList();\n    printList(list);\n\n    System.out.println(&quot;...ok.&quot;);\n}\n\npublic static void makeDummyData() { 略 }\npublic static void printList(List list) { 略 }\n\n// delete entity\npublic static void deleteEntity(long id) {\n    SampleEntity entity = manager.find(SampleEntity.class, id);\n    EntityTransaction transaction = manager.getTransaction();\n    transaction.begin();\n    manager.remove(entity);\n    manager.flush();\n    transaction.commit();\n}\n</code></pre><p>}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x14",
            "knowledgeid" : "-LdLv2K4G35jI5thkNgR",
            "name" : "tei952",
            "ord" : "14",
            "time" : 1555228371611,
            "title" : "45.0 エンティティの削除",
            "update_at" : 1556488166377
          },
          "x15" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nこれでCRUDの基本操作は行えるようになりました。が、ちょっと追\n記して置かなければいけないのは、基本中の基本である「Read」の\n部分でしょう。</p>\n<p>先ほどのサンプルでは、すべてのエンティティを取り出すサンプル\nを挙げておきました。が、実際の処理では、もっと条件を細かく指\n定してエンティティを検索する必要があるでしょう。</p>\n<p>エンティティの取得は、Queryというクラスを作成しました。これ\nは、インスタンスを作成する際に「from SampleEntity」といった\n文を引数に用意していました。この文は、SQLのクエリー文と同じ働\nきをするもので、「JPQL」と呼ばれます。ただしSQLとは若干書き\n方が違います。とりあえず、エンティティの検索の基本的な書き方\nだけでもここで説明しておきましょう。</p>\n<p>●JPQLの検索の基本\nfrom エンティティ where 条件式\nSQLでもおなじみのwhere節を使えば、基本的な検索はほぼ行うこと\nができます。条件となる式は、等号などの比較演算子（=&lt;&gt;）を使っ\nて記述します。</p>\n<p>・IDが１のエンティティを取得\nfrom SampleEntity where id = 1</p>\n<p>・IDが2より大きいエンティティを取得\nfrom SampleEntity where id &gt; 2</p>\n<p>また、テキストを検索する場合は、あいまい検索の「like」が使え\nます。%記号を使い、ワイルドカードの指定も行えます。</p>\n<p>・nameが「K」ではじまるエンティティを取得\nfrom SampleEntity where name like &#39;K%&#39;</p>\n<p>複数の条件式を設定したい場合は、「and」「or」が使えます。whereの後に、「式 and 式」といった具合に複数の式をand/orで\nつなげていきます。</p>\n<p>・idが10以上20以下のエンティティを取得\nfrom SampleEntity where id &gt;= 10 and id &lt;= 20</p>\n<p>――とりあえず、こうした基本的な検索の仕方がわかれば、初歩的な\nデータ検索の処理はだいたいできるようになるでしょう。実際に\nJPQLのクエリー文を書いて動かしてみると面白いですよ\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x15",
            "knowledgeid" : "-LdLv2K4G35jI5thkNgR",
            "name" : "tei952",
            "ord" : "15",
            "time" : 1555228371611,
            "title" : "46.0 JPQLによるクエリー文の基本",
            "update_at" : 1556488166377
          },
          "x16" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n前回、データベースアクセスの基本についてざっと説明をしまし\nた。このとき、データの検索については「JPQL」と呼ばれるクエリ\nー文を使って行う、ということを説明たのを覚えているでしょうか。</p>\n<p>この説明を読んで、「え゛～～～」と思わず唸った人もきっと大勢\nいたことでしょう。SQLなんてものを見たくないがためにフレームワ\nークを使おうと思ったのに、まさかのSQLモドキが待ち構えていたと\nは……。</p>\n<p>が、しかし安心して下さい。Spring Frameworkには、もっとスマ\nートにデータ検索を行うための仕組みがちゃんと用意されていま\nす。それは「JpaRepository」と呼ばれるものです。</p>\n<p>JpaRepositoryは、インターフェイスです。インターフェイスに、\nあらかじめ検索メソッドを定義しておくことで、メソッドを呼び出\nすだけでスマートにデータ検索が行えるようになるのです。「で\nも、そのメソッドの中では、JPQLを使って検索処理を書くんでしょ\n……」と思った人、まぁちょっとだけ我慢して下さい。決して損には\nなりませんから。</p>\n<p>まずは、JpsRepositoryのインターフェイスを作ってしまいましょ\nう。com.tuyano.libro.dbパッケージ内に、\n「SampleEntityRepository.java」というファイル名でソースコ\nードファイルを作成して下さい。そして、下のリスト欄のようにイ\nンターフェイスを記述しましょう。</p>\n<p>JpaRepositoryインターフェイスは、org.springframework.data.jpa.repositoryパッケージの\n「JpaRepository」というインターフェイスを継承して作成しま\nす。このインターフェイスは、総称型に対応しています。コードを\n見ると、こんな形で書かれていることがわかるでしょう。\npublic interface 名前 extends JpaRepository &lt;エンティテ\nィ , IDタイプ&gt;\n&lt;&gt;内には、エンティティのクラス名と、IDフィールドのタイプが指\n定されます。注意したいのは、「基本型の場合は、ラッパークラス\nを指定する」という点です。サンプルのSampleEntityクラスでは\nlong型をIDに指定していますので、ここでは&lt;SampleEntity, \nLong&gt;としてあるわけですね。</p>\n<p>もう１つ、注意しておきたいのは、アノテーションです。クラスの\n宣言前に、「@Repository」というアノテーションがつけられてい\nますね。これにより、このインターフェイスがJpaRepositoryであ\nることを示します。これは必ず付けておくようにしましょう。\npackage com.tuyano.libro.db;</p>\n<p>import org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.stereotype.Repository;</p>\n<p>@Repository\npublic interface SampleEntityRepository\n    extends JpaRepository &lt;SampleEntity, Long&gt; {\n}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x16",
            "knowledgeid" : "-LdLv2K4G35jI5thkNgR",
            "name" : "tei952",
            "ord" : "16",
            "time" : 1555228371611,
            "title" : "47.0 JpaRepositoryを利用する",
            "update_at" : 1556488166377
          },
          "x17" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</p>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns:jpa=\"http://www.springframework.org/schema/data/jpa\"\n    xmlns:jdbc=\"http://www.springframework.org/schema/jdbc\"\n    xsi:schemaLocation=\"http://www.springframework.org/schema/beans \n        http://www.springframework.org/schema/beans/spring-beans.xsd \n        http://www.springframework.org/schema/jdbc \n        http://www.springframework.org/schema/jdbc/spring-jdbc.xsd  \n        http://www.springframework.org/schema/data/jpa \n        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd\">\n\n<pre><code>&lt;jdbc:embedded-database id=&quot;dataSource&quot; type=&quot;H2&quot; /&gt;\n\n&lt;bean id=&quot;entityManagerFactory&quot;\n    class=&quot;org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean&quot;&gt;\n    &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;/&gt;\n    &lt;property name=&quot;jpaVendorAdapter&quot;&gt;\n        &lt;bean class=&quot;org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter&quot;&gt;\n            &lt;property name=&quot;generateDdl&quot; value=&quot;true&quot; /&gt;\n        &lt;/bean&gt;\n    &lt;/property&gt;\n&lt;/bean&gt;\n\n&lt;jpa:repositories base-package=&quot;com.tuyano.libro.db&quot; /&gt;\n\n&lt;bean id=&quot;transactionManager&quot;\n    class=&quot;org.springframework.orm.jpa.JpaTransactionManager&quot;&gt;\n    &lt;property name=&quot;entityManagerFactory&quot; ref=&quot;entityManagerFactory&quot; /&gt;\n&lt;/bean&gt;\n</code></pre><p></beans>\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x17",
            "knowledgeid" : "-LdLv2K4G35jI5thkNgR",
            "name" : "tei952",
            "ord" : "17",
            "time" : 1555228371611,
            "title" : "48.0 Bean設定ファイルを用意する",
            "update_at" : 1556488166377
          },
          "x18" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\npackage com.tuyano.libro.db;</p>\n<p>import java.util.List;</p>\n<p>import javax.persistence.EntityManager;\nimport javax.persistence.EntityManagerFactory;\nimport javax.persistence.EntityTransaction;</p>\n<p>import org.springframework.context.ApplicationContext;\nimport org.springframework.context.support.ClassPathXmlApplicationContext;</p>\n<p>public class App {\n    private static EntityManager manager;</p>\n<pre><code>public static void main(String[] args) {\n    ApplicationContext app = new ClassPathXmlApplicationContext(&quot;dbbean.xml&quot;);\n\n    EntityManagerFactory factory = app.getBean(EntityManagerFactory.class);\n    manager = factory.createEntityManager();\n\n    SampleEntityRepository repository = app.getBean(SampleEntityRepository.class);\n\n    // make dummy\n    makeDummyData();\n\n    // get list\n    List list = repository.findAll();\n    printList(list);\n\n    System.out.println(&quot;...ok.&quot;);\n}\n\n// create dummy entity data.\npublic static void makeDummyData() {\n    EntityTransaction transaction = manager.getTransaction();\n    transaction.begin();\n    manager.persist(new SampleEntity(&quot;tuyano&quot;, &quot;syoda@tuyano.com&quot;));\n    manager.persist(new SampleEntity(&quot;hanako&quot;, &quot;hanako@flower&quot;));\n    manager.persist(new SampleEntity(&quot;taro&quot;, &quot;taro@yamada&quot;));\n    manager.persist(new SampleEntity(&quot;sachiko&quot;, &quot;sachico@happy&quot;));\n    manager.flush();\n    transaction.commit();\n}\n\n// print all entity.\npublic static void printList(List list) {\n    for (Object item : list) {\n        System.out.println(item);\n    }\n}\n</code></pre><p>}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x18",
            "knowledgeid" : "-LdLv2K4G35jI5thkNgR",
            "name" : "tei952",
            "ord" : "18",
            "time" : 1555228371611,
            "title" : "49.0 アプリケーションでJpaReposioryを利用する",
            "update_at" : 1556488166377
          },
          "x19" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\npackage com.tuyano.libro.db;</p>\n<p>import javax.persistence.EntityManagerFactory;\nimport javax.sql.DataSource;\nimport javax.transaction.TransactionManager;</p>\n<p>import org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.data.jpa.repository.config.EnableJpaRepositories;\nimport org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder;\nimport org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType;\nimport org.springframework.orm.jpa.JpaTransactionManager;\nimport org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;\nimport org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter;</p>\n<p>@Configuration\n@EnableJpaRepositories(&quot;com.tuyano.libro.db&quot;)\n@EnableTransactionManagement\nclass SampleEntityConfig {</p>\n<pre><code>@Bean\npublic DataSource dataSource() {\n    EmbeddedDatabaseBuilder builder = new EmbeddedDatabaseBuilder();\n    return builder.setType(EmbeddedDatabaseType.H2).build();\n}\n\n@Bean\npublic EntityManagerFactory entityManagerFactory() {\n    HibernateJpaVendorAdapter vendorAdapter = new HibernateJpaVendorAdapter();\n    vendorAdapter.setGenerateDdl(true);\n\n    LocalContainerEntityManagerFactoryBean factory = new\n        LocalContainerEntityManagerFactoryBean();\n    factory.setJpaVendorAdapter(vendorAdapter);\n    factory.setPackagesToScan(&quot;com.tuyano.libro.db&quot;);\n    factory.setDataSource(dataSource());\n    factory.afterPropertiesSet();\n\n    return factory.getObject();\n}\n\n@Bean\nprotected JpaTransactionManager transactionManager\n        (EntityManagerFactory entityManagerFactory) {\n    return new JpaTransactionManager(entityManagerFactory);\n}\n</code></pre><p>}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x19",
            "knowledgeid" : "-LdLv2K4G35jI5thkNgR",
            "name" : "tei952",
            "ord" : "19",
            "time" : 1555228371611,
            "title" : "50.0 Bean設定クラスを利用する",
            "update_at" : 1556488166377
          },
          "x20" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nここではSampleEntityRepositoryインターフェイスを用意しまし\nたが、これの中身は空っぽのままでした。それでも、findAllとい\nうメソッドを呼び出して、全エンティティを取り出すことができま\nした。</p>\n<p>継承元であるJpaRepositoryには、標準でいくつものメソッドが定\n義されています。とりあえず、それらを使うことで、データベース\nの基本的な操作が行えます。ここで、主なメソッドについて簡単に\nまとめておきましょう。\nfindAll()\n既に登場しました。全エンティティをまとめたListを返します。\ngetOne(《ID》)\nIDを指定してエンティティを１つだけ取り出します。引数には、そ\nのエンティティのIDに指定された型の値が入ります。\nsaveAndFlush( エンティティ )\n引数に指定したエンティティをデータベースに保存します。\ndelete(《ID》)\n引数に指定したIDのエンティティをデータベースから削除します。\ncount()\nエンティティの数をint値で返します。</p>\n<p>――検索についてはfindAllだけですが、エンティティの保存や削除\nなどのメソッドも揃っています。これらは、いちち「トランザクシ\nョン処理を開始して……」なんて面倒なことをする必要もありませ\nん。ただメソッドを呼び出すだけで簡単に保存や削除が行えます。</p>\n<pcode>`</code></pre>",
              "type" : "Html"
            },
            "id" : "x20",
            "knowledgeid" : "-LdLv2K4G35jI5thkNgR",
            "name" : "tei952",
            "ord" : "20",
            "time" : 1555228371611,
            "title" : "51.0 JpaRepositoryの標準メソッドについて",
            "update_at" : 1556488166377
          },
          "x21" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n// <strong><strong><strong><strong><em>**</em></strong></strong></strong></strong>\n// ※SampleEntityRepository.java\n// <strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></p>\n<p>package com.tuyano.libro.db;</p>\n<p>import java.util.List;</p>\n<p>import org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.stereotype.Repository;</p>\n<p>@Repository\npublic interface SampleEntityRepository\n        extends JpaRepository &lt;SampleEntity, Long&gt; {</p>\n<pre><code>public List&lt;SampleEntity&gt; findByNameLike(String name);\npublic List&lt;SampleEntity&gt; findByMailEndingWith(String mail);\n</code></pre><p>}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x21",
            "knowledgeid" : "-LdLv2K4G35jI5thkNgR",
            "name" : "tei952",
            "ord" : "21",
            "time" : 1555228371611,
            "title" : "52.0 リポジトリにメソッドを追加する",
            "update_at" : 1556488166377
          },
          "x22" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\n// <strong><strong><strong><strong><em>**</em></strong></strong></strong></strong>\n// ※App.java\n// <strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></p>\n<p>package com.tuyano.libro.db;</p>\n<p>import java.util.List;</p>\n<p>import javax.persistence.EntityManager;\nimport javax.persistence.EntityManagerFactory;\nimport javax.persistence.EntityTransaction;</p>\n<p>import org.springframework.context.ApplicationContext;\nimport org.springframework.context.annotation.AnnotationConfigApplicationContext;\nimport org.springframework.context.support.ClassPathXmlApplicationContext;</p>\n<p>public class App {\n    private static EntityManager manager;</p>\n<pre><code>public static void main(String[] args) {\n    //ApplicationContext app = new \n        AnnotationConfigApplicationContext(SampleEntityConfig.class);\n    ApplicationContext app = new ClassPathXmlApplicationContext(&quot;dbbean.xml&quot;);\n\n    EntityManagerFactory factory = app.getBean(EntityManagerFactory.class);\n    manager = factory.createEntityManager();\n    makeDummyData();\n\n    // get repository\n    SampleEntityRepository repository = app.getBean(SampleEntityRepository.class);\n\n    // get list\n    List list1 = repository.findByNameLike(&quot;%ko&quot;);\n    System.out.println(&quot;*Find By Name*&quot;);\n    printList(list1);\n    List list2 = repository.findByMailEndingWith(&quot;.com&quot;);\n    System.out.println(&quot;*Find By Mail*&quot;);\n    printList(list2);\n\n    System.out.println(&quot;...ok.&quot;);\n}\n\n// create dummy entity data.\npublic static void makeDummyData() {\n    EntityTransaction transaction = manager.getTransaction();\n    transaction.begin();\n    manager.persist(new SampleEntity(&quot;tuyano&quot;, &quot;syoda@tuyano.com&quot;));\n    manager.persist(new SampleEntity(&quot;hanako&quot;, &quot;hanako@flower.uk&quot;));\n    manager.persist(new SampleEntity(&quot;taro&quot;, &quot;taro@yamada.jp&quot;));\n    manager.persist(new SampleEntity(&quot;sachiko&quot;, &quot;sachico@happy.com&quot;));\n    manager.flush();\n    transaction.commit();\n}\n\n// print all entity.\npublic static void printList(List list) { 略 }\n</code></pre><p>}\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x22",
            "knowledgeid" : "-LdLv2K4G35jI5thkNgR",
            "name" : "tei952",
            "ord" : "22",
            "time" : 1555228371611,
            "title" : "53.0 リポジトリのメソッドを利用する",
            "update_at" : 1556488166377
          },
          "x23" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nJpaRepositoryでは、メソッド名の名づけ方さえわかれば、必要な\nメソッドをささっと書いて追加できてしまいます。処理は一切必要\nなし。ただメソッドの宣言文を書くだけです。ただし、「あらかじ\nめ決められたルールに従ってきちんとメソッド名をつけてあれば」\nです。適当に名づけただけでは、メソッドは自動生成されないので\nす。</p>\n<p>では、どのような形でメソッド名をつければいいのでしょうか。こ\nこでその命名規則について簡単に整理しておきましょう。</p>\n<p>●findBy○○\n基本は、これです。「findBy」の後にエンティティのプロパティ名\nを続けて記します。このプロパティ名は、最初の１文字目は大文字\nにします。例えば、nameから検索するなら「findByName」ですし、\nmailから探すなら「findByMail」となるわけです。</p>\n<p>これ以降は、この基本形である「findBy○○」の後に続けて書くもの\nになります。</p>\n<p>●Like/NotLike\n「あいまい検索」に関するものです。Likeをつければ、引数に指定\nしたテキストを含むものを検索します。またNotLikeをつけると、\n引数のテキストを含まないものを検索します。「findByNameLike」\nなら、nameから引数のテキストをあいまい検索する、というわけで\nす。</p>\n<p>●StartingWith/EndingWith\nテキストの値で、引数に指定したテキストで始まるもの、あるいは\n終わるものを検索するためのものです。「findByNameStartingWith(&quot;A&quot;)」\nなら、nameの値が&quot;A&quot;で始まる\nものを検索します。</p>\n<p>●IsNull/IsNotNull\n値がnullのもの、あるいはnullでないものを検索します。引数は不\n要です。「findByNameIsNull()」なら、nameの値がnullのものだ\nけを検索します。</p>\n<p>●True/False\n真偽値の値で、trueのもの、あるいはfalseのものを検索します。\n引数は不要。「findByCheckTrue()」なら、checkという項目が\ntrueのものだけを検索します。</p>\n<p>●Before/After\n日時の値で使うものです。引数に指定した値より前のもの、あるい\nは後のものを検索します。「findByCreateBefore(new Date())」\nとすれば、createという項目の値が現在より前のものだけを検索し\nます（createがDateだった場合）。</p>\n<p>●LessThan/GreaterThan\n数値の値で使います。その項目の値が引数より小さい、あるいは大\nきいものを検索します。「findByAgeLessThan(20)」なら、ageの\n値が20より小さいものを検索します。</p>\n<p>●Between\n２つの値を引数に持ち、その２つの値の間のものを検索します。例\nえば、「findByAgeBetween(10,20)」とすれば、ageの値が10以上\n20以下のものを検索します。数値に限らず、日時の項目などでも使\nえます。</p>\n<p>――この他にもまだありますが、とりあえずこれらが使えれば、基本\n的な検索はだいたいできるようになるでしょう。JpaRepositoryを\n使いこなせるようになれば、ほとんどノンコーディングでさまざま\nなデータ検索ができるようになります。非常に簡単ですので、サン\nプルをベースにいろいろと試してみてください\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x23",
            "knowledgeid" : "-LdLv2K4G35jI5thkNgR",
            "name" : "tei952",
            "ord" : "23",
            "time" : 1555228371611,
            "title" : "54.0 JpaRepositoryのメソッド命名規則について",
            "update_at" : 1556488166377
          },
          "x24" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "certificatePath" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledgecontents%2FiHmcxnnRDWPOJAE38On1nCdq0ir2%2F-LdLv2K4G35jI5thkNgRx24?alt=media&token=eb4c215e-9131-480b-969c-8e15b857d8db",
              "type" : "Certificate"
            },
            "id" : "x24",
            "knowledgeid" : "-LdLv2K4G35jI5thkNgR",
            "name" : "tei952",
            "ord" : "24",
            "time" : 1555228371611,
            "title" : "55.9 御修了ありがとうございました。",
            "update_at" : 1556488166377
          }
        }
      },
      "-LedXZi8fzaKO45rL-Kv" : {
        "contents" : {
          "x01" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>LOH教材制作基础是Markdown文件转换成为JSON格式。\n同时也支持将Markdown转化为HTML和PDF\nMarkDown文件格式要求请参照目录下的js.md</code></pre>",
              "type" : "Html"
            },
            "id" : "x01",
            "knowledgeid" : "-LedXZi8fzaKO45rL-Kv",
            "name" : "tei952",
            "ord" : "01",
            "time" : 1555228371611,
            "title" : "1.0 LOH教材制作基础",
            "update_at" : 1556488166377
          },
          "x02" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>\nNOTE: 命令都是在终端里进行的。</p>\n<p>在开始之前，请确认你已经安装node.js</p>\n<p>1 下载并解压或者clone到本地\n2 进入LOHMD2N 目录，\n3 执行命令：<code>npm install</code>\n4 然后把需要批量转换的Markdown 文件放到 <code>./Markdowns</code> 目录下。\n5 执行命令: <code>gulp</code>\n6 工具会自动把Markdown 文件批量转换成相应的文件。\n</code></pre>",
              "type" : "Html"
            },
            "id" : "x02",
            "knowledgeid" : "-LedXZi8fzaKO45rL-Kv",
            "name" : "tei952",
            "ord" : "02",
            "time" : 1555228371611,
            "title" : "2.0 使用方法",
            "update_at" : 1556488166377
          },
          "x03" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>任务|命令| 说明\n----|----|-----\nMD2HTML | gulp MD2HTML | 把 markdown 转换成 HTML 文件。\nMD2PDF | gulp MD2PDF | 把 markdown 转换成 PDF 文件。\nMD2JSON| gulp MD2JSON| 把 markdown 转换成 JSON 文件。\nwatching | gulp watching| 监视 Markdowns 文件夹，一旦 markdown 文件被更改(新建、修改、删除)时自动进行转换。\ndefault | gulp 或者 gulp default | 一次批量把markdown 文件转换成相应的HTML/JSON/PDF文件。</code></pre>",
              "type" : "Html"
            },
            "id" : "x03",
            "knowledgeid" : "-LedXZi8fzaKO45rL-Kv",
            "name" : "tei952",
            "ord" : "03",
            "time" : 1555228371611,
            "title" : "3.0 Task (任务说明-命令说明)",
            "update_at" : 1556488166377
          },
          "x04" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "data" : "<pre><code>knowledgeid 知识编号\nauthor: 作者名称\nauthorid: 作者编号\n以上三项由LOH系统提供\n课件每页类型如下\n0 html\n1 select\n2 input\n3 youtube\n4 picture\n5 audio\n6 multiselect\n7 advertisment\n8 flash</code></pre>",
              "type" : "Html"
            },
            "id" : "x04",
            "knowledgeid" : "-LedXZi8fzaKO45rL-Kv",
            "name" : "tei952",
            "ord" : "04",
            "time" : 1555228371611,
            "title" : "4.0 MD文件说明",
            "update_at" : 1556488166377
          },
          "x05" : {
            "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
            "comment_count" : 0,
            "content" : {
              "certificatePath" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledgecontents%2FiHmcxnnRDWPOJAE38On1nCdq0ir2%2F-LedXZi8fzaKO45rL-Kvx05?alt=media&token=5f925820-18bf-46c2-81d6-a799b9abc81d",
              "type" : "Certificate"
            },
            "id" : "x05",
            "knowledgeid" : "-LedXZi8fzaKO45rL-Kv",
            "name" : "tei952",
            "ord" : "05",
            "time" : 1555228371611,
            "title" : "5.9 御修了ありがとうございました。",
            "update_at" : 1556488166377
          }
        }
      }
    }
  },
  "knowledgelikes" : {
    "data" : {
      "-LbW07Cj8C37LDyZeKHF" : {
        "likes" : {
          "-Ld3sLqhvbJJvSgZmxCQ" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "id" : "-Ld3sLqhvbJJvSgZmxCQ",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "time" : 1555933785875
          },
          "-Ld6RsR6U0Nh6__e94gV" : {
            "avatar" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
            "id" : "-Ld6RsR6U0Nh6__e94gV",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test2",
            "time" : 1555976914980
          },
          "-Ld7JTZref-l0VHV0ezB" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "id" : "-Ld7JTZref-l0VHV0ezB",
            "knowledgeid" : "-LbW07Cj8C37LDyZeKHF",
            "name" : "test1",
            "time" : 1555991488967
          }
        }
      },
      "-LbYZZXvYQxtpo2AWpzL" : {
        "likes" : {
          "-LdBSqN2qD5za07MH9KQ" : {
            "avatar" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
            "id" : "-LdBSqN2qD5za07MH9KQ",
            "knowledgeid" : "-LbYZZXvYQxtpo2AWpzL",
            "name" : "test2",
            "time" : 1556061054857
          }
        }
      },
      "-Ld495mtWIyObJzEEK7s" : {
        "likes" : {
          "-Ld49xIGcvb6y2V3Jwki" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "id" : "-Ld49xIGcvb6y2V3Jwki",
            "knowledgeid" : "-Ld495mtWIyObJzEEK7s",
            "name" : "test1",
            "time" : 1555938661815
          }
        }
      },
      "-LdLuLklhwL7keqLFNmD" : {
        "likes" : {
          "-LezO67cMTwl2mqIo2bv" : {
            "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
            "id" : "-LezO67cMTwl2mqIo2bv",
            "knowledgeid" : "-LdLuLklhwL7keqLFNmD",
            "name" : "test1",
            "time" : 1557989192438
          }
        }
      },
      "-LedXZi8fzaKO45rL-Kv" : {
        "likes" : {
          "-LetXZVLfeQLk28jm8F_" : {
            "avatar" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
            "id" : "-LetXZVLfeQLk28jm8F_",
            "knowledgeid" : "-LedXZi8fzaKO45rL-Kv",
            "name" : "test2",
            "time" : 1557891008734
          }
        }
      }
    }
  },
  "knowledges" : {
    "data" : {
      "-LbW07Cj8C37LDyZeKHF" : {
        "Fax" : "03-3532-6513",
        "HP" : "http://jp.highwayns.com",
        "Manager" : "鄭軍",
        "Tel" : "03-5244-9853",
        "address" : "東京都中央区八丁堀4-10-1-604",
        "application_count" : 5,
        "area" : "1",
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "certificate_count" : 21,
        "content_count" : 80,
        "created_at" : 1554258363397,
        "id" : "-LbW07Cj8C37LDyZeKHF",
        "industry" : "2",
        "introduce" : "Angularシステム開発入門",
        "knowledgetype" : "1",
        "like_count" : 2,
        "name" : "Angularシステム開発入門",
        "nickname" : "test1",
        "photo" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledges%2FCIxg5db1wHWTu1eeymVp4EkLzfg1%2F-LbW07Cj8C37LDyZeKHF?alt=media&token=3a5ec08e-8327-4d5f-b655-68465a6af485",
        "update_at" : 1555936196190
      },
      "-LbYZZXvYQxtpo2AWpzL" : {
        "Fax" : "03-3532-6513",
        "HP" : "http://jp.highwayns.com/",
        "Manager" : "鄭軍",
        "Tel" : "03-5244-9853",
        "address" : "東京都中央区八丁堀４－１０－１甲東ビル６０４号室",
        "application_count" : 4,
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "certificate_count" : 1,
        "content_count" : 20,
        "created_at" : 1554301210432,
        "id" : "-LbYZZXvYQxtpo2AWpzL",
        "industry" : "1",
        "introduce" : "海威コンサルティング株式会社のC#入門課程",
        "knowledgetype" : "1",
        "like_count" : 2,
        "name" : "C#入門",
        "nickname" : "test1",
        "photo" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledges%2FCIxg5db1wHWTu1eeymVp4EkLzfg1%2F-LbYZZXvYQxtpo2AWpzL?alt=media&token=5256a327-3e54-43f4-9854-ec573ced9c58",
        "update_at" : 1557833551776
      },
      "-Ld495mtWIyObJzEEK7s" : {
        "Fax" : "03-3532-6513",
        "HP" : "http://jp.highwayns.com/",
        "Manager" : "鄭軍",
        "Tel" : "03-5244-9853",
        "address" : "東京都中央区八丁堀４－１０－１　甲東ビル６０４号室",
        "application_count" : 2,
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "certificate_count" : 0,
        "content_count" : 25,
        "created_at" : 1555938439185,
        "id" : "-Ld495mtWIyObJzEEK7s",
        "industry" : "1",
        "introduce" : "ハイブリッド応用システム開発の基礎知識、本システム開発の全般知識を含む",
        "knowledgetype" : "1",
        "like_count" : 1,
        "name" : "ハイブリッド応用システム開発",
        "nickname" : "test1",
        "photo" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledges%2FCIxg5db1wHWTu1eeymVp4EkLzfg1%2F-Ld495mtWIyObJzEEK7s?alt=media&token=ef80e837-65fa-43a2-9413-d1f57994e4a3",
        "update_at" : 1557833625588
      },
      "-LdLtODpcc-J83q1aU5f" : {
        "Fax" : "03-3532-6513",
        "HP" : "http://jp.highwayns.com",
        "Manager" : "鄭軍",
        "Tel" : "03-5244-9853",
        "address" : "東京都中央区八丁堀4-10-1-604",
        "application_count" : 2,
        "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
        "certificate_count" : 0,
        "content_count" : 66,
        "created_at" : 1556236050753,
        "id" : "-LdLtODpcc-J83q1aU5f",
        "introduce" : "Springbootウェブ開発入門です、Springbootで素晴らしいウェブシステムを開発しましょう。",
        "knowledgetype" : "2",
        "like_count" : 0,
        "name" : "Springboot",
        "photo" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledges%2FiHmcxnnRDWPOJAE38On1nCdq0ir2%2F-LdLtODpcc-J83q1aU5f?alt=media&token=2de1184f-a1af-48fa-abd0-7ddc24a7cf04"
      },
      "-LdLtaiBADqiIat-6k_3" : {
        "Fax" : "03-3532-6513",
        "HP" : "http://jp.highwayns.com",
        "Manager" : "鄭軍",
        "Tel" : "03-5244-9853",
        "address" : "東京都中央区八丁堀4-10-1-604",
        "application_count" : 0,
        "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
        "certificate_count" : 0,
        "content_count" : 36,
        "created_at" : 1556236102724,
        "id" : "-LdLtaiBADqiIat-6k_3",
        "introduce" : "Framework7入門、ウェブデザイ新方法を勉強しましょう",
        "knowledgetype" : "1",
        "like_count" : 0,
        "name" : "Framework7入門",
        "photo" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledges%2FiHmcxnnRDWPOJAE38On1nCdq0ir2%2F-LdLtaiBADqiIat-6k_3?alt=media&token=714c3241-3b3a-4b03-bebb-e623164b96f0"
      },
      "-LdLtaiBADqiIat-6k_4" : {
        "Fax" : "03-3532-6513",
        "HP" : "http://jp.highwayns.com",
        "Manager" : "鄭軍",
        "Tel" : "03-5244-9853",
        "address" : "東京都中央区八丁堀4-10-1-604",
        "application_count" : 0,
        "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
        "certificate_count" : 0,
        "content_count" : 10,
        "created_at" : 1556236102724,
        "id" : "-LdLtaiBADqiIat-6k_4",
        "introduce" : "ここからVUEの高級技術を勉強しましょう",
        "knowledgetype" : "1",
        "like_count" : 0,
        "name" : "Vue-Infinite-Loading入門",
        "photo" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledges%2FiHmcxnnRDWPOJAE38On1nCdq0ir2%2F-LdLtaiBADqiIat-6k_4?alt=media&token=9bb87d02-2adb-4295-ab5d-f09b98f9cfcc"
      },
      "-LdLtaiBADqiIat-6k_5" : {
        "Fax" : "03-3532-6513",
        "HP" : "http://jp.highwayns.com",
        "Manager" : "鄭軍",
        "Tel" : "03-5244-9853",
        "address" : "東京都中央区八丁堀4-10-1-604",
        "application_count" : 0,
        "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
        "certificate_count" : 0,
        "content_count" : 0,
        "created_at" : 1556236102724,
        "id" : "-LdLtaiBADqiIat-6k_5",
        "introduce" : "MySql数据库从入门到精通",
        "knowledgetype" : "2",
        "like_count" : 0,
        "name" : "MySql数据库",
        "photo" : ""
      },
      "-LdLtaiBADqiIat-6k_6" : {
        "Fax" : "03-3532-6513",
        "HP" : "http://jp.highwayns.com",
        "Manager" : "鄭軍",
        "Tel" : "03-5244-9853",
        "address" : "東京都中央区八丁堀4-10-1-604",
        "application_count" : 0,
        "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
        "certificate_count" : 0,
        "content_count" : 20,
        "created_at" : 1556236102724,
        "id" : "-LdLtaiBADqiIat-6k_6",
        "introduce" : "ML Kit入門、人工知能の勉強はここからしましょう",
        "knowledgetype" : "1",
        "like_count" : 0,
        "name" : "ML Kit入門",
        "photo" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledges%2FiHmcxnnRDWPOJAE38On1nCdq0ir2%2F-LdLtaiBADqiIat-6k_6?alt=media&token=f1eae4cf-30de-4f76-9ac0-cc5af9baf402"
      },
      "-LdLtaiBADqiIat-6k_7" : {
        "Fax" : "03-3532-6513",
        "HP" : "http://jp.highwayns.com",
        "Manager" : "鄭軍",
        "Tel" : "03-5244-9853",
        "address" : "東京都中央区八丁堀4-10-1-604",
        "application_count" : 0,
        "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
        "certificate_count" : 0,
        "content_count" : 12,
        "created_at" : 1556236102724,
        "id" : "-LdLtaiBADqiIat-6k_7",
        "introduce" : "Tensorflow.js入門、ウェブで人工知能を応用しましょう",
        "knowledgetype" : "1",
        "like_count" : 0,
        "name" : "Tensorflow.js入門",
        "photo" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledges%2FiHmcxnnRDWPOJAE38On1nCdq0ir2%2F-LdLtaiBADqiIat-6k_7?alt=media&token=f1c88664-9ec9-4602-9852-06ca41e529ed"
      },
      "-LdLuLklhwL7keqLFNmD" : {
        "Fax" : "03-3532-6513",
        "HP" : "http://jp.highwayns.com",
        "Manager" : "鄭軍",
        "Tel" : "03-5244-9853",
        "address" : "東京都中央区八丁堀4-10-1-604",
        "application_count" : 2,
        "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
        "certificate_count" : 0,
        "content_count" : 25,
        "created_at" : 1556236299544,
        "id" : "-LdLuLklhwL7keqLFNmD",
        "introduce" : "nodejs从入门到精通",
        "knowledgetype" : "3",
        "like_count" : 1,
        "name" : "nodejs入门",
        "photo" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledges%2FiHmcxnnRDWPOJAE38On1nCdq0ir2%2F-LdLuLklhwL7keqLFNmD?alt=media&token=ee8e1be1-86a1-4ab9-9b4d-d5401091434e"
      },
      "-LdLuU-AHWwvMHDT-QpQ" : {
        "Fax" : "03-3532-6513",
        "HP" : "http://jp.highwayns.com",
        "Manager" : "鄭軍",
        "Tel" : "03-5244-9853",
        "address" : "東京都中央区八丁堀4-10-1-604",
        "application_count" : 2,
        "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
        "certificate_count" : 0,
        "content_count" : 31,
        "created_at" : 1556236333406,
        "id" : "-LdLuU-AHWwvMHDT-QpQ",
        "industry" : "1",
        "introduce" : "vue入门助你成为VUE前端工程师",
        "knowledgetype" : "3",
        "like_count" : 0,
        "name" : "vue从入门",
        "nickname" : "tei952",
        "photo" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledges%2FiHmcxnnRDWPOJAE38On1nCdq0ir2%2F-LdLuU-AHWwvMHDT-QpQ?alt=media&token=43afbf8b-b726-43d8-8350-ceafda9b8393",
        "update_at" : 1557833355947
      },
      "-LdLubY6J4gW1t94t63x" : {
        "Fax" : "03-3532-6513",
        "HP" : "http://jp.highwayns.com",
        "Manager" : "鄭軍",
        "Tel" : "03-5244-9853",
        "address" : "東京都中央区八丁堀4-10-1-604",
        "application_count" : 1,
        "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
        "certificate_count" : 0,
        "content_count" : 69,
        "created_at" : 1556236368285,
        "id" : "-LdLubY6J4gW1t94t63x",
        "introduce" : "Python　入門,Python基本知識を勉強しましょう。",
        "knowledgetype" : "3",
        "like_count" : 0,
        "name" : "Python　入門",
        "photo" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledges%2FiHmcxnnRDWPOJAE38On1nCdq0ir2%2F-LdLubY6J4gW1t94t63x?alt=media&token=0ca38135-5abe-49fa-b5b7-e9e37dc59642"
      },
      "-LdLv2K4G35jI5thkNgR" : {
        "Fax" : "03-3532-6513",
        "HP" : "http://jp.highwayns.com",
        "Manager" : "鄭軍",
        "Tel" : "03-5244-9853",
        "address" : "東京都中央区八丁堀4-10-1-604",
        "application_count" : 0,
        "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
        "certificate_count" : 0,
        "content_count" : 24,
        "created_at" : 1556236482059,
        "id" : "-LdLv2K4G35jI5thkNgR",
        "introduce" : "Spring框架从入门到精通",
        "knowledgetype" : "6",
        "like_count" : 0,
        "name" : "Spring框架",
        "photo" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledges%2FiHmcxnnRDWPOJAE38On1nCdq0ir2%2F-LdLv2K4G35jI5thkNgR?alt=media&token=1c859e80-1dd0-41cb-8caa-644ef144f54e"
      },
      "-LdLvCzZr_W7DeKwDw9w" : {
        "Fax" : "03-3532-6513",
        "HP" : "http://jp.highwayns.com",
        "Manager" : "鄭軍",
        "Tel" : "03-5244-9853",
        "address" : "東京都中央区八丁堀4-10-1-604",
        "application_count" : 0,
        "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
        "certificate_count" : 0,
        "content_count" : 0,
        "created_at" : 1556236525757,
        "id" : "-LdLvCzZr_W7DeKwDw9w",
        "introduce" : "gpu从入门到精通",
        "knowledgetype" : "7",
        "like_count" : 0,
        "name" : "gpu入门"
      },
      "-LdLvKb6JZ4xEuew0npf" : {
        "Fax" : "03-3532-6513",
        "HP" : "http://jp.highwayns.com",
        "Manager" : "鄭軍",
        "Tel" : "03-5244-9853",
        "address" : "東京都中央区八丁堀4-10-1-604",
        "application_count" : 0,
        "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
        "certificate_count" : 0,
        "content_count" : 0,
        "created_at" : 1556236556983,
        "id" : "-LdLvKb6JZ4xEuew0npf",
        "introduce" : "docker从入门到精通",
        "knowledgetype" : "8",
        "like_count" : 0,
        "name" : "docker入门"
      },
      "-LdLvYhoIN8mERmK7vQo" : {
        "Fax" : "03-3532-6513",
        "HP" : "http://jp.highwayns.com",
        "Manager" : "鄭軍",
        "Tel" : "03-5244-9853",
        "address" : "東京都中央区八丁堀4-10-1-604",
        "application_count" : 0,
        "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
        "certificate_count" : 0,
        "content_count" : 0,
        "created_at" : 1556236616193,
        "id" : "-LdLvYhoIN8mERmK7vQo",
        "introduce" : "kubernetes从入门到精通",
        "knowledgetype" : "8",
        "like_count" : 0,
        "name" : "kubernetes入门",
        "photo" : ""
      },
      "-LdLvjsjW3CGLyxi3Qb2" : {
        "Fax" : "03-3532-6513",
        "HP" : "http://jp.highwayns.com",
        "Manager" : "鄭軍",
        "Tel" : "03-5244-9853",
        "address" : "東京都中央区八丁堀4-10-1-604",
        "application_count" : 0,
        "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
        "certificate_count" : 0,
        "content_count" : 0,
        "created_at" : 1556236664578,
        "id" : "-LdLvjsjW3CGLyxi3Qb2",
        "introduce" : "openshift从入门到精通",
        "knowledgetype" : "8",
        "like_count" : 0,
        "name" : "openshift入门"
      },
      "-LdLvzsimpPWmPNFJwdO" : {
        "Fax" : "03-3532-6513",
        "HP" : "http://jp.highwayns.com",
        "Manager" : "鄭軍",
        "Tel" : "03-5244-9853",
        "address" : "東京都中央区八丁堀4-10-1-604",
        "application_count" : 0,
        "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
        "certificate_count" : 0,
        "content_count" : 0,
        "created_at" : 1556236730161,
        "id" : "-LdLvzsimpPWmPNFJwdO",
        "introduce" : "人工智能数学基础教育",
        "knowledgetype" : "4",
        "like_count" : 0,
        "name" : "人工智能数学基础"
      },
      "-LdLwA6JjJepFe9MTwD2" : {
        "Fax" : "03-3532-6513",
        "HP" : "http://jp.highwayns.com",
        "Manager" : "鄭軍",
        "Tel" : "03-5244-9853",
        "address" : "東京都中央区八丁堀4-10-1-604",
        "application_count" : 0,
        "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
        "certificate_count" : 0,
        "content_count" : 0,
        "created_at" : 1556236776080,
        "id" : "-LdLwA6JjJepFe9MTwD2",
        "introduce" : "windows基础知识",
        "knowledgetype" : "6",
        "like_count" : 0,
        "name" : "windows入门"
      },
      "-LdLwITanyNoAGvVvlCh" : {
        "Fax" : "03-3532-6513",
        "HP" : "http://jp.highwayns.com",
        "Manager" : "鄭軍",
        "Tel" : "03-5244-9853",
        "address" : "東京都中央区八丁堀4-10-1-604",
        "application_count" : 0,
        "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
        "certificate_count" : 0,
        "content_count" : 0,
        "created_at" : 1556236810433,
        "id" : "-LdLwITanyNoAGvVvlCh",
        "introduce" : "linux基础教程",
        "knowledgetype" : "5",
        "like_count" : 0,
        "name" : "linux入门"
      },
      "-LdLwZEoLZc4i2v8T5QR" : {
        "Fax" : "03-3532-6513",
        "HP" : "http://jp.highwayns.com",
        "Manager" : "鄭軍",
        "Tel" : "03-5244-9853",
        "address" : "東京都中央区八丁堀4-10-1-604",
        "application_count" : 0,
        "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
        "certificate_count" : 0,
        "content_count" : 0,
        "created_at" : 1556236879200,
        "id" : "-LdLwZEoLZc4i2v8T5QR",
        "introduce" : "pmp项目管理基础知识",
        "knowledgetype" : "10",
        "like_count" : 0,
        "name" : "pmp项目管理基础"
      },
      "-LedXZi8fzaKO45rL-Kv" : {
        "Fax" : "03-3532-6513",
        "HP" : "http://jp.highwayns.com",
        "Manager" : "鄭軍",
        "Tel" : "03-5244-9853",
        "address" : "東京都中央区八丁堀4-10-1-604",
        "application_count" : 2,
        "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
        "certificate_count" : 0,
        "content_count" : 5,
        "created_at" : 1557622574206,
        "id" : "-LedXZi8fzaKO45rL-Kv",
        "introduce" : "LOH是海威咨询出品的免费在线教学和APP教学系统，具有随时随地免费学习，边学边测，教师实时答疑等优点。本课件是学习内容制作教程，欢迎大家学习和使用。",
        "knowledgetype" : "10",
        "like_count" : 1,
        "name" : "LOH教材制作",
        "nickname" : "test1",
        "photo" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/knowledges%2FiHmcxnnRDWPOJAE38On1nCdq0ir2%2F-LedXZi8fzaKO45rL-Kv?alt=media&token=2a738082-a270-425a-83e5-e10d884903c8"
      }
    },
    "err_code" : 0,
    "err_msg" : "success"
  },
  "likes" : {
    "data" : {
      "0" : {
        "avatar" : "1",
        "name" : "Cory Bergman",
        "postid" : "11",
        "time" : "1404705240"
      },
      "1" : {
        "avatar" : "2",
        "name" : "Nathan Lawson",
        "postid" : "12",
        "time" : "1404705260"
      },
      "2" : {
        "avatar" : "3",
        "name" : "Nathan Lawson",
        "postid" : "13",
        "time" : "1404705300"
      },
      "3" : {
        "avatar" : "4",
        "name" : "Vaughn",
        "postid" : "14",
        "time" : "1404705400"
      },
      "-LbRHgPyDAMcmJnsf_nF" : {
        "-LcRJl3HboJ_Wdy9OGmR" : {
          "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "id" : "-LcRJl3HboJ_Wdy9OGmR",
          "name" : "test1",
          "postid" : "-LbRHgPyDAMcmJnsf_nF",
          "time" : 1555253367296
        },
        "-LcRKaog4rXNw24T_s5x" : {
          "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "id" : "-LcRKaog4rXNw24T_s5x",
          "name" : "test1",
          "postid" : "-LbRHgPyDAMcmJnsf_nF",
          "time" : 1555253587466
        },
        "-LcRNB3lUczQABiJS-a1" : {
          "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "id" : "-LcRNB3lUczQABiJS-a1",
          "name" : "test1",
          "postid" : "-LbRHgPyDAMcmJnsf_nF",
          "time" : 1555254265276
        },
        "-Ld4JLmSAlBpV0R3yigs" : {
          "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "id" : "-Ld4JLmSAlBpV0R3yigs",
          "name" : "test1",
          "postid" : "-LbRHgPyDAMcmJnsf_nF",
          "time" : 1555941125500
        }
      },
      "-LdLmvv2SvIuEAO7e-ch" : {
        "-LdkisnbIV5pE9F4cVsm" : {
          "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
          "id" : "-LdkisnbIV5pE9F4cVsm",
          "name" : "tei952",
          "postid" : "-LdLmvv2SvIuEAO7e-ch",
          "time" : 1556669500985
        }
      }
    },
    "err_code" : 0,
    "err_msg" : "success"
  },
  "more_timeline" : {
    "data" : [ {
      "avatar" : "9",
      "comment_count" : 0,
      "created_at" : "1504700591",
      "id" : "29",
      "like_count" : 1,
      "nickname" : "Jean Paul Sartre",
      "original_pic" : "https://loremflickr.com/1000/700/nature?lock=1",
      "text" : "If you're lonely when you're alone, you're in bad company."
    }, {
      "avatar" : "08",
      "comment_count" : 0,
      "created_at" : "1504698995",
      "id" : "28",
      "like_count" : 0,
      "nickname" : "Zig Ziglar",
      "original_pic" : "",
      "text" : "Your attitude, not your aptitude, will determine your altitude."
    }, {
      "avatar" : "1",
      "comment_count" : 0,
      "created_at" : "1504698321",
      "id" : "27",
      "like_count" : 2,
      "nickname" : "Winston Churchill",
      "original_pic" : "https://loremflickr.com/1000/700/nature?lock=8",
      "text" : "Success is not final, failure is not fatal: it is the courage to continue that counts."
    }, {
      "avatar" : "4",
      "comment_count" : 2,
      "created_at" : "1504697858",
      "id" : "26",
      "like_count" : 0,
      "nickname" : "Nishan Panwar",
      "original_pic" : "",
      "text" : "When life gets hard and you want to give up, remember that life is full of ups and downs, and without the downs, the ups would mean nothing."
    }, {
      "avatar" : "2",
      "comment_count" : 0,
      "created_at" : "1504693147",
      "id" : "25",
      "like_count" : 0,
      "nickname" : "Paulo Coelho",
      "original_pic" : "https://loremflickr.com/1000/700/nature?lock=7",
      "text" : "There is only one thing that makes a dream impossible to achieve: the fear of failure."
    }, {
      "avatar" : "9",
      "comment_count" : 0,
      "created_at" : "1504692969",
      "id" : "24",
      "like_count" : 0,
      "nickname" : "Helen Keller",
      "original_pic" : "",
      "text" : "When one door of happiness closes, another opens; but often we look so long at the closed door that we do not see the one which has been opened for us."
    } ],
    "err_code" : 0,
    "err_msg" : "success"
  },
  "orders" : {
    "data" : [ {
      "bankaccount" : "みずほ銀行○○支店12345678",
      "comment" : "特になし",
      "companyId" : "2",
      "content" : "システム開発",
      "detail" : [ {
        "Unit" : "円",
        "name" : "a",
        "price" : 550000,
        "time" : "1人月"
      }, {
        "Unit" : "円",
        "name" : "b",
        "price" : 450000,
        "time" : "1人月"
      } ],
      "endDate" : "2018/10/31",
      "invoiceId" : "201810",
      "location" : "品川",
      "startDate" : "2018/10/01",
      "tax" : 0.08,
      "totalAmount" : 1080000,
      "userid" : "1"
    }, {
      "comment" : "特になし",
      "companyId" : "3",
      "content" : "システム開発",
      "detail" : [ {
        "Unit" : "円",
        "name" : "a",
        "price" : 550000,
        "worktime" : "1人月"
      }, {
        "Unit" : "円",
        "name" : "b",
        "price" : 450000,
        "worktime" : "1人月"
      } ],
      "endDate" : "2018/10/31",
      "invoiceId" : "201810",
      "location" : "品川",
      "startDate" : "2018/10/01",
      "tax" : 0.08,
      "totalAmount" : 1080000,
      "userid" : "1"
    } ],
    "err_code" : 0,
    "err_msg" : "success"
  },
  "posts" : {
    "data" : {
      "-LbRHgPyDAMcmJnsf_nF" : {
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "comment_count" : 6,
        "created_at" : 1554179082055,
        "id" : "-LbRHgPyDAMcmJnsf_nF",
        "like_count" : 4,
        "nickname" : "test1",
        "original_pic" : "",
        "text" : "ddddd"
      },
      "-LbRJGq96GZR5TzYhpNI" : {
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "comment_count" : 0,
        "created_at" : 1554179497492,
        "id" : "-LbRJGq96GZR5TzYhpNI",
        "like_count" : 0,
        "nickname" : "test1",
        "original_pic" : "https://wohapp-3a179.firebaseapp.com/",
        "text" : "ssss"
      },
      "-Lb_nRjO4acOcnmT0YDo" : {
        "comment_count" : 0,
        "created_at" : 1554338663756,
        "id" : "-Lb_nRjO4acOcnmT0YDo",
        "like_count" : 0,
        "original_pic" : "",
        "text" : "gggg"
      },
      "-LbkS5fwgqPoZHiYemmY" : {
        "comment_count" : 0,
        "created_at" : 1554517355403,
        "id" : "-LbkS5fwgqPoZHiYemmY",
        "like_count" : 0,
        "original_pic" : "https://wohapp-3a179.firebaseapp.com/",
        "text" : "ssssss"
      },
      "-LbkScA7O38oTZZNaEwm" : {
        "comment_count" : 0,
        "created_at" : 1554517492569,
        "id" : "-LbkScA7O38oTZZNaEwm",
        "like_count" : 0,
        "original_pic" : "https://wohapp-3a179.firebaseapp.com/",
        "text" : "xxxx"
      },
      "-Lblq6e_MAgCrFwQ8mKe" : {
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "comment_count" : 0,
        "created_at" : 1554540690238,
        "id" : "-Lblq6e_MAgCrFwQ8mKe",
        "like_count" : 0,
        "nickname" : "test1",
        "original_pic" : "https://wohapp-3a179.firebaseapp.com/",
        "text" : "hhhh"
      },
      "-LdLmvv2SvIuEAO7e-ch" : {
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "comment_count" : 1,
        "created_at" : 1556234354590,
        "id" : "-LdLmvv2SvIuEAO7e-ch",
        "like_count" : 1,
        "nickname" : "test1",
        "original_pic" : "https://wohapp-3a179.firebaseapp.com/",
        "text" : "海威学习app即将发布，欢迎大家关注"
      },
      "-LdSWsjVAbtoV6Mttgvm" : {
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "comment_count" : 0,
        "created_at" : 1556347325520,
        "id" : "-LdSWsjVAbtoV6Mttgvm",
        "like_count" : 0,
        "nickname" : "test1",
        "original_pic" : "https://wohapp-3a179.firebaseapp.com/",
        "text" : ""
      }
    },
    "err_code" : 0,
    "err_msg" : "success"
  },
  "projects" : {
    "data" : {
      "-LbW06MHXWWiH_5qTsNa" : {
        "Fax" : "1",
        "HP" : "1",
        "Manager" : "1",
        "Tel" : "1",
        "address" : "11",
        "application_count" : 0,
        "area" : "1",
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "created_at" : 1554258359951,
        "id" : "-LbW06MHXWWiH_5qTsNa",
        "industry" : "1",
        "like_count" : 0,
        "name" : "test project2",
        "nickname" : "test1",
        "photo" : "",
        "projecttype" : "1",
        "update_at" : 1554258360368
      },
      "-LbYX_su44sUSukdzHMZ" : {
        "Fax" : "sss",
        "HP" : "sss",
        "Manager" : "asss",
        "Tel" : "sss",
        "address" : "sss",
        "application_count" : 0,
        "area" : "1",
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "created_at" : 1554300691482,
        "id" : "-LbYX_su44sUSukdzHMZ",
        "industry" : "2",
        "like_count" : 0,
        "name" : "sss",
        "nickname" : "test1",
        "projecttype" : "2"
      }
    },
    "err_code" : 0,
    "err_msg" : "success"
  },
  "quatations" : {
    "data" : [ {
      "bankaccount" : "みずほ銀行○○支店12345678",
      "comment" : "特になし",
      "companyId" : "2",
      "content" : "システム開発",
      "detail" : [ {
        "Unit" : "円",
        "name" : "a",
        "price" : 550000,
        "worktime" : "1人月"
      }, {
        "Unit" : "円",
        "name" : "b",
        "price" : 450000,
        "worktime" : "1人月"
      } ],
      "endDate" : "2018/10/31",
      "invoiceId" : "201810",
      "location" : "品川",
      "startDate" : "2018/10/01",
      "tax" : 0.08,
      "totalAmount" : 1080000,
      "userid" : "1"
    }, {
      "comment" : "特になし",
      "companyId" : "3",
      "content" : "システム開発",
      "detail" : [ {
        "Unit" : "円",
        "name" : "a",
        "price" : 550000,
        "time" : "1人月"
      }, {
        "Unit" : "円",
        "name" : "b",
        "price" : 450000,
        "time" : "1人月"
      } ],
      "endDate" : "2018/10/31",
      "invoiceId" : "201810",
      "location" : "品川",
      "startDate" : "2018/10/01",
      "tax" : 0.08,
      "totalAmount" : 1080000,
      "userid" : "1"
    } ],
    "err_code" : 0,
    "err_msg" : "success"
  },
  "refresh_timeline" : {
    "data" : [ {
      "avatar" : "5",
      "comment_count" : 0,
      "created_at" : "1504784104",
      "id" : "48",
      "like_count" : 0,
      "nickname" : "Nicole Sobon",
      "original_pic" : "",
      "text" : "Sometimes the hardest part isn't letting go, but rather, learning to start over."
    }, {
      "avatar" : "2",
      "comment_count" : 0,
      "created_at" : "1504783664",
      "id" : "47",
      "like_count" : 0,
      "nickname" : "Indira Gandhi",
      "original_pic" : "https://loremflickr.com/1000/700/nature?lock=1",
      "text" : "Opportunities are not offered. They must be wrested and worked for. And this calls for perseverance and courage."
    }, {
      "avatar" : "1",
      "comment_count" : 2,
      "created_at" : "1504781208",
      "id" : "46",
      "like_count" : 1,
      "nickname" : "Sally Nicholls",
      "original_pic" : "",
      "text" : "There's no point having wishes if you don't at least try to do them.https://twitter.com"
    }, {
      "avatar" : "7",
      "comment_count" : 0,
      "created_at" : "1504781124",
      "id" : "45",
      "like_count" : 0,
      "nickname" : "Dale Carnegie",
      "original_pic" : "https://loremflickr.com/1000/700/nature?lock=3",
      "text" : "Remember, happiness doesn't depend upon who you are or what you have; it depends solely upon what you think."
    }, {
      "avatar" : "3",
      "comment_count" : 0,
      "created_at" : "1504780946",
      "id" : "44",
      "like_count" : 0,
      "nickname" : "Ted Mosby",
      "original_pic" : "",
      "text" : "Sometimes things have to fall apart to make way for better things."
    }, {
      "avatar" : "5",
      "comment_count" : 0,
      "created_at" : "1504779710",
      "id" : "43",
      "like_count" : 0,
      "nickname" : "Tim Howard",
      "original_pic" : "https://loremflickr.com/70/70/nature?lock=5",
      "text" : "It's not about making the amazing saves. It's the little things and small things that made great gatekeepers great."
    }, {
      "avatar" : "7",
      "comment_count" : 0,
      "created_at" : "1504779092",
      "id" : "42",
      "like_count" : 0,
      "nickname" : "Max Lerner",
      "original_pic" : "",
      "text" : "The turning point in the process of growing up is when you discover the core of strength within you that survives all hurt."
    } ],
    "err_code" : 0,
    "err_msg" : "success"
  },
  "reports" : {
    "data" : [ {
      "companyId" : "1",
      "dateMonth" : "2018/10",
      "total" : 172,
      "userid" : "1",
      "workdetail" : [ {
        "break" : "1:00",
        "content" : "システム開発",
        "date" : "2018/10/01",
        "endTime" : "19:00",
        "startTime" : "9:00"
      }, {
        "break" : "1:00",
        "content" : "システム開発",
        "date" : "2018/10/02",
        "endTime" : "19:00",
        "startTime" : "9:00"
      }, {
        "break" : "1:00",
        "content" : "システム開発",
        "date" : "2018/10/03",
        "endTime" : "19:00",
        "startTime" : "9:00"
      }, {
        "break" : "1:00",
        "content" : "システム開発",
        "date" : "2018/10/04",
        "endTime" : "19:00",
        "startTime" : "9:00"
      }, {
        "break" : "1:00",
        "content" : "システム開発",
        "date" : "2018/10/05",
        "endTime" : "19:00",
        "startTime" : "9:00"
      }, {
        "break" : "",
        "content" : "",
        "date" : "2018/10/06",
        "endTime" : "",
        "startTime" : ""
      }, {
        "break" : "",
        "content" : "",
        "date" : "2018/10/07",
        "endTime" : "",
        "startTime" : ""
      }, {
        "break" : "1:00",
        "content" : "システム開発",
        "date" : "2018/10/08",
        "endTime" : "19:00",
        "startTime" : "9:00"
      }, {
        "break" : "1:00",
        "content" : "システム開発",
        "date" : "2018/10/09",
        "endTime" : "19:00",
        "startTime" : "9:00"
      }, {
        "break" : "1:00",
        "content" : "システム開発",
        "date" : "2018/10/10",
        "endTime" : "19:00",
        "startTime" : "9:00"
      }, {
        "break" : "1:00",
        "content" : "システム開発",
        "date" : "2018/10/11",
        "endTime" : "19:00",
        "startTime" : "9:00"
      }, {
        "break" : "1:00",
        "content" : "システム開発",
        "date" : "2018/10/12",
        "endTime" : "19:00",
        "startTime" : "9:00"
      }, {
        "break" : "",
        "content" : "",
        "date" : "2018/10/13",
        "endTime" : "",
        "startTime" : ""
      }, {
        "break" : "",
        "content" : "",
        "date" : "2018/10/14",
        "endTime" : "",
        "startTime" : ""
      }, {
        "break" : "1:00",
        "content" : "システム開発",
        "date" : "2018/10/15",
        "endTime" : "19:00",
        "startTime" : "9:00"
      }, {
        "break" : "1:00",
        "content" : "システム開発",
        "date" : "2018/10/16",
        "endTime" : "19:00",
        "startTime" : "9:00"
      }, {
        "break" : "1:00",
        "content" : "システム開発",
        "date" : "2018/10/17",
        "endTime" : "19:00",
        "startTime" : "9:00"
      }, {
        "break" : "1:00",
        "content" : "システム開発",
        "date" : "2018/10/18",
        "endTime" : "19:00",
        "startTime" : "9:00"
      }, {
        "break" : "1:00",
        "content" : "システム開発",
        "date" : "2018/10/19",
        "endTime" : "19:00",
        "startTime" : "9:00"
      }, {
        "break" : "",
        "content" : "",
        "date" : "2018/10/20",
        "endTime" : "",
        "startTime" : ""
      }, {
        "break" : "",
        "content" : "",
        "date" : "2018/10/21",
        "endTime" : "",
        "startTime" : ""
      }, {
        "break" : "1:00",
        "content" : "システム開発",
        "date" : "2018/10/22",
        "endTime" : "19:00",
        "startTime" : "9:00"
      }, {
        "break" : "1:00",
        "content" : "システム開発",
        "date" : "2018/10/23",
        "endTime" : "19:00",
        "startTime" : "9:00"
      }, {
        "break" : "1:00",
        "content" : "システム開発",
        "date" : "2018/10/24",
        "endTime" : "19:00",
        "startTime" : "9:00"
      }, {
        "break" : "1:00",
        "content" : "システム開発",
        "date" : "2018/10/25",
        "endTime" : "19:00",
        "startTime" : "9:00"
      }, {
        "break" : "1:00",
        "content" : "システム開発",
        "date" : "2018/10/26",
        "endTime" : "19:00",
        "startTime" : "9:00"
      }, {
        "break" : "",
        "content" : "",
        "date" : "2018/10/27",
        "endTime" : "",
        "startTime" : ""
      }, {
        "break" : "",
        "content" : "",
        "date" : "2018/10/28",
        "endTime" : "",
        "startTime" : ""
      }, {
        "break" : "1:00",
        "content" : "システム開発",
        "date" : "2018/10/29",
        "endTime" : "19:00",
        "startTime" : "9:00"
      }, {
        "break" : "1:00",
        "content" : "システム開発",
        "date" : "2018/10/30",
        "endTime" : "19:00",
        "startTime" : "9:00"
      }, {
        "break" : "1:00",
        "content" : "システム開発",
        "date" : "2018/10/31",
        "endTime" : "19:00",
        "startTime" : "9:00"
      } ]
    } ],
    "err_code" : 0,
    "err_msg" : "success"
  },
  "room-messages" : {
    "-LbpDP3nLIekOaNV6i9R" : {
      "-Lbz6BqsfiRMQSNY5FlI" : {
        ".priority" : 1.554763271916E12,
        "message" : "test message",
        "name" : "test1",
        "timestamp" : 1554763271916,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc-qutezZa6KGRSqV2a" : {
        ".priority" : 1.554792558355E12,
        "message" : "this.text",
        "name" : "test1",
        "timestamp" : 1554792558355,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc-rGEhSY3vQ58qgjWG" : {
        ".priority" : 1.554792650678E12,
        "message" : "this.text",
        "name" : "test1",
        "timestamp" : 1554792650678,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc-rl_isGtyeGz7luC-" : {
        ".priority" : 1.554792782327E12,
        "message" : "this.text",
        "name" : "test1",
        "timestamp" : 1554792782327,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc-uITy9CACDfU3ghdy" : {
        ".priority" : 1.554793445449E12,
        "message" : "this.text",
        "name" : "test1",
        "timestamp" : 1554793445449,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc-uaMGwSf_PTcocZ_B" : {
        ".priority" : 1.55479352278E12,
        "message" : "this.text",
        "name" : "test1",
        "timestamp" : 1554793522780,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc-uiUWuuNIBLbgRIgH" : {
        ".priority" : 1.554793556074E12,
        "message" : "this.text",
        "name" : "test1",
        "timestamp" : 1554793556074,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc-v34zBASISWQsJhKu" : {
        ".priority" : 1.554793644552E12,
        "message" : "this.text",
        "name" : "test1",
        "timestamp" : 1554793644552,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc-vOdYE-xrd0W1exe1" : {
        ".priority" : 1.554793732878E12,
        "message" : "this.text",
        "name" : "test1",
        "timestamp" : 1554793732878,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc-vlR74jnOpP05UdxP" : {
        ".priority" : 1.554793830324E12,
        "message" : "this.text",
        "name" : "test1",
        "timestamp" : 1554793830324,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc-vvv5h90HWvVgcDIS" : {
        ".priority" : 1.554793873229E12,
        "message" : "this.text",
        "name" : "test1",
        "timestamp" : 1554793873229,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc-whV-cdlmrlzCXRlL" : {
        ".priority" : 1.554794076296E12,
        "message" : "ffff",
        "name" : "test1",
        "timestamp" : 1554794076296,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc03SgBAbIUN9UJVwzv" : {
        ".priority" : 1.554796108693E12,
        "message" : "123",
        "name" : "test1",
        "timestamp" : 1554796108693,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc03VTZbY8BJ6CbFDTJ" : {
        ".priority" : 1.554796120114E12,
        "message" : "333",
        "name" : "test1",
        "timestamp" : 1554796120114,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc1Ii9yP0Amiu_np5EO" : {
        ".priority" : 1.554816885686E12,
        "message" : "sss",
        "name" : "test1",
        "timestamp" : 1554816885686,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc1PnQ4ElEATAntoR2n" : {
        ".priority" : 1.554818742246E12,
        "message" : "sss",
        "name" : "test1",
        "timestamp" : 1554818742246,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc1Qt3QT4IThIzPl7e4" : {
        ".priority" : 1.554819027686E12,
        "message" : "test",
        "name" : "test1",
        "timestamp" : 1554819027686,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc1REfFh2CxCnr7bsnu" : {
        ".priority" : 1.554819120296E12,
        "message" : "window",
        "name" : "test1",
        "timestamp" : 1554819120296,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc1RUwSymUWT55LAfp_" : {
        ".priority" : 1.554819186726E12,
        "message" : "sss",
        "name" : "test1",
        "timestamp" : 1554819186726,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc1UkrPXGWMfcU-dFIo" : {
        ".priority" : 1.554820042445E12,
        "message" : "xxx",
        "name" : "test1",
        "timestamp" : 1554820042445,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc1Uw4O9tjaOTgrPqB4" : {
        ".priority" : 1.554820088526E12,
        "message" : "vvv",
        "name" : "test1",
        "timestamp" : 1554820088526,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc1Wurv-2TLvkB1NCm1" : {
        ".priority" : 1.554820607726E12,
        "message" : "www",
        "name" : "test1",
        "timestamp" : 1554820607726,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc1X-71vWTyw31ijZuE" : {
        ".priority" : 1.554820629235E12,
        "message" : "wwww",
        "name" : "test1",
        "timestamp" : 1554820629235,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc1XHMFH6t7gUMIM2O1" : {
        ".priority" : 1.554820703935E12,
        "message" : "sss",
        "name" : "test1",
        "timestamp" : 1554820703935,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc1XNRv9g2lUYPTbJkf" : {
        ".priority" : 1.554820728946E12,
        "message" : "www",
        "name" : "test1",
        "timestamp" : 1554820728946,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc348s0Qg7e6caMSrd9" : {
        ".priority" : 1.554846621411E12,
        "message" : "sss",
        "name" : "test1",
        "timestamp" : 1554846621411,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc34gu98khx6dIKwolr" : {
        ".priority" : 1.554846764912E12,
        "message" : "eee",
        "name" : "test1",
        "timestamp" : 1554846764912,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc35a7aubU08uhzhdJu" : {
        ".priority" : 1.554846999311E12,
        "message" : "life",
        "name" : "test2",
        "timestamp" : 1554846999311,
        "type" : "messageType",
        "userId" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73"
      },
      "-Lc37Y0lHmFX1wjZGOrw" : {
        ".priority" : 1.554847510872E12,
        "message" : "sss",
        "name" : "test2",
        "timestamp" : 1554847510872,
        "type" : "messageType",
        "userId" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73"
      },
      "-Lc37nTIUxaqkkN0ei-K" : {
        ".priority" : 1.554847578391E12,
        "message" : "zzz",
        "name" : "test2",
        "timestamp" : 1554847578391,
        "type" : "messageType",
        "userId" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73"
      },
      "-Lc3BAcN0nlPltZkdgCz" : {
        ".priority" : 1.554848463771E12,
        "message" : "www",
        "name" : "test2",
        "timestamp" : 1554848463771,
        "type" : "messageType",
        "userId" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73"
      },
      "-Lc3BENo17qULUs8HOL6" : {
        ".priority" : 1.554848479151E12,
        "message" : "rrr",
        "name" : "test2",
        "timestamp" : 1554848479151,
        "type" : "messageType",
        "userId" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73"
      },
      "-Lc3BKuYu01OczPj7lwx" : {
        ".priority" : 1.554848505891E12,
        "message" : "33333",
        "name" : "test2",
        "timestamp" : 1554848505891,
        "type" : "messageType",
        "userId" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73"
      },
      "-Lc3BQnbzQ6W27mYg8aA" : {
        ".priority" : 1.554848530031E12,
        "message" : "444",
        "name" : "test2",
        "timestamp" : 1554848530031,
        "type" : "messageType",
        "userId" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73"
      },
      "-Lc3Fdy2vCSVkh_ikR8L" : {
        ".priority" : 1.554849636641E12,
        "message" : "www",
        "name" : "test2",
        "timestamp" : 1554849636641,
        "type" : "messageType",
        "userId" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73"
      },
      "-Lc3Fltrtq41wvbuz8Lw" : {
        ".priority" : 1.554849669142E12,
        "message" : "33",
        "name" : "test2",
        "timestamp" : 1554849669142,
        "type" : "messageType",
        "userId" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73"
      },
      "-Lc4UTpPAEYSEprdc1Y8" : {
        ".priority" : 1.554870300132E12,
        "message" : "sss",
        "name" : "test2",
        "timestamp" : 1554870300132,
        "type" : "messageType",
        "userId" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73"
      },
      "-Lc4UWMjcd9ZHUEGpn08" : {
        ".priority" : 1.55487031053E12,
        "message" : "www",
        "name" : "test2",
        "timestamp" : 1554870310530,
        "type" : "messageType",
        "userId" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73"
      },
      "-Lc4Udk2BZTwL6wqeTca" : {
        ".priority" : 1.554870344847E12,
        "message" : "hello",
        "name" : "test2",
        "timestamp" : 1554870344847,
        "type" : "messageType",
        "userId" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73"
      },
      "-Lc4UrQ-1sT_sK6I_ddB" : {
        ".priority" : 1.554870400925E12,
        "message" : "wwww",
        "name" : "test1",
        "timestamp" : 1554870400925,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc4UuSebj4CshWNXvvV" : {
        ".priority" : 1.55487041351E12,
        "message" : "kkk",
        "name" : "test1",
        "timestamp" : 1554870413510,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc4Uz-smpDmqFzzOWPn" : {
        ".priority" : 1.554870431956E12,
        "message" : "www",
        "name" : "test1",
        "timestamp" : 1554870431956,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc4V-IDez8dzpZe0v6i" : {
        ".priority" : 1.554870437242E12,
        "message" : "eee",
        "name" : "test1",
        "timestamp" : 1554870437242,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc4VS3hh_tUo8eNqGwp" : {
        ".priority" : 1.554870555065E12,
        "message" : "www",
        "name" : "test1",
        "timestamp" : 1554870555065,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc4ywIMwD5xc8tFUnvY" : {
        ".priority" : 1.5548785473E12,
        "message" : "在 下雨",
        "name" : "test1",
        "timestamp" : 1554878547300,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc4z55iOhyYmJc6bTKa" : {
        ".priority" : 1.554878587449E12,
        "message" : "是的",
        "name" : "test2",
        "timestamp" : 1554878587449,
        "type" : "messageType",
        "userId" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73"
      },
      "-Lc4z7jSc2zx8SXGvuON" : {
        ".priority" : 1.554878598248E12,
        "message" : "OK",
        "name" : "test2",
        "timestamp" : 1554878598248,
        "type" : "messageType",
        "userId" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73"
      },
      "-Lc4z8t9Dgc5sSqTlZbO" : {
        ".priority" : 1.554878602962E12,
        "message" : "あなた",
        "name" : "test1",
        "timestamp" : 1554878602962,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc4zFYGxLM8ditcxiGR" : {
        ".priority" : 1.554878630899E12,
        "message" : "牛了",
        "name" : "test2",
        "timestamp" : 1554878630899,
        "type" : "messageType",
        "userId" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73"
      },
      "-Lc4zPZLEOVCdtTL8Dcd" : {
        ".priority" : 1.554878671262E12,
        "message" : "what 是那么ものだ",
        "name" : "test1",
        "timestamp" : 1554878671262,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc4zyYfffBIlfqKzU3F" : {
        ".priority" : 1.554878818685E12,
        "message" : "是大大",
        "name" : "test2",
        "timestamp" : 1554878818685,
        "type" : "messageType",
        "userId" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73"
      },
      "-Lc5-2sgpsOsdi3-f9WC" : {
        ".priority" : 1.554878840489E12,
        "message" : "压顶  顶替 枯无可奈何花落去枯无可奈何地",
        "name" : "test2",
        "timestamp" : 1554878840489,
        "type" : "messageType",
        "userId" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73"
      },
      "-Lc5-4pEiv6j9qLuECGf" : {
        ".priority" : 1.554878848767E12,
        "message" : "324234234",
        "name" : "test2",
        "timestamp" : 1554878848767,
        "type" : "messageType",
        "userId" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73"
      },
      "-Lc5-Qmgimm3mSDytTHk" : {
        ".priority" : 1.554878938422E12,
        "message" : "he",
        "name" : "test1",
        "timestamp" : 1554878938422,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc50Uj0pSTroAtb0PcW" : {
        ".priority" : 1.554879216688E12,
        "message" : "554456456",
        "name" : "test2",
        "timestamp" : 1554879216688,
        "type" : "messageType",
        "userId" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73"
      },
      "-Lc52taT3Cx7SWTbrqIu" : {
        ".priority" : 1.554879846955E12,
        "message" : "哒哒哒vwダミーいい",
        "name" : "test1",
        "timestamp" : 1554879846955,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc9e6vZ5MGnqHn5k4ab" : {
        ".priority" : 1.554956976121E12,
        "message" : "大家好！欢迎👏大家使用本系统",
        "name" : "test1",
        "timestamp" : 1554956976121,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lc9eJWD8lqt1QlfHsWE" : {
        ".priority" : 1.554957027665E12,
        "message" : "本系统还有一些问题，请大家多多包涵！",
        "name" : "test1",
        "timestamp" : 1554957027665,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-LcJbU6Fn6LWU0tsBfv_" : {
        ".priority" : 1.555124056662E12,
        "message" : "test",
        "name" : "test1",
        "timestamp" : 1555124056662,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-LcJboA8Wuy5GPFr3Fn9" : {
        ".priority" : 1.555124142961E12,
        "message" : "Hello",
        "name" : "test2",
        "timestamp" : 1555124142961,
        "type" : "messageType",
        "userId" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73"
      },
      "-LcJbx3Am8Pi2HUhjo5V" : {
        ".priority" : 1.555124179388E12,
        "message" : "What are you dining",
        "name" : "test2",
        "timestamp" : 1555124179388,
        "type" : "messageType",
        "userId" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73"
      },
      "-LcJh-4WK-igvbPcTj0u" : {
        ".priority" : 1.555125502632E12,
        "message" : "hi",
        "name" : "test1",
        "timestamp" : 1555125502632,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-LcJh0gGMAOx99C4ifJ-" : {
        ".priority" : 1.555125509101E12,
        "message" : "Hello",
        "name" : "test2",
        "timestamp" : 1555125509101,
        "type" : "messageType",
        "userId" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73"
      },
      "-LcJh6B6d9KDqQqBeloU" : {
        ".priority" : 1.555125531727E12,
        "message" : "🐸",
        "name" : "test1",
        "timestamp" : 1555125531727,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-LcJh87c5vbWHx1JiM8M" : {
        ".priority" : 1.555125539581E12,
        "message" : "🌹",
        "name" : "test2",
        "timestamp" : 1555125539581,
        "type" : "messageType",
        "userId" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73"
      },
      "-LcJhFcmXgexgdvG6zNS" : {
        ".priority" : 1.555125570442E12,
        "message" : "😊",
        "name" : "test1",
        "timestamp" : 1555125570442,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-LcsQX8AW6XVfGbtosY2" : {
        ".priority" : 1.555724903417E12,
        "message" : "你好",
        "name" : "test2",
        "timestamp" : 1555724903417,
        "type" : "messageType",
        "userId" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73"
      },
      "-LdLm-WhFaIqh3ms7VOB" : {
        ".priority" : 1.5562341113E12,
        "message" : "大家好！本系统开发将优先发布海威学习模块，该模块即将进入测试阶段。明天学习会详细和大家讲解！",
        "name" : "test1",
        "timestamp" : 1556234111300,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-LdO9NQDGw8l5w8xfWA8" : {
        ".priority" : 1.556274055005E12,
        "message" : "wqeqeqwe",
        "name" : "test1",
        "timestamp" : 1556274055005,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-LdO9Of7XCqP8siD8cVk" : {
        ".priority" : 1.556274060117E12,
        "message" : "qweqweqwe",
        "name" : "test1",
        "timestamp" : 1556274060117,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-LdPIWGx0DTubHil8OQK" : {
        ".priority" : 1.556293227965E12,
        "message" : "行",
        "name" : "tei952",
        "timestamp" : 1556293227965,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-LdSWuiIhfkW7WGoX3ov" : {
        ".priority" : 1.556347333633E12,
        "message" : "qweqweqw",
        "name" : "test1",
        "timestamp" : 1556347333633,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-LdSqjSwKYGsGkwjq0AU" : {
        ".priority" : 1.556352792746E12,
        "message" : "l",
        "name" : "hally601",
        "timestamp" : 1556352792746,
        "type" : "messageType",
        "userId" : "icC70eXYlkOrVQayAOrPo0Os7is2"
      },
      "-LdYe6BVznurbL64NKzk" : {
        ".priority" : 1.556450145422E12,
        "message" : "测试",
        "name" : "test1",
        "timestamp" : 1556450145422,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-LdsVbCINPZJVMJfSyRv" : {
        ".priority" : 1.556799976476E12,
        "message" : "１１１",
        "name" : "test1",
        "timestamp" : 1556799976476,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      }
    },
    "-LdZLabGR1N_h0cosQNI" : {
      "-LdZLkytk_-RSEtTN9VV" : {
        ".priority" : 1.556461850756E12,
        "message" : "hello",
        "name" : "test1",
        "timestamp" : 1556461850756,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-LdZLz8oeDXMPIu_EwtM" : {
        ".priority" : 1.556461908796E12,
        "message" : "Thank you",
        "name" : "tei952",
        "timestamp" : 1556461908796,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-LdZRdfWX9k-arAZ6_-b" : {
        ".priority" : 1.556463394656E12,
        "message" : "测试在评论时发消息通知",
        "name" : "tei952",
        "timestamp" : 1556463394656,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-LdZV1VF2pc5BGxMv-Lt" : {
        ".priority" : 1.55646428235E12,
        "message" : "ありがとうございました。",
        "name" : "tei952",
        "timestamp" : 1556464282350,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-Ldpr7BnNFjy3FITXJue" : {
        ".priority" : 1.556755547145E12,
        "message" : "请告诉我答案",
        "name" : "tei952",
        "timestamp" : 1556755547145,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-LdsVgc6cM3G4uiM4efI" : {
        ".priority" : 1.556799998686E12,
        "message" : "HELLO",
        "name" : "test1",
        "timestamp" : 1556799998686,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Ldv9-Sdub6cT9i9tDET" : {
        ".priority" : 1.556844382269E12,
        "message" : "",
        "name" : "tei952",
        "timestamp" : 1556844382269,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-Ldv9JgQkZroRermQQ9j" : {
        ".priority" : 1.55684446513E12,
        "message" : "你好！",
        "name" : "tei952",
        "timestamp" : 1556844465130,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-LefQundB1mWKDyStMSA" : {
        ".priority" : 1.557654384118E12,
        "message" : "大家好！目前在陆续进行课程登录测试",
        "name" : "tei952",
        "timestamp" : 1557654384118,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-LefRAhkbRz-Bp6w4dVh" : {
        ".priority" : 1.55765445338E12,
        "message" : "有问题大家请即时报告",
        "name" : "tei952",
        "timestamp" : 1557654453380,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-LeqG8bxClzQcpT_NCoz" : {
        ".priority" : 1.557836110522E12,
        "message" : "测试20190514",
        "name" : "tei952",
        "timestamp" : 1557836110522,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-LeqGQ3fec1aTA4Q6HY1" : {
        ".priority" : 1.557836182011E12,
        "message" : "这个问题能否解决？",
        "name" : "tei952",
        "timestamp" : 1557836182011,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-LeqHQJbMp14-a23IV_O" : {
        ".priority" : 1.557836445478E12,
        "message" : "1.图片背景透明处理，2、按钮大小统一，3、学习提问指名课程名称和编号，4、学习时未选默认第一节，5、用户登录画面完善",
        "name" : "tei952",
        "timestamp" : 1557836445478,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-LeqHaIUyRp7bezEO2-T" : {
        ".priority" : 1.55783649029E12,
        "message" : "6、聊天问题改进",
        "name" : "tei952",
        "timestamp" : 1557836490290,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-LeqHhGlAmH76GTfXO2m" : {
        ".priority" : 1.557836518913E12,
        "message" : "7、新闻图片发布问题",
        "name" : "tei952",
        "timestamp" : 1557836518913,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-LeqHqvsaleUOob2XI2F" : {
        ".priority" : 1.557836558282E12,
        "message" : "8、证书发行功能完成",
        "name" : "tei952",
        "timestamp" : 1557836558282,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-LeqI1om6OMlnzhkk9uQ" : {
        ".priority" : 1.557836607003E12,
        "message" : "9、课程导入和测试",
        "name" : "tei952",
        "timestamp" : 1557836607003,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-LeqIDVRp4K3nqBU3PGI" : {
        ".priority" : 1.557836654841E12,
        "message" : "10、测试期间去掉确认环节",
        "name" : "tei952",
        "timestamp" : 1557836654841,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-LeqIbmZkucFKdMl8ZmV" : {
        ".priority" : 1.557836758394E12,
        "message" : "这是目前10大问题，期待能早日解决",
        "name" : "tei952",
        "timestamp" : 1557836758394,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-LeqIu4wfns55CdczdNq" : {
        ".priority" : 1.557836833517E12,
        "message" : "本系统6月开始内部测试，7月以后进入外部测试",
        "name" : "tei952",
        "timestamp" : 1557836833517,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-LeqJ5Y_iQrRZ9aPluQx" : {
        ".priority" : 1.557836884575E12,
        "message" : "11.返回按钮功能不正",
        "name" : "tei952",
        "timestamp" : 1557836884575,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-LeqJD9c0urNiXbqQmUR" : {
        ".priority" : 1.557836915725E12,
        "message" : "12.学习到最后一页无法记录",
        "name" : "tei952",
        "timestamp" : 1557836915725,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-LeqJOGPoVm7rzxt83Gs" : {
        ".priority" : 1.55783696107E12,
        "message" : "13、youtube、flash、audio等功能未实现",
        "name" : "tei952",
        "timestamp" : 1557836961070,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-LeqJbFk0Og_1SYGJDNf" : {
        ".priority" : 1.55783701836E12,
        "message" : "14、首页加入热门课程",
        "name" : "tei952",
        "timestamp" : 1557837018360,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-LeqJiu4aML-2jst7WQL" : {
        ".priority" : 1.557837049828E12,
        "message" : "15、首页加入用户使用说明",
        "name" : "tei952",
        "timestamp" : 1557837049828,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-LeqJtT2UNzexUUXQS77" : {
        ".priority" : 1.557837092935E12,
        "message" : "16、登录页面加上系统名称和语言选择",
        "name" : "tei952",
        "timestamp" : 1557837092935,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-LeqYCkOpCwKwJwJtjTi" : {
        ".priority" : 1.557840846182E12,
        "message" : "Angularシステム開発入門\\2.0 Node.js\\评论测试20190514",
        "name" : "tei952",
        "timestamp" : 1557840846182,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-LeqYTBS_Mr3cwDaqnDe" : {
        ".priority" : 1.557840913517E12,
        "message" : "看不见最后的记录",
        "name" : "tei952",
        "timestamp" : 1557840913517,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-LevZUY0LCAGIu9npCPY" : {
        ".priority" : 1.557925067141E12,
        "message" : "1-4已经解决，13部分解决，需进一步测试",
        "name" : "test1",
        "timestamp" : 1557925067141,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-LevZkWa10CC0MrZJZgk" : {
        ".priority" : 1.557925136789E12,
        "message" : "目前老师无法进入学习界面，回答学生问题",
        "name" : "test1",
        "timestamp" : 1557925136789,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lev_JIIbfyuwz3JDflF" : {
        ".priority" : 1.557925283374E12,
        "message" : "目前每天增加一门课程，欢迎参与测试的朋友学习体验",
        "name" : "test1",
        "timestamp" : 1557925283374,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lext71lQzaKqPAzQvLv" : {
        ".priority" : 1.557964030361E12,
        "message" : "课程申请处写的是老师的名称",
        "name" : "tei952",
        "timestamp" : 1557964030361,
        "type" : "messageType",
        "userId" : "iHmcxnnRDWPOJAE38On1nCdq0ir2"
      },
      "-Lf-npX5hvwhzZD8PIm2" : {
        ".priority" : 1.558012975544E12,
        "message" : "今天增加了springframework和springboot相关课程。python课程只能显示第一页。springboot中XML文件无法正常显示。",
        "name" : "test1",
        "timestamp" : 1558012975544,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      },
      "-Lf1sXWy8SVcELZoueYm" : {
        ".priority" : 1.558047762785E12,
        "message" : "python课程已经可以学习了",
        "name" : "test1",
        "timestamp" : 1558047762785,
        "type" : "messageType",
        "userId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1"
      }
    }
  },
  "room-metadata" : {
    "-LbpDP3nLIekOaNV6i9R" : {
      "authorizedUsers" : {
        "CIxg5db1wHWTu1eeymVp4EkLzfg1" : true
      },
      "avatar" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
      "createdAt" : 1554597388817,
      "createdByUserId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
      "createdByUserName" : "test1",
      "header" : "A",
      "id" : "-LbpDP3nLIekOaNV6i9R",
      "location" : "Tokyo",
      "name" : "test2",
      "type" : "private"
    },
    "-LdZLabGR1N_h0cosQNI" : {
      "authorizedUsers" : {
        "CIxg5db1wHWTu1eeymVp4EkLzfg1" : true
      },
      "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
      "createdAt" : 1556461808316,
      "createdByUserId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
      "createdByUserName" : "test1",
      "header" : "A",
      "id" : "-LdZLabGR1N_h0cosQNI",
      "location" : "Tokyo",
      "name" : "tei952",
      "type" : "private"
    }
  },
  "room-users" : {
    "-LbpDP3nLIekOaNV6i9R" : {
      "CIxg5db1wHWTu1eeymVp4EkLzfg1" : {
        "-LcswklWn161epTCpFaA" : {
          "id" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "name" : "test1"
        },
        "-LdSfrrWbLS1qpkfebBw" : {
          "id" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "name" : "test1"
        }
      },
      "iHmcxnnRDWPOJAE38On1nCdq0ir2" : {
        "-LfKgC5DZSo5SJSKErHi" : {
          "id" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
          "name" : "tei952"
        }
      }
    },
    "-LdZLabGR1N_h0cosQNI" : {
      "iHmcxnnRDWPOJAE38On1nCdq0ir2" : {
        "-LfKgC5DZSo5SJSKErHi" : {
          "id" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
          "name" : "tei952"
        }
      }
    }
  },
  "talents" : {
    "data" : {
      "-LbW06_C0f7YZbS0UVec" : {
        "Fax" : "1",
        "HP" : "1",
        "Manager" : "1",
        "Tel" : "1",
        "address" : "11",
        "application_count" : 0,
        "area" : "1",
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "created_at" : 1554258360796,
        "id" : "-LbW06_C0f7YZbS0UVec",
        "industry" : "1",
        "like_count" : 0,
        "name" : "test talent2",
        "nickname" : "test1",
        "photo" : "",
        "talenttype" : "1",
        "update_at" : 1554258361238
      },
      "-LbYXsmSycY_ip8MMMCF" : {
        "Fax" : "ddd",
        "HP" : "sss",
        "Manager" : "sss",
        "Tel" : "ddd",
        "address" : "dsdd",
        "application_count" : 0,
        "area" : "1",
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "created_at" : 1554300768882,
        "id" : "-LbYXsmSycY_ip8MMMCF",
        "industry" : "2",
        "like_count" : 0,
        "name" : "sss",
        "nickname" : "test1",
        "talenttype" : "1"
      },
      "-LbloZda0z9U_gs11lT9" : {
        "Fax" : "dsdsds",
        "HP" : "ssss",
        "Manager" : "sss",
        "Tel" : "sdss",
        "address" : "sss",
        "application_count" : 0,
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "created_at" : 1554540284663,
        "id" : "-LbloZda0z9U_gs11lT9",
        "like_count" : 0,
        "name" : "ssss",
        "nickname" : "test1",
        "talenttype" : "1"
      }
    }
  },
  "timeline" : {
    "data" : [ {
      "avatar" : "1",
      "comment_count" : 2,
      "created_at" : "1504709434",
      "id" : "41",
      "like_count" : 1,
      "nickname" : "Bob Brown",
      "original_pic" : "",
      "text" : "Behind every successful man there's a lot u unsuccessful years. https://www.google.com/"
    }, {
      "avatar" : "7",
      "comment_count" : 0,
      "created_at" : "1504708544",
      "id" : "40",
      "like_count" : 0,
      "nickname" : "Jean Kerr",
      "original_pic" : "",
      "text" : "I think success has no rules, but you can learn a lot from failure. "
    }, {
      "avatar" : "3",
      "comment_count" : 2,
      "created_at" : "1504708455",
      "id" : "39",
      "like_count" : 0,
      "nickname" : "Colin L. Powell",
      "original_pic" : "",
      "text" : "There are no secrets to success. It is the result of preparation, hard work, and learning from failure. www.youtube.com "
    }, {
      "avatar" : "5",
      "comment_count" : 0,
      "created_at" : "1504707590",
      "id" : "38",
      "like_count" : 2,
      "nickname" : "Balzac",
      "original_pic" : "https://loremflickr.com/1000/700/nature?lock=5",
      "text" : "There is no such thing as a great talent without great will - power."
    }, {
      "avatar" : "7",
      "comment_count" : 0,
      "created_at" : "1504707580",
      "id" : "37",
      "like_count" : 0,
      "nickname" : "Charles Chaplin",
      "original_pic" : "",
      "text" : "You have to believe in yourself. That's the secret of success."
    }, {
      "avatar" : "4",
      "comment_count" : 1,
      "created_at" : "1504707197",
      "id" : "36",
      "like_count" : 0,
      "nickname" : "R.M. Nixon",
      "original_pic" : "",
      "text" : "Our destiny offers not the cup of despair, but the chalice of opportunity. So let us seize it, not in fear, but in gladness."
    }, {
      "avatar" : "8",
      "comment_count" : 0,
      "created_at" : "1504706070",
      "id" : "35",
      "like_count" : 1,
      "nickname" : "Erasmus",
      "original_pic" : "https://loremflickr.com/1000/700/nature?lock=3",
      "text" : "None is of freedom or of life deserving unless he daily conquers it anew."
    }, {
      "avatar" : "3",
      "comment_count" : 0,
      "created_at" : "1504706060",
      "id" : "34",
      "like_count" : 0,
      "nickname" : "John Ruskin",
      "original_pic" : "",
      "text" : "Living without an aim is like sailing without a compass."
    }, {
      "avatar" : "6",
      "comment_count" : 0,
      "created_at" : "1504705260",
      "id" : "33",
      "like_count" : 0,
      "nickname" : "George Eliot",
      "original_pic" : "https://loremflickr.com/1000/700/nature?lock=7",
      "text" : "What makes life dreary is the want of motive."
    }, {
      "avatar" : "6",
      "comment_count" : 1,
      "created_at" : "1504705240",
      "id" : "32",
      "like_count" : 1,
      "nickname" : "Lincoln",
      "original_pic" : "",
      "text" : "Towering genius disdains a beaten path. It seeks regions hitherto unexplored."
    }, {
      "avatar" : "10",
      "comment_count" : 1,
      "created_at" : "1504705133",
      "id" : "31",
      "like_count" : 2,
      "nickname" : "Erasmus",
      "original_pic" : "",
      "text" : "None is of freedom or of life deserving unless he daily conquers it anew. "
    }, {
      "avatar" : "8",
      "comment_count" : 0,
      "created_at" : "1504704742",
      "id" : "30",
      "like_count" : 0,
      "nickname" : "Thomas Addison",
      "original_pic" : "",
      "text" : "A strong man will struggle with the storms of fate."
    } ],
    "err_code" : 0,
    "err_msg" : "success"
  },
  "tools" : {
    "data" : {
      "-LbW07QDVIQO5CWJ6-Xy" : {
        "Fax" : "1",
        "HP" : "1",
        "Manager" : "1",
        "Tel" : "1",
        "address" : "11",
        "application_count" : 1,
        "applications" : {
          "-LbfMRTfKye_3sxDm8Mp" : {
            "id" : "-LbfMRTfKye_3sxDm8Mp",
            "text" : "xss",
            "time" : 1554431985720,
            "toolid" : "-LbW07QDVIQO5CWJ6-Xy"
          }
        },
        "area" : "1",
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "created_at" : 1554258364254,
        "id" : "-LbW07QDVIQO5CWJ6-Xy",
        "industry" : "1",
        "like_count" : 1,
        "likes" : {
          "-LckQx7fB4yet8qrIZz9" : {
            "avatar" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
            "id" : "-LckQx7fB4yet8qrIZz9",
            "name" : "test2",
            "time" : 1555590796040,
            "toolid" : "-LbW07QDVIQO5CWJ6-Xy"
          }
        },
        "name" : "test tool2",
        "nickname" : "test1",
        "photo" : "",
        "tooltype" : "1",
        "update_at" : 1554258364678
      },
      "-LbYZjcGci7H_jDGoD-F" : {
        "Fax" : "sss",
        "HP" : "sss",
        "Manager" : "sss",
        "Tel" : "sss",
        "address" : "sss",
        "application_count" : 0,
        "area" : "1",
        "avatar" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "created_at" : 1554301255816,
        "id" : "-LbYZjcGci7H_jDGoD-F",
        "industry" : "2",
        "like_count" : 1,
        "likes" : {
          "-LckQynkxnRgHHZeqDf3" : {
            "avatar" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
            "id" : "-LckQynkxnRgHHZeqDf3",
            "name" : "test2",
            "time" : 1555590802881,
            "toolid" : "-LbYZjcGci7H_jDGoD-F"
          }
        },
        "name" : "sss",
        "nickname" : "test1",
        "tooltype" : "1"
      }
    },
    "err_code" : 0,
    "err_msg" : "success"
  },
  "user-names-online" : {
    "tei952" : {
      "-LfKgC5DZSo5SJSKErHi" : {
        "id" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
        "name" : "tei952"
      }
    },
    "test1" : {
      "-LcswklWn161epTCpFaA" : {
        "id" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "name" : "test1"
      },
      "-LdS9TiUDVUXwSXEaL1O" : {
        "id" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "name" : "test1"
      },
      "-LdSfrrWbLS1qpkfebBw" : {
        "id" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "name" : "test1"
      },
      "-LfKlXDBUl9n729W1JCK" : {
        "id" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
        "name" : "test1"
      }
    }
  },
  "user_login" : {
    "data" : {
      "sid" : "e651771fe37dc17c17421331a87721",
      "user" : {
        "avatar_url" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/android-icon-xxhdpi-144x144.png?alt=media&token=d6e43d58-52c6-4ed6-ac2d-d68072d5a12a",
        "gender" : "m",
        "id" : 10001,
        "location" : "Tokyo",
        "login_name" : "wohapp@highwayns.com",
        "nick_name" : "wohApp",
        "points" : 267
      }
    },
    "err_code" : 0,
    "err_msg" : "success"
  },
  "users" : {
    "CIxg5db1wHWTu1eeymVp4EkLzfg1" : {
      "avatar_url" : "",
      "company_count" : 8,
      "consultant_count" : 2,
      "contact_count" : 0,
      "dispatcher_count" : 2,
      "event_count" : 2,
      "gender" : "",
      "id" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
      "job_count" : 6,
      "knowledge_count" : 3,
      "learnings" : {
        "-LbW07Cj8C37LDyZeKHF" : {
          "LearningStatus" : true,
          "approval_at" : 1556488258616,
          "contentOrd" : "2"
        },
        "-LbYZZXvYQxtpo2AWpzL" : {
          "LearningStatus" : true,
          "approval_at" : 1554951668780,
          "contentOrd" : 2
        },
        "-LdLtODpcc-J83q1aU5f" : {
          "LearningStatus" : true,
          "approval_at" : 1558071268381,
          "contentOrd" : "06"
        },
        "-LdLuLklhwL7keqLFNmD" : {
          "LearningStatus" : true,
          "approval_at" : 1558012714405,
          "contentOrd" : "06"
        },
        "-LdLuU-AHWwvMHDT-QpQ" : {
          "LearningStatus" : true,
          "approval_at" : 1558018634602,
          "contentOrd" : "05"
        },
        "-LdLubY6J4gW1t94t63x" : {
          "LearningStatus" : true,
          "approval_at" : 1558018085797,
          "contentOrd" : "10"
        },
        "-LedXZi8fzaKO45rL-Kv" : {
          "LearningStatus" : true,
          "approval_at" : 1557988190953,
          "contentOrd" : "03"
        }
      },
      "location" : "",
      "login_name" : "test1@gmail.com",
      "name" : "test1",
      "photo" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/users%2FCIxg5db1wHWTu1eeymVp4EkLzfg1?alt=media&token=c3889a1d-9cf5-4c58-9fdc-6f078f1ce32e",
      "points" : 0,
      "post_count" : 5,
      "project_count" : 2,
      "rooms" : {
        "-LbpDP3nLIekOaNV6i9R" : {
          "active" : true,
          "avatar" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
          "header" : "A",
          "id" : "-LbpDP3nLIekOaNV6i9R",
          "location" : "Tokyo",
          "name" : "test2"
        },
        "-LdZLabGR1N_h0cosQNI" : {
          "active" : true,
          "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
          "header" : "A",
          "id" : "-LdZLabGR1N_h0cosQNI",
          "location" : "Tokyo",
          "name" : "tei952"
        }
      },
      "sessions" : {
        "-LcswklWn161epTCpFaA" : true,
        "-LdS9TiUDVUXwSXEaL1O" : true,
        "-LdSfrrWbLS1qpkfebBw" : true,
        "-LfKlXDBUl9n729W1JCK" : true
      },
      "talent_count" : 3,
      "tool_count" : 2
    },
    "GQxxS27YoMV4aMVZ69C9uVimoG63" : {
      "avatar_url" : "",
      "gender" : "",
      "id" : "GQxxS27YoMV4aMVZ69C9uVimoG63",
      "location" : "",
      "login_name" : "test5@gmail.com",
      "name" : "test5",
      "photo" : "",
      "points" : 0
    },
    "PHa92muIF0Vl4DmIaSrAYSn2sFz1" : {
      "avatar_url" : "",
      "gender" : "",
      "id" : "PHa92muIF0Vl4DmIaSrAYSn2sFz1",
      "location" : "",
      "login_name" : "xhdpgroop@123.com",
      "name" : "无",
      "photo" : "",
      "points" : 0
    },
    "SltouNWndEXkvLg3nCWCiHXdmnx1" : {
      "avatar_url" : "",
      "gender" : "",
      "id" : "SltouNWndEXkvLg3nCWCiHXdmnx1",
      "location" : "",
      "login_name" : "test3@gmail.com",
      "name" : "test3",
      "photo" : "",
      "points" : 0
    },
    "Vn8NjeM3yCh7vsK6mwhEdk9d1h73" : {
      "avatar_url" : "",
      "gender" : "",
      "id" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
      "invites" : {
        "-LbM7zO3wA7flCWYyECk" : {
          "fromUserId" : "CIxg5db1wHWTu1eeymVp4EkLzfg1",
          "fromUserName" : "test1",
          "id" : "-LbM7zO3wA7flCWYyECk",
          "roomId" : "-LbLowCug333-9BAkwM9",
          "status" : "declined",
          "toUserName" : "test2"
        }
      },
      "learnings" : {
        "-LbW07Cj8C37LDyZeKHF" : {
          "LearningStatus" : true,
          "approval_at" : 1556060905815,
          "contentOrd" : "3"
        },
        "-LbYZZXvYQxtpo2AWpzL" : {
          "LearningStatus" : true,
          "approval_at" : 1557890768999,
          "contentOrd" : "18"
        }
      },
      "location" : "",
      "login_name" : "test2@gmail.com",
      "name" : "test2",
      "photo" : "https://firebasestorage.googleapis.com/v0/b/wohapp-3a179.appspot.com/o/users%2FVn8NjeM3yCh7vsK6mwhEdk9d1h73?alt=media&token=c483679f-b290-41b1-b5c6-7512118e3c70",
      "points" : 0,
      "rooms" : {
        "-LbpDP3nLIekOaNV6i9R" : {
          "active" : true,
          "avatar" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
          "header" : "A",
          "id" : "-LbpDP3nLIekOaNV6i9R",
          "location" : "Tokyo",
          "name" : "test2"
        }
      }
    },
    "ejGASFLSr1RsV2ZiVGtENSZ0JP33" : {
      "avatar_url" : "",
      "gender" : "",
      "id" : "ejGASFLSr1RsV2ZiVGtENSZ0JP33",
      "location" : "",
      "login_name" : "zhoumeiqi77@icloud.com",
      "name" : "IT",
      "photo" : "",
      "points" : 0
    },
    "err_code" : 0,
    "err_msg" : "success",
    "fxsAVCvXnrfUbJ1XJXa8ptBAAZv2" : {
      "avatar_url" : "",
      "gender" : "",
      "id" : "fxsAVCvXnrfUbJ1XJXa8ptBAAZv2",
      "location" : "",
      "login_name" : "test4@gmail.com",
      "name" : "test4",
      "photo" : "",
      "points" : 0
    },
    "iHmcxnnRDWPOJAE38On1nCdq0ir2" : {
      "avatar_url" : "",
      "gender" : "",
      "id" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
      "knowledge_count" : 1,
      "learnings" : {
        "-LbW07Cj8C37LDyZeKHF" : {
          "LearningStatus" : true,
          "approval_at" : 1557841846221,
          "contentOrd" : "04"
        },
        "-LbYZZXvYQxtpo2AWpzL" : {
          "LearningStatus" : true,
          "approval_at" : 1557836086306,
          "contentOrd" : "16"
        }
      },
      "location" : "",
      "login_name" : "zhengjun@jp.highwayns.com",
      "name" : "tei952",
      "photo" : "",
      "points" : 0,
      "rooms" : {
        "-LbpDP3nLIekOaNV6i9R" : {
          "active" : true,
          "avatar" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
          "header" : "A",
          "id" : "-LbpDP3nLIekOaNV6i9R",
          "location" : "Tokyo",
          "name" : "test2"
        },
        "-LdZLabGR1N_h0cosQNI" : {
          "active" : true,
          "avatar" : "iHmcxnnRDWPOJAE38On1nCdq0ir2",
          "header" : "A",
          "id" : "-LdZLabGR1N_h0cosQNI",
          "location" : "Tokyo",
          "name" : "tei952"
        }
      },
      "sessions" : {
        "-LfKgC5DZSo5SJSKErHi" : true
      }
    },
    "icC70eXYlkOrVQayAOrPo0Os7is2" : {
      "avatar_url" : "",
      "gender" : "",
      "id" : "icC70eXYlkOrVQayAOrPo0Os7is2",
      "location" : "",
      "login_name" : "hally601@yahoo.co.jp",
      "name" : "hally601",
      "photo" : "",
      "points" : 0,
      "rooms" : {
        "-LbpDP3nLIekOaNV6i9R" : {
          "active" : true,
          "avatar" : "Vn8NjeM3yCh7vsK6mwhEdk9d1h73",
          "header" : "A",
          "id" : "-LbpDP3nLIekOaNV6i9R",
          "location" : "Tokyo",
          "name" : "test2"
        }
      }
    }
  }
}
